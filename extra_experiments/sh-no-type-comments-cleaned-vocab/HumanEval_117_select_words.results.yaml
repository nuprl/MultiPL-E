language: sh
name: HumanEval_117_select_words
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\"\
    \ ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed -e 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [[ $count -eq $n ]]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -d -c '[bcdfghjklmnpqrstvwxz]')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\\\"$word\\\"\
    )\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=($word)\n \
    \       fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ c=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n  \
    \  local i=0\n    local o=0\n    local u=0\n    local space=0\n    local length=${#s}\n\
    \    for ((i=0; i<length; i++)); do\n        c=\"${s:i:1}\"\n        if [[ \"\
    $c\" == \" \" ]]; then\n            if [[ \"$consonants\" == \"$n\" ]]; then\n\
    \                words+=(\"$word\")\n            fi\n            word=\"\"\n \
    \           consonants=0\n            space=1\n        else\n            if [[\
    \ \"$space\" == \"1\" ]]; then\n                word=\"$c\"\n                space=0\n\
    \            else\n                word+=\"$c\"\n            fi\n            case\
    \ \"$c\" in\n                \"a\")\n                    a=1\n               \
    \     ;;\n                \"e\")\n                    e=1\n                  \
    \  ;;\n                \"i\")\n                    i=1\n                    ;;\n\
    \                \"o\")\n                    o=1\n                    ;;\n   \
    \             \"u\")\n                    u=1\n                    ;;\n      \
    \          *)\n                    consonants=$((consonants+1))\n            \
    \        ;;\n            esac\n        fi\n    done\n    if [[ \"$consonants\"\
    \ == \"$n\" ]]; then\n        words+=(\"$word\")\n    fi\n    echo \"${words[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=\"$(echo \"$s\" | tr ' ' '\\n')\"\n    local result=\"\"\
    \n    for word in $words; do\n        local consonants=\"$(echo \"$word\" | tr\
    \ -cd '[^aeiouAEIOU]')\"\n        if [ ${#consonants} -eq $n ]; then\n       \
    \     result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | grep -o -i '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -l)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=\"$1\"\n    local\
    \ n=\"$2\"\n    local words=($(echo \"$string\" | tr -s ' ' '\\n'))\n    local\
    \ result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ \"$word\" | sed 's/[aeiou]//g')\n        if [[ ${#consonants} -eq $n ]]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ char=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    for ((i=0; i<${#s}; i++)); do\n\
    \        char=\"${s:$i:1}\"\n        if [[ \"$char\" == \" \" ]]; then\n     \
    \       if [[ \"$consonants\" == \"$n\" ]]; then\n                words+=(\"$word\"\
    )\n            fi\n            word=\"\"\n            consonants=0\n        else\n\
    \            word+=\"$char\"\n            case \"$char\" in\n                [b-df-hj-np-tv-zB-DF-HJ-NP-TV-Z])\n\
    \                    consonants=$((consonants+1))\n                    ;;\n  \
    \          esac\n        fi\n    done\n    if [[ \"$consonants\" == \"$n\" ]];\
    \ then\n        words+=(\"$word\")\n    fi\n    echo \"${words[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=()\n    local word=''\n    local consonants=0\n    local i=0\n\
    \    local c=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    for ((i=0; i<${#s};\
    \ i++)); do\n        c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n    \
    \        word+=$c\n        else\n            if [[ ${#word} -gt 0 ]]; then\n \
    \               words+=(\"$word\")\n                word=''\n            fi\n\
    \        fi\n    done\n    if [[ ${#word} -gt 0 ]]; then\n        words+=(\"$word\"\
    )\n    fi\n    local result=()\n    for word in \"${words[@]}\"; do\n        consonants=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            c=${word:$i:1}\n      \
    \      if [[ ! ${vowels[*]} =~ $c ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        done\n        if [[ $consonants -eq $n ]]; then\n   \
    \         result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxzBCDFGHJKLMNPQRSTVWXZ]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo \"$s\" | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo \"$word\" | tr -cd '[^aeiouAEIOU]')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep -o\
    \ '[^aeiou]' | wc -l)\n        if [ \"$count\" -eq \"$n\" ]; then\n          \
    \  result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=\"$(echo \"$s\" | tr ' ' '\\n')\"\n    local result=\"\"\
    \n    for word in $words; do\n        local consonants=\"$(echo \"$word\" | tr\
    \ -cd '[^aeiouAEIOU]')\"\n        if [ ${#consonants} -eq $n ]; then\n       \
    \     result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | tr\
    \ -cd '[b-df-hj-np-tv-z]')\n        if [[ ${#consonants} -eq $n ]]; then\n   \
    \         result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=''\n    local consonants=0\n    local\
    \ letter=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local is_vowel=0\n  \
    \  for (( i=0; i<${#s}; i++ )); do\n        letter=\"${s:$i:1}\"\n        if [[\
    \ \"$letter\" == ' ' ]]; then\n            if [[ \"$consonants\" == \"$n\" ]];\
    \ then\n                words+=(\"\\\"$word\\\"\")\n            fi\n         \
    \   word=''\n            consonants=0\n        else\n            word+=\"$letter\"\
    \n            is_vowel=0\n            for vowel in \"${vowels[@]}\"; do\n    \
    \            if [[ \"$letter\" == \"$vowel\" ]]; then\n                    is_vowel=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ \"$is_vowel\" == 0 ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        fi\n    done\n    if [[ \"$consonants\" == \"$n\" ]];\
    \ then\n        words+=(\"\\\"$word\\\"\")\n    fi\n    echo \"${words[@]}\"\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -dc 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [[ $consonants -eq $n ]]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local str=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=''\n    local consonants=0\n    local\
    \ char=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        char=\"${str:$i:1}\"\n        if [[ \"\
    $char\" == ' ' ]]; then\n            if [[ \"$consonants\" == \"$n\" ]]; then\n\
    \                words+=(\"$word\")\n            fi\n            word=''\n   \
    \         consonants=0\n        else\n            word+=\"$char\"\n          \
    \  is_vowel=0\n            for vowel in \"${vowels[@]}\"; do\n               \
    \ if [[ \"$char\" == \"$vowel\" ]]; then\n                    is_vowel=1\n   \
    \                 break\n                fi\n            done\n            if\
    \ [[ \"$is_vowel\" == 0 ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        fi\n    done\n    if [[ \"$consonants\" == \"$n\" ]];\
    \ then\n        words+=(\"$word\")\n    fi\n    echo \"${words[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo \"\
    Not implemented\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\"\
    \ ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n\
    \    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | sed\
    \ 's/[^aeiou]//g' | wc -c)\n        if [[ $count -eq $n ]]; then\n           \
    \ result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $consonants -eq $n ]; then\n            result+=($(printf\
    \ '\"%s\"' $word))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo $1\
    \ | tr ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr '\\n' ' ' | sed 's/^ *//' |\
    \ sed 's/ *$//' | sed 's/ /\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | sed -E 's/[aeiou]//g')\n        if [[ ${#consonants} -eq $n ]]; then\n   \
    \         result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo $s |\
    \ tr \" \" \"\\n\" | grep -E \"^[^aeiou]{$n}$\" | tr \"\\n\" \" \" | sed 's/ $//'\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | sed 's/[aeiou]//g')\n        if [[ ${#consonants} -eq $n ]]; then\n      \
    \      result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | tr\
    \ -cd '[^aeiouAEIOU]' | wc -c)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo \"$s\" | tr ' ' '\\n')\n    local result=\"\"\n    for\
    \ word in $words; do\n        local consonants=$(echo \"$word\" | tr -d -c 'bcdfghjklmnpqrstvwxyz')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=\"\\\"$word\\\
    \" \"\n        fi\n    done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            local c=${word:$i:1}\n            if [[ $c =~ [^aeiou]\
    \ ]]; then\n                ((count++))\n            fi\n        done\n      \
    \  if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\")\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local str=$1\n    local n=$2\n\
    \    local words=($(echo $str | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in ${words[@]}; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo $1\
    \ | tr ' ' '\\n' | grep -E \"^[^aeiouAEIOU]*[aeiouAEIOU]{$2}[^aeiouAEIOU]*$\"\
    \ | tr '\\n' ' ' | sed 's/^ *//' | sed 's/ *$//' | sed 's/ /\", \"/g' | sed 's/^/\"\
    /' | sed 's/$/\"/'\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\"\
    \ ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n\
    \    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo \"\
    Not implemented\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\"\
    \ ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n\
    \    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local str=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ i=0\n    local c=\"\"\n    local vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n  \
    \  local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n    local\
    \ is_quote=0\n    local is_word=0\n    local is_word_end=0\n    local is_word_start=0\n\
    \    local is_word_middle=0\n    local is_word_found=0\n    local is_word_found_end=0\n\
    \    local is_word_found_start=0\n    local is_word_found_middle=0\n    local\
    \ is_word_found_middle_end=0\n    local is_word_found_middle_start=0\n    local\
    \ is_word_found_middle_middle=0\n    local is_word_found_middle_middle_end=0\n\
    \    local is_word_found_middle_middle_start=0\n    local is_word_found_middle_middle_middle=0\n\
    \    local is_word_found_middle_middle_middle_end=0\n    local is_word_found_middle_middle_middle_start=0\n\
    \    local is_word_found_middle_middle_middle_middle=0\n    local is_word_found_middle_middle_middle_middle_end=0\n\
    \    local is_word_found_middle_middle_middle_middle_start=0\n    local is_word_found_middle_middle_middle_middle_middle=0\n\
    \    local is_word_found_middle_middle_middle_middle_middle_end=0\n    local is_word_found_middle_middle_middle_middle_middle_start=0\n\
    \    local is_word_found_middle_middle_middle_middle_middle_middle=0\n    local\
    \ is_word_found_middle_middle_middle_middle_middle_middle_end=0\n    local is_word_found_middle_middle_middle_middle_middle_middle_start=0\n\
    \    local is_word_found\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\
    \")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [[ $count -eq $n ]]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=\"$1\"\n    local\
    \ n=\"$2\"\n    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$count\" -eq \"$n\" ]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | tr\
    \ -cd '[^aeiouAEIOU]' | wc -c)\n        if [[ $consonants -eq $n ]]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo \"\
    Not implemented\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\"\
    \ ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n\
    \    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local count=$(echo $word | grep -o '[^aeiou]' | wc -l)\n\
    \        if [ $count -eq $n ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -E 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\
    \")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -E 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo \"\
    Not implemented\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\"\
    \ ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n\
    \    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\\\"\
    $word\\\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr \" \" \"\\n\"))\n    local result=()\n    for\
    \ word in ${words[@]}; do\n        local consonants=$(echo $word | tr -cd \"[^aeiouAEIOU]\"\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\\\"\
    $word\\\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local word\n    local words=()\n    local consonants=0\n    for word in $s;\
    \ do\n        consonants=0\n        for (( i=0; i<${#word}; i++ )); do\n     \
    \       if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        done\n        if [[ $consonants -eq $n ]]; then\n   \
    \         words+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${words[@]}\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -E 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [[ $count -eq $n ]]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=$(echo $string | tr ' ' '\\n')\n    local result=()\n    for\
    \ word in $words; do\n        local consonants=$(echo $word | sed -E 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=''\n    local consonants=0\n    local\
    \ char=''\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    for ((i=0; i<${#s}; i++));\
    \ do\n        char=\"${s:$i:1}\"\n        if [[ \"$char\" == ' ' ]]; then\n  \
    \          if [[ \"$consonants\" == \"$n\" ]]; then\n                words+=(\"\
    $word\")\n            fi\n            word=''\n            consonants=0\n    \
    \    else\n            word+=\"$char\"\n            for ((j=0; j<${#vowels[@]};\
    \ j++)); do\n                if [[ \"$char\" == \"${vowels[$j]}\" ]]; then\n \
    \                   consonants=0\n                    break\n                fi\n\
    \            done\n            if [[ \"$consonants\" != \"0\" ]]; then\n     \
    \           consonants=$((consonants+1))\n            fi\n        fi\n    done\n\
    \    if [[ \"$consonants\" == \"$n\" ]]; then\n        words+=(\"$word\")\n  \
    \  fi\n    for ((k=0; k<${#words[@]}; k++)); do\n        words[$k]=\"\\\"${words[$k]}\\\
    \"\"\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=($word)\n \
    \       fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -d -c 'bcdfghjklmnpqrstvwxyz')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | tr\
    \ -cd '[^aeiouAEIOU]' | wc -c)\n        if [ \"$count\" -eq \"$n\" ]; then\n \
    \           result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=\"$(echo \"$s\" | tr ' ' '\\n')\"\n    local result=()\n\
    \    for word in $words; do\n        local consonants=$(echo \"$word\" | tr -cd\
    \ '[^aeiouAEIOU]' | wc -m)\n        if [[ $consonants -eq $n ]]; then\n      \
    \      result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ char=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n  \
    \  local i=0\n    local o=0\n    local u=0\n    local space=0\n    local len=0\n\
    \    local len_s=0\n    local len_word=0\n    local len_words=0\n    local result=\"\
    \"\n    local result_len=0\n    local result_len_words=0\n    local result_len_words_i=0\n\
    \    local result_len_words_j=0\n    local result_len_words_k=0\n    local result_len_words_l=0\n\
    \    local result_len_words_m=0\n    local result_len_words_n=0\n    local result_len_words_o=0\n\
    \    local result_len_words_p=0\n    local result_len_words_q=0\n    local result_len_words_r=0\n\
    \    local result_len_words_s=0\n    local result_len_words_t=0\n    local result_len_words_u=0\n\
    \    local result_len_words_v=0\n    local result_len_words_w=0\n    local result_len_words_x=0\n\
    \    local result_len_words_y=0\n    local result_len_words_z=0\n    local result_len_words_a=0\n\
    \    local result_len_words_e=0\n    local result_len_words_i=0\n    local result_len_words_o=0\n\
    \    local result_len_words_u=0\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o -i '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=\"\"\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $consonants -eq $n ]; then\n            result=\"$result\
    \ \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo $s |\
    \ tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/ $//'\n}\n\
    \ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [[ $count -eq $n ]]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -r 's/[aeiou]//gi'\
    \ | wc -c)\n        if [[ $consonants -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n  local s=$1\n  local n=$2\n  local\
    \ words=($(echo \"$s\" | tr ' ' '\\n'))\n  local word\n  local consonants\n  local\
    \ result=()\n  for word in \"${words[@]}\"; do\n    consonants=$(echo \"$word\"\
    \ | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n    if [ \"$consonants\" -eq \"$n\"\
    \ ]; then\n      result+=(\"\\\"$word\\\"\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    for word\
    \ in $s; do\n        if [ $(echo $word | grep -o -P '[^aeiou]' | wc -l) -eq $n\
    \ ]; then\n            echo -n '\"'$word'\"'\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n    \
    \        local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=()\n    local word=\"\"\n    local consonants=0\n    local char=\"\
    \"\n    local vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    for ((i=0; i<${#s};\
    \ i++)); do\n        char=${s:$i:1}\n        if [[ \"$char\" =~ [a-zA-Z] ]]; then\n\
    \            word+=$char\n        else\n            if [[ -n \"$word\" ]]; then\n\
    \                words+=(\"$word\")\n                word=\"\"\n            fi\n\
    \        fi\n    done\n    if [[ -n \"$word\" ]]; then\n        words+=(\"$word\"\
    )\n    fi\n    local result=()\n    for word in \"${words[@]}\"; do\n        consonants=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            char=${word:$i:1}\n   \
    \         if [[ ! \" ${vowels[@]} \" =~ \" ${char,,} \" ]]; then\n           \
    \     ((consonants++))\n            fi\n        done\n        if [[ $consonants\
    \ -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=($(echo\
    \ $word | sed 's/^/\"/;s/$/\"/'))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    string=$1\n    n=$2\n    echo\
    \ $string | tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g' | sed 's/ /\", \"/g' | sed 's/^/\"/g' | sed 's/$/\"/g'\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -E 's/[aeiouyAEIOUY]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed 's/[aeiou]//gi' |\
    \ sed 's/[^a-z]//g')\n        if [ ${#consonants} -eq $n ]; then\n           \
    \ result+=(\\\"$word\\\")\n        fi\n    done\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr -d ' '))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [[ $count -eq $n ]]; then\n            result+=($(echo\
    \ \"$word\" | sed 's/\"/\\\\\"/g'))\n        fi\n    done\n    echo \"[\\\"${result[@]}\\\
    \"]\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate\
    \ \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\"\
    \ \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n\
    \    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\"\
    \ \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr -s ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd\
    \ 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ' | wc -c)\n        if [ $consonants\
    \ -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr \" \" \"\\n\"))\n    local result=()\n    for\
    \ word in ${words[@]}; do\n        local count=$(echo $word | grep -o -i \"[^aeiou]\"\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr -d ' '))\n    local result=()\n    for word in\
    \ ${words[@]}; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word\n    local consonants\n    while read\
    \ -r word; do\n        consonants=$(echo \"$word\" | grep -o '[^aeiouAEIOU]' |\
    \ wc -l)\n        if [[ \"$consonants\" -eq \"$n\" ]]; then\n            words+=(\"\
    $word\")\n        fi\n    done <<< \"$s\"\n    echo \"${words[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n  # your code here\n  echo $1 | tr\
    \ ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr '\\n' ' ' | sed 's/^ *//' | sed\
    \ 's/ *$//' | sed 's/ /\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo \"$s\"\
    \ | tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ i=0\n    local c=\"\"\n    local is_consonant=0\n    local is_word=0\n    local\
    \ is_space=0\n    local is_quote=0\n    local is_escape=0\n    local is_first_char=0\n\
    \    local is_last_char=0\n    local is_first_word=0\n    local is_last_word=0\n\
    \    local is_first_quote=0\n    local is_last_quote=0\n    local is_first_escape=0\n\
    \    local is_last_escape=0\n    local is_first_space=0\n    local is_last_space=0\n\
    \    local is_first_consonant=0\n    local is_last_consonant=0\n    local is_first_vowel=0\n\
    \    local is_last_vowel=0\n    local is_first_letter=0\n    local is_last_letter=0\n\
    \    local is_first_letter_or_space=0\n    local is_last_letter_or_space=0\n \
    \   local is_first_letter_or_quote=0\n    local is_last_letter_or_quote=0\n  \
    \  local is_first_letter_or_escape=0\n    local is_last_letter_or_escape=0\n \
    \   local is_first_letter_or_consonant=0\n    local is_last_letter_or_consonant=0\n\
    \    local is_first_letter_or_vowel=0\n    local is_last_letter_or_vowel=0\n \
    \   local is_first_letter_or_word=0\n    local is_last_letter_or_word=0\n    local\
    \ is_first_letter_or_word_or_space=0\n    local is_last_letter_or_word_or_space=0\n\
    \    local is_first_letter_or_word_or_quote=0\n    local is_last_letter_or_word_or_quote=0\n\
    \    local is_first_letter_\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ \"$count\" -eq \"$n\" ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [[ $consonants -eq $n ]]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ i=0\n    local c=\"\"\n    local is_consonant=0\n    local is_word=0\n    local\
    \ is_space=0\n    local is_letter=0\n    local is_quote=0\n    local is_escape=0\n\
    \    local is_escape_quote=0\n    local is_escape_space=0\n    local is_escape_backslash=0\n\
    \    local is_escape_backslash_quote=0\n    local is_escape_backslash_space=0\n\
    \    local is_escape_backslash_backslash=0\n    local is_escape_backslash_backslash_quote=0\n\
    \    local is_escape_backslash_backslash_space=0\n    local is_escape_backslash_backslash_backslash=0\n\
    \    local is_escape_backslash_backslash_backslash_quote=0\n    local is_escape_backslash_backslash_backslash_space=0\n\
    \    local is_escape_backslash_backslash_backslash_backslash=0\n    local is_escape_backslash_backslash_backslash_backslash_quote=0\n\
    \    local is_escape_backslash_backslash_backslash_backslash_space=0\n    local\
    \ is_escape_backslash_backslash_backslash_backslash_backslash=0\n    local is_escape_backslash_backslash_backslash_backslash_backslash_quote=0\n\
    \    local is_escape_backslash_backslash_backslash_backslash_backslash_space=0\n\
    \    local is_escape_backslash_backslash_backslash_backslash_backslash_backslash=0\n\
    \    local is_escape_backslash_backslash_backslash_backslash_backslash_backslash_quote=0\n\
    \    local is_escape_backslash_\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [[ $count -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\"\
    \ ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -d -c 'bcdfghjklmnpqrstvwxz')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo \"$s\" | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo \"$word\" | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep -o\
    \ '[^aeiou]' | wc -l)\n        if [ \"$count\" -eq \"$n\" ]; then\n          \
    \  result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\
    \")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr \" \" \"\\n\")\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\\\"$word\\\"\
    )\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed -E 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo $s |\
    \ tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/ $//'\n}\n\
    \ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l) -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local count=$(echo $word | grep -o \"[^aeiouAEIOU]\"\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiouAEIOU]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo $s |\
    \ tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/^ *//' | sed\
    \ 's/ *$//' | sed 's/ /\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ i=0\n    local c=\"\"\n    local is_consonant=0\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_end=0\n    local is_start=0\n    local is_word=0\n\
    \    local is_word_start=0\n    local is_word_end=0\n    local is_word_found=0\n\
    \    local is_word_consonants_found=0\n    local is_word_consonants_not_found=0\n\
    \    local is_word_consonants_found_end=0\n    local is_word_consonants_not_found_end=0\n\
    \    local is_word_consonants_found_start=0\n    local is_word_consonants_not_found_start=0\n\
    \    local is_word_consonants_found_start_end=0\n    local is_word_consonants_not_found_start_end=0\n\
    \    local is_word_consonants_found_start_end_space=0\n    local is_word_consonants_not_found_start_end_space=0\n\
    \    local is_word_consonants_found_start_end_space_letter=0\n    local is_word_consonants_not_found_start_end_space_letter=0\n\
    \    local is_word_consonants_found_start_end_space_letter_consonant=0\n    local\
    \ is_word_consonants_not_found_start_end_space_letter_consonant=0\n    local is_word_consonants_found_start_end_space_letter_consonant_end=0\n\
    \    local is_word_consonants_not_found_start_end_space_letter_consonant_end=0\n\
    \    local is_word_consonants_found_start_end_space_letter_consonant_end_start=0\n\
    \    local is_word_consonants_not_found_start_end_space_\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        if [[ $(echo \"$word\" | grep -o\
    \ '[^aeiouAEIOU]' | wc -l) -eq \"$n\" ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [ $count\
    \ -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr -s ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g')\n  \
    \      if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n     \
    \   fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=$(echo \"$s\" | tr ' ' '\\n')\n    local result=()\n   \
    \ for word in $words; do\n        local consonants=$(echo \"$word\" | grep -o\
    \ '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\\\"$word\\\"\
    )\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n       \
    \ if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n\
    \        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l) -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\"\
    ) = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary\
    \ lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle\
    \ sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[\
    \ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [[ $count -eq $n ]]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # your code here\n    echo $1\
    \ | tr -s ' ' '\\n' | grep -E \"^[^aeiou]*([aeiou][^aeiou]){$2}[^aeiou]*$\" |\
    \ tr -d '\"'\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n  \
    \  [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[\
    \ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello\
    \ world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"\
    Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b\
    \ c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    s=$1\n    n=$2\n    echo $s |\
    \ tr ' ' '\\n' | grep -E \"^[^aeiou]{$n}$\" | tr '\\n' ' ' | sed 's/ $//'\n}\n\
    \ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=$(echo $string | tr \" \" \"\\n\")\n    local result=\"\"\n \
    \   for word in $words; do\n        local consonants=$(echo $word | tr -d -c \"\
    bcdfghjklmnpqrstvwxyz\" | wc -c)\n        if [ $consonants -eq $n ]; then\n  \
    \          result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo \"\
    [$result]\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n  \
    \  [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[\
    \ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello\
    \ world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"\
    Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b\
    \ c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            local char=${word:$i:1}\n            if [[ $char =~\
    \ [^aeiouAEIOU] ]]; then\n                count=$((count+1))\n            fi\n\
    \        done\n        if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\
    \")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n          \
    \      count=$((count+1))\n            fi\n        done\n        if [ $count -eq\
    \ $n ]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n  \
    \  [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[\
    \ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello\
    \ world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"\
    Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b\
    \ c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local number=$2\n\
    \    local words=$(echo $string | tr ' ' '\\n')\n    local result=()\n    for\
    \ word in $words; do\n        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $consonants -eq $number ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n\
    \    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary\
    \ had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a\
    \ little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\"\
    \ \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n\
    \    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\
    \" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    for\
    \ ((i=0; i<${#s}; i++)); do\n        local char=\"${s:$i:1}\"\n        if [[ \"\
    $char\" == \" \" ]]; then\n            if [[ \"$consonants\" == \"$n\" ]]; then\n\
    \                words+=(\"$word\")\n            fi\n            word=\"\"\n \
    \           consonants=0\n        else\n            word+=\"$char\"\n        \
    \    if [[ \"$char\" =~ [^aeiou] ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        fi\n    done\n    if [[ \"$consonants\" == \"$n\" ]];\
    \ then\n        words+=(\"$word\")\n    fi\n    echo \"${words[@]}\"\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o -i '[^aeiou]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo $word | grep -o -i '[^aeiouy]' | wc -l)\n\
    \        if [ $consonants -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed -r 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"$word\")\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words\n    local word\n    local consonants\n    local consonant\n\
    \    local result\n    words=($(echo $s | tr ' ' '\\n'))\n    for word in \"${words[@]}\"\
    ; do\n        consonants=$(echo $word | tr -d -c 'bcdfghjklmnpqrstvwxz')\n   \
    \     if [ ${#consonants} -eq $n ]; then\n            result+=($(echo $word |\
    \ tr -d '\\n'))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=(\\\"$word\\\
    \")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Implement me\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | sed -r 's/[^bcdfghjklmnpqrstvwxyz]//g' | wc -c)\n        if [ \"$consonants\"\
    \ -eq \"$n\" ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n  \
    \  done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"\
    4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"\
    Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n \
    \   [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"\
    Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$count\" -eq \"$n\" ]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[*]}]\"\
    \n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
    \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"\
    simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\"\
    ) = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n   \
    \ [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"\
    1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=($(printf\
    \ '\"%s\"' $word))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\"\
    \ | tr -dc 'bcdfghjklmnpqrstvwxyz' | wc -c)\n        if [[ \"$consonants\" -eq\
    \ \"$n\" ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    select_words \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\" \"4\") = \"\
    little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\") = \"Mary lamb\"\
    \ ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\"\
    ) = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n    [[ $(candidate\
    \ \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [[ $count -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | tr -cd '[^aeiouAEIOU]'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had\
    \ a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white\
    \ space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\"\
    \ ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
    \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//gi'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s and a natural number n, you have been\
    \ tasked to implement \n# a function that returns a list of all words from string\
    \ s that contain exactly \n# n consonants, in order these words appear in the\
    \ string s.\n# If the string s is empty then the function should return an empty\
    \ list.\n# Note: you may assume the input string contains only letters and spaces.\n\
    # Examples:\n# >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"\
    ']\n# >>> $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"\
    lamb\"']\n# >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words\
    \ \"Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\"\
    \ \"3\")\n# ['\"Uncle\"']\nselect_words() {\n    local s=$1\n    local n=$2\n\
    \    local words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=$(echo $word | sed -e 's/[aeiou]//gi'\
    \ | wc -m)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    select_words\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Mary had a little lamb\"\
    \ \"4\") = \"little\" ]]\n    [[ $(candidate \"Mary had a little lamb\" \"3\"\
    ) = \"Mary lamb\" ]]\n    [[ $(candidate \"simple white space\" \"2\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"world\" ]]\n    [[ $(candidate\
    \ \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate \"\" \"4\") = \"\" ]]\n\
    \    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660361364

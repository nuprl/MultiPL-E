language: sh
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpihkk4chu.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if ((_minSubArraySum_sum > 0)); then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpizr4el9k.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local min=${nums[0]}\n  local sum=0\n  for i in \"\
    ${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n   \
    \   min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpyc6r18eb.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local min=0\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        sum=$((sum + arr[i]))\n        if ((sum < min));\
    \ then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n     \
    \       sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1nqd1x9y.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpderqffcq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _arr=$1\n  local -i min_sum=${_arr[0]}\n  local -i curr_sum=${_arr[0]}\n\
    \  for ((i=1; i<${#_arr[@]}; i++)); do\n    ((curr_sum = min(curr_sum + ${_arr[i]},\
    \ ${_arr[i]})))\n    ((min_sum = min(min_sum, curr_sum)))\n  done\n  echo \"$min_sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcjqp2p9t.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local minSum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < minSum)); then\n            minSum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$minSum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0wcf97pe.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local current_sum=0\n  for\
    \ i in \"${arr[@]}\"; do\n    ((current_sum += i))\n    if ((current_sum < min_sum));\
    \ then\n      min_sum=$current_sum\n    fi\n    if ((current_sum > 0)); then\n\
    \      current_sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpu7u8jl4s.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpihkk4chu.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum >\
    \ 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp8ffxmqiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n \
    \   for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n    \
    \    if ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3o98mafs.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpf9a_xfqp.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local min=0\n  local sum=0\n  for i in $@; do\n    sum=$((sum + i))\n \
    \   if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for i in \"${_minSubArraySum_nums[@]}\"; do\n\
    \    _minSubArraySum_sum=$((_minSubArraySum_sum + i))\n    if [[ $_minSubArraySum_sum\
    \ -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpe5w32f8_.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n    \
    \    fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n    done\n\
    \    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpyeddui8c.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min\
    \ ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n\
    \            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpodnm6bje.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local curr_sum=${_minSubArraySum_nums[0]}\n  for (( i=1; i<${#_minSubArraySum_nums[@]};\
    \ i++ )); do\n    curr_sum=$(( curr_sum + ${_minSubArraySum_nums[$i]} ))\n   \
    \ if (( curr_sum < min_sum )); then\n      min_sum=$curr_sum\n    fi\n    if ((\
    \ curr_sum < 0 )); then\n      curr_sum=0\n    fi\n  done\n  echo $min_sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0oxq3mvm.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n    local curr_sum=0\n\
    \    for ((i=0; i<${#_nums[@]}; i++)); do\n        curr_sum=$((curr_sum + ${_nums[i]}))\n\
    \        if ((curr_sum < min_sum)); then\n            min_sum=$curr_sum\n    \
    \    fi\n        if ((curr_sum > 0)); then\n            curr_sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmph5n5rtha.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0nvz1url.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#_minSubArraySum_nums[@]}; i++)); do\n    sum=$((sum\
    \ + _minSubArraySum_nums[i]))\n    if ((sum < min_sum)); then\n      min_sum=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpvyar6qhl.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0nvz1url.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=0\n  local sum=0\n  for num in \"${_nums[@]}\"\
    ; do\n    sum=$((sum + num))\n    if [[ sum -lt min_sum ]]; then\n      min_sum=$sum\n\
    \    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpjv2ykd_6.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ (( i=0; i<${#nums[@]}; i++ )); do\n        sum=$(( sum + nums[i] ))\n      \
    \  if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmioxikw.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n \
    \   for (( i=0; i<${#nums[@]}; i++ )); do\n        sum=$(( sum + nums[i] ))\n\
    \        if (( sum < min )); then\n            min=$sum\n        fi\n        if\
    \ (( sum > 0 )); then\n            sum=0\n        fi\n    done\n    echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptdjofla8.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    sum=$(( sum + arr[i] ))\n    if [[ $sum -lt $min ]]; then\n\
    \      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpldao4cae.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n nums=$1\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min\
    \ ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n\
    \            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpt1j9mqwk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min_sum ]]; then\n\
    \      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpnoc777h9.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n    local sum=0\n   \
    \ for num in \"${nums[@]}\"; do\n        ((sum += num))\n        ((sum < min_sum))\
    \ && min_sum=$sum\n        ((sum > 0)) && sum=0\n    done\n    echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmprmnlxiaa.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \        if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      \
    \      _minSubArraySum_min=$_minSubArraySum_sum\n        fi\n        if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n            _minSubArraySum_sum=0\n        fi\n    done\n  \
    \  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpx4afx82g.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min=${_nums[0]}\n  local sum=0\n  for num in\
    \ \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min ]]; then\n\
    \      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpoelg9oxa.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpgbz288pk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[\
    \ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpr5jbkf5v.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for ((i=0; i<${#_minSubArraySum_nums[@]};\
    \ i++)); do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_nums[i]))\n\
    \        if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n            _minSubArraySum_min=$_minSubArraySum_sum\n\
    \        fi\n        if ((_minSubArraySum_sum > 0)); then\n            _minSubArraySum_sum=0\n\
    \        fi\n    done\n    echo $_minSubArraySum_min\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp4n67vbh4.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local curr_sum=0\n  for ((\
    \ i=0; i<${#arr[@]}; i++ )); do\n    curr_sum=$(( curr_sum + arr[i] ))\n    if\
    \ (( curr_sum < min_sum )); then\n      min_sum=$curr_sum\n    fi\n    if (( curr_sum\
    \ > 0 )); then\n      curr_sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpp0swvtjk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum+=${nums[$i]}\n        if ((sum < min));\
    \ then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n     \
    \       sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpih976opj.sh: line 15: ((: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n/tmp/tmpih976opj.sh: line 18: ((: 02 3 4 1 2 4:
    syntax error in expression (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local -i min_sum=0x7fffffff\n    local -i\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum+=${nums[i]}\n  \
    \      if ((sum < min_sum)); then\n            min_sum=sum\n        fi\n     \
    \   if ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo \"\
    $min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4v__r0q4.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min_sum)); then\n\
    \      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n \
    \ done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpnseoq7mz.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local curr_sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    curr_sum=$((curr_sum\
    \ + num))\n    if ((curr_sum < min_sum)); then\n      min_sum=$curr_sum\n    fi\n\
    \    if ((curr_sum > 0)); then\n      curr_sum=0\n    fi\n  done\n  echo \"$min_sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpu6ho95yb.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local minSum=${_minSubArraySum_nums[0]}\n\
    \  local currSum=${_minSubArraySum_nums[0]}\n  for (( i=1; i<${#_minSubArraySum_nums[@]};\
    \ i++ )); do\n    currSum=$(( currSum + ${_minSubArraySum_nums[i]} ))\n    if\
    \ (( currSum < minSum )); then\n      minSum=$currSum\n    fi\n    if (( currSum\
    \ > 0 )); then\n      currSum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpbywb9ny5.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=${nums[0]}\n  local curr_sum=${nums[0]}\n\
    \  for ((i=1; i<${#nums[@]}; i++)); do\n    ((curr_sum += nums[i]))\n    if ((curr_sum\
    \ < min_sum)); then\n      min_sum=$curr_sum\n    fi\n    if ((curr_sum > 0));\
    \ then\n      curr_sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n\
    \    _minSubArraySum_sum=$((_minSubArraySum_sum + num))\n    if [[ $_minSubArraySum_sum\
    \ -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpemyjvmvy.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n    local curr_sum=${nums[0]}\n\
    \    for (( i=1; i<${#nums[@]}; i++ )); do\n        curr_sum=$(( curr_sum + nums[i]\
    \ ))\n        if (( curr_sum < min_sum )); then\n            min_sum=$curr_sum\n\
    \        fi\n        if (( curr_sum > 0 )); then\n            curr_sum=0\n   \
    \     fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp45dl8wth.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min=${_nums[0]}\n  local sum=0\n  for num in\
    \ \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min ]]; then\n\
    \      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpoelg9oxa.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n        if ((sum < min));\
    \ then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n     \
    \       sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpym9or65s.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=\"$1\"\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfactyw8k.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local min=${nums[0]}\n  local sum=0\n  for num in \"\
    ${nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0hx12yyh.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _arr=$1\n    local min_sum=${_arr[0]}\n    local sum=0\n   \
    \ for ((i=0; i<${#_arr[@]}; i++)); do\n        sum=$((sum + ${_arr[i]}))\n   \
    \     if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp4lh7fjwv.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcxkpymiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n nums=$1\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n        if [[ $sum -lt\
    \ $min ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt 0 ]];\
    \ then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpenpazv_h.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \        if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      \
    \      _minSubArraySum_min=$_minSubArraySum_sum\n        fi\n        if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n            _minSubArraySum_sum=0\n        fi\n    done\n  \
    \  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpx4afx82g.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=\"$1\"\n  local _minSubArraySum_min=0\n \
    \ local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmph5fiyx6b.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for i in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum\
    \ -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpw2qcrxvb.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local _min=${_nums[0]}\n  local _sum=0\n  for ((i=0;\
    \ i<${#_nums[@]}; i++)); do\n    _sum=$((_sum + _nums[i]))\n    if ((_sum < _min));\
    \ then\n      _min=$_sum\n    fi\n    if ((_sum > 0)); then\n      _sum=0\n  \
    \  fi\n  done\n  echo $_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmph1_stzod.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local _min=${_nums[0]}\n  local _sum=0\n  for ((i=0;\
    \ i<${#_nums[@]}; i++)); do\n    _sum=$((_sum + _nums[i]))\n    if ((_sum < _min));\
    \ then\n      _min=$_sum\n    fi\n    if ((_sum > 0)); then\n      _sum=0\n  \
    \  fi\n  done\n  echo $_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmph1_stzod.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local curr_sum=${arr[0]}\n\
    \  for (( i=1; i<${#arr[@]}; i++ )); do\n    curr_sum=$(( curr_sum + arr[i] ))\n\
    \    if (( curr_sum < min_sum )); then\n      min_sum=$curr_sum\n    fi\n    if\
    \ (( curr_sum > 0 )); then\n      curr_sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp8kf5ywvv.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local minSum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $minSum ]]; then\n            minSum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3yxbssyj.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for (( i=0;\
    \ i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n    if (( sum < min_sum\
    \ )); then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr2i9d8sn.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum += i))\n        ((sum < min)) && min=$sum\n\
    \        ((sum > 0)) && sum=0\n    done\n    echo $min\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpd45bf8po.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min=${_nums[0]}\n  local sum=0\n  for num in\
    \ \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min)); then\n  \
    \    min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp6qsbnlrv.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local minSum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < minSum)); then\n\
    \      minSum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpofrud7y0.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min_sum=0\n    local curr_sum=0\n    for\
    \ (( i=0; i<${#nums[@]}; i++ )); do\n        curr_sum=$(( curr_sum + nums[i] ))\n\
    \        if (( curr_sum < min_sum )); then\n            min_sum=$curr_sum\n  \
    \      fi\n        if (( curr_sum > 0 )); then\n            curr_sum=0\n     \
    \   fi\n    done\n    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdzwenee4.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local -i min_sum=0x7fffffff\n  local -i curr_sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    curr_sum+=${nums[i]}\n    if ((curr_sum\
    \ < min_sum)); then\n      min_sum=curr_sum\n    fi\n    if ((curr_sum > 0));\
    \ then\n      curr_sum=0\n    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnlxvf640.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpderqffcq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum+=${nums[$i]}\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprxwray5e.sh: line 15: ((: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=${nums[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min));\
    \ then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n\
    \  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wvwsarn.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpgbz288pk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[\
    \ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpr5jbkf5v.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1coyaq64.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=${nums[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if [[ $sum -lt $min\
    \ ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp776pnseu.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for (( i=0; i<${#nums[@]};\
    \ i++ )); do\n    sum+=${nums[$i]}\n    if (( sum < min )); then\n      min=$sum\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxwzxp2p3.sh: line 15: ((: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp05tpjabm.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n\
    \    _minSubArraySum_sum=$((_minSubArraySum_sum + num))\n    if [[ $_minSubArraySum_sum\
    \ -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpemyjvmvy.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local current_sum=${_minSubArraySum_nums[0]}\n  for ((i=1; i<${#_minSubArraySum_nums[@]};\
    \ i++)); do\n    current_sum=$((current_sum + _minSubArraySum_nums[i]))\n    if\
    \ [[ $current_sum -lt $min_sum ]]; then\n      min_sum=$current_sum\n    fi\n\
    \    if [[ $current_sum -gt 0 ]]; then\n      current_sum=0\n    fi\n  done\n\
    \  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpk_y2ghna.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n \
    \   for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n        if [[ $sum\
    \ -lt $min ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt\
    \ 0 ]]; then\n            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxntae_l6.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local min=${nums[0]}\n  local sum=0\n  for i in \"\
    ${nums[@]}\"; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp83px7jk_.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local _min=${_nums[0]}\n  local _sum=0\n  for (( i=0;\
    \ i<${#_nums[@]}; i++ )); do\n    _sum=$(( ${_nums[i]} + _sum ))\n    if [[ $_sum\
    \ -lt $_min ]]; then\n      _min=$_sum\n    fi\n    if [[ $_sum -gt 0 ]]; then\n\
    \      _sum=0\n    fi\n  done\n  echo $_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp2dajqv6y.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local minSum=${_minSubArraySum_nums[0]}\n\
    \  local currSum=${_minSubArraySum_nums[0]}\n  for ((i=1; i<${#_minSubArraySum_nums[@]};\
    \ i++)); do\n    currSum=$((currSum + _minSubArraySum_nums[i]))\n    if ((currSum\
    \ < minSum)); then\n      minSum=$currSum\n    fi\n    if ((currSum > 0)); then\n\
    \      currSum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcx0_hrh6.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    ((_minSubArraySum_sum += _minSubArraySum_num))\n    ((_minSubArraySum_sum\
    \ < _minSubArraySum_min)) && _minSubArraySum_min=$_minSubArraySum_sum\n    ((_minSubArraySum_sum\
    \ < 0)) && _minSubArraySum_sum=0\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmjqkjieo.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local curr_sum=0\n \
    \   for num in \"${nums[@]}\"; do\n        curr_sum=$((curr_sum + num))\n    \
    \    if ((curr_sum < min_sum)); then\n            min_sum=$curr_sum\n        fi\n\
    \        if ((curr_sum > 0)); then\n            curr_sum=0\n        fi\n    done\n\
    \    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9d_a5lai.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=${nums[$i]}\n        if ((sum < min_sum));\
    \ then\n            min_sum=$sum\n        fi\n        for ((j=$i+1; j<${#nums[@]};\
    \ j++)); do\n            sum=$((sum + nums[j]))\n            if ((sum < min_sum));\
    \ then\n                min_sum=$sum\n            fi\n        done\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0safjzp.sh: line 15: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    _minSubArraySum_min=$((_minSubArraySum_min < _minSubArraySum_sum ? _minSubArraySum_min\
    \ : _minSubArraySum_sum))\n    _minSubArraySum_sum=$((_minSubArraySum_sum < 0\
    \ ? 0 : _minSubArraySum_sum))\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp4ycwmciv.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_NUMS=$1\n  local _minSubArraySum_MIN=${_minSubArraySum_NUMS[0]}\n\
    \  local _minSubArraySum_SUM=0\n  for _minSubArraySum_NUM in \"${_minSubArraySum_NUMS[@]}\"\
    ; do\n    _minSubArraySum_SUM=$((_minSubArraySum_SUM + _minSubArraySum_NUM))\n\
    \    if [[ $_minSubArraySum_SUM -lt $_minSubArraySum_MIN ]]; then\n      _minSubArraySum_MIN=$_minSubArraySum_SUM\n\
    \    fi\n    if [[ $_minSubArraySum_SUM -gt 0 ]]; then\n      _minSubArraySum_SUM=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_MIN\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp4g8t7x_i.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n\
    \    _minSubArraySum_sum=$((_minSubArraySum_sum + num))\n    if [[ $_minSubArraySum_sum\
    \ -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpemyjvmvy.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local min=${nums[0]}\n  local sum=0\n  for i in \"\
    ${nums[@]}\"; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp83px7jk_.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum >\
    \ 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp8ffxmqiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for ((i=0; i<${#_minSubArraySum_nums[@]};\
    \ i++)); do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_nums[i]))\n\
    \        if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      \
    \      _minSubArraySum_min=$_minSubArraySum_sum\n        fi\n        if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n            _minSubArraySum_sum=0\n        fi\n    done\n  \
    \  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp39sniwrf.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local minSum=${_minSubArraySum_nums[0]}\n\
    \  local currSum=${_minSubArraySum_nums[0]}\n  for (( i=1; i<${#_minSubArraySum_nums[@]};\
    \ i++ )); do\n    currSum=$(( currSum + _minSubArraySum_nums[i] ))\n    if ((\
    \ currSum < minSum )); then\n      minSum=$currSum\n    fi\n    if (( currSum\
    \ > 0 )); then\n      currSum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpvj4tlb5b.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpf9a_xfqp.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for (( i=0; i<${#_minSubArraySum_nums[@]}; i++\
    \ )); do\n    _minSubArraySum_sum=$(( _minSubArraySum_sum + ${_minSubArraySum_nums[i]}\
    \ ))\n    if (( _minSubArraySum_sum < _minSubArraySum_min )); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if (( _minSubArraySum_sum > 0 )); then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp2xt5n061.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local curr_sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n   \
    \     curr_sum=$((curr_sum + num))\n        if [[ $curr_sum -lt $min_sum ]]; then\n\
    \            min_sum=$curr_sum\n        fi\n        if [[ $curr_sum -gt 0 ]];\
    \ then\n            curr_sum=0\n        fi\n    done\n    echo $min_sum\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpaogs16u7.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min=${_nums[0]}\n  local sum=0\n  for num in\
    \ \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min ]]; then\n\
    \      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpoelg9oxa.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for (( i = 0;\
    \ i < ${#nums[@]}; i++ )); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5v0c45uu.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for i\
    \ in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if ((sum < min_sum));\
    \ then\n            min_sum=$sum\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv_r_6_ds.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local minSum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $minSum ]]; then\n            minSum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3yxbssyj.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n \
    \   for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0wgutuwn.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for (( i = 0; i < ${#_minSubArraySum_nums[@]}; i++ )); do\n\
    \    sum=$(( sum + ${_minSubArraySum_nums[i]} ))\n    if (( sum < min_sum ));\
    \ then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmprt1vrpa2.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \        if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n            _minSubArraySum_min=$_minSubArraySum_sum\n\
    \        fi\n        if ((_minSubArraySum_sum > 0)); then\n            _minSubArraySum_sum=0\n\
    \        fi\n    done\n    echo $_minSubArraySum_min\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp15oeaq5_.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp05tpjabm.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=($1)\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ (( i=0; i<${#nums[@]}; i++ )); do\n        sum=$(( sum + nums[i] ))\n      \
    \  if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min\
    \ ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n\
    \            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpodnm6bje.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0nvz1url.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcxkpymiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#_nums[@]}; i++)); do\n    ((sum += ${_nums[i]}))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpc827yr4b.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min_sum=${arr[0]}\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if ((sum < min_sum));\
    \ then\n            min_sum=$sum\n        fi\n        if ((sum > 0)); then\n \
    \           sum=0\n        fi\n    done\n    echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb2a56hv7.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \    local _minSubArraySum_sum=0\n    for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n        _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \        if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      \
    \      _minSubArraySum_min=$_minSubArraySum_sum\n        fi\n        if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n            _minSubArraySum_sum=0\n        fi\n    done\n  \
    \  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpx4afx82g.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local array=(\"$@\")\n  local min=0\n  local sum=0\n  for i in \"${array[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzze9ure3.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpderqffcq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=0\n  local sum=0\n  for\
    \ num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[\
    \ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfes_amt6.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        (( sum += i ))\n        (( sum < min )) && min=$sum\n\
    \        (( sum > 0 )) && sum=0\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp5q7ix_ki.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for (( i = 0; i < ${#_minSubArraySum_nums[@]}; i++ )); do\n\
    \    sum=$(( sum + ${_minSubArraySum_nums[i]} ))\n    if (( sum < min_sum ));\
    \ then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmprt1vrpa2.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcxkpymiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum + i))\n    if ((sum < min_sum)); then\n      min_sum=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min_sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp98brprqq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n \
    \   for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n        if [[ $sum\
    \ -lt $min ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt\
    \ 0 ]]; then\n            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxntae_l6.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpf9a_xfqp.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for (( i=0; i<${#_minSubArraySum_nums[@]}; i++ )); do\n    sum=$((\
    \ sum + ${_minSubArraySum_nums[i]} ))\n    if [[ $sum -lt $min ]]; then\n    \
    \  min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmvzd5m1q.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min_sum=${arr[0]}\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min_sum\
    \ ]]; then\n            min_sum=$sum\n        fi\n        if [[ $sum -gt 0 ]];\
    \ then\n            sum=0\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpgg9jhdm6.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min\
    \ ]]; then\n            min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n\
    \            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpodnm6bje.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0nvz1url.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min=0\n    local sum=0\n    for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsz2w4rqb.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n  local sum=0\n  for (( i\
    \ = 0; i < ${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n    if (( sum\
    \ < min_sum )); then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n\
    \      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp832n_acb.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n nums=$1\n  local minSum=${nums[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < minSum));\
    \ then\n      minSum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n   \
    \ fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmprr343l8y.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54zbhfqm.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp05tpjabm.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpderqffcq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    ((sum += num))\n    if ((sum < min_sum)); then\n\
    \      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n \
    \ done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp1udl0qq6.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpgbz288pk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local nums=(\"$@\")\n  local min=${nums[0]}\n  local sum=0\n  for num in\
    \ \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min)); then\n   \
    \   min=${sum}\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo \"${min}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbs39rma.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _array=$1\n  local min=${_array[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#_array[@]}; i++)); do\n    sum=$((sum + ${_array[i]}))\n    if ((sum <\
    \ min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpasxek74e.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min_sum ]]; then\n\
    \      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpnoc777h9.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min_sum ]]; then\n\
    \      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpnoc777h9.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpktrc3uwg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local minSum=${arr[0]}\n  local sum=0\n  for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n    sum=$(( sum + arr[i] ))\n    if (( sum < minSum\
    \ )); then\n      minSum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpe9z8xsiy.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for ((\
    \ i=0; i<${#arr[@]}; i++ )); do\n        sum=$(( sum + arr[i] ))\n        if [[\
    \ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if [[ $sum\
    \ -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmphl1jghy1.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -a nums=(\"$@\")\n    local min_sum=0\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4lw6siv0.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=0\n  local sum=0\n  for\
    \ ((i=0; i<${#_minSubArraySum_nums[@]}; i++)); do\n    sum=$((sum + _minSubArraySum_nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpxji3n7_i.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if\
    \ ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpeiajqbn8.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    sum=$((sum + arr[i]))\n    if (( sum < min )); then\n      min=$sum\n\
    \    fi\n    if (( sum > 0 )); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpzndxpate.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _arr=$1\n  local min=${_arr[0]}\n  local sum=0\n  for i in \"\
    ${_arr[@]}\"; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3i85ij5h.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local minSum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if ((sum < minSum)); then\n      minSum=$sum\n    fi\n    if ((sum\
    \ > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpi33_gk6m.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for (( i=0; i<${#_minSubArraySum_nums[@]}; i++\
    \ )); do\n    _minSubArraySum_sum=$(( _minSubArraySum_sum + ${_minSubArraySum_nums[i]}\
    \ ))\n    if (( _minSubArraySum_sum < _minSubArraySum_min )); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if (( _minSubArraySum_sum > 0 )); then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp2xt5n061.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for (( i=0;\
    \ i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n    if (( sum < min_sum\
    \ )); then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr2i9d8sn.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n    local -n arr=$1\n    local min=${arr[0]}\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        (( sum += i ))\n        (( sum < min )) && min=$sum\n\
    \        (( sum > 0 )) && sum=0\n    done\n    echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp5q7ix_ki.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum));\
    \ then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n  \
    \  fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfrev_3id.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n  local sum=0\n  for num\
    \ in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min_sum)); then\n\
    \      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n \
    \ done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpnseoq7mz.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local sum=0\n  for num in\
    \ \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min_sum)); then\n\
    \      min_sum=$sum\n    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdkq3biqu.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _arr=$1\n  local min_sum=${_arr[0]}\n  local sum=0\n  for (( i=0;\
    \ i<${#_arr[@]}; i++ )); do\n    sum=$((sum + ${_arr[i]}))\n    if (( sum < min_sum\
    \ )); then\n      min_sum=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpe5xrljqg.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=${nums[0]}\n  local sum=0\n  for i\
    \ in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n\
    \      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n\
    \  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpey3pgpgk.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for ((i=0; i<${#_minSubArraySum_nums[@]}; i++));\
    \ do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_nums[i]))\n\
    \    if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if ((_minSubArraySum_sum > 0)); then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb3a20zug.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp05tpjabm.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    sum=$(( sum + arr[i] ))\n    if (( sum < min )); then\n    \
    \  min=$sum\n    fi\n    if (( sum > 0 )); then\n      sum=0\n    fi\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpjy2smp08.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local nums=(\"$@\")\n  local min=0\n  local sum=0\n  for (( i=0; i<${#nums[@]};\
    \ i++ )); do\n    sum=$(( sum + nums[i] ))\n    if (( sum < min )); then\n   \
    \   min=$sum\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmphuprmoko.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for (( i=0; i<${#_minSubArraySum_nums[@]}; i++\
    \ )); do\n    _minSubArraySum_sum=$(( _minSubArraySum_sum + ${_minSubArraySum_nums[i]}\
    \ ))\n    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n     \
    \ _minSubArraySum_min=$_minSubArraySum_sum\n    fi\n    if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n      _minSubArraySum_sum=0\n    fi\n  done\n  echo $_minSubArraySum_min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3cgua3ut.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for (( i=0; i<${#_minSubArraySum_nums[@]}; i++\
    \ )); do\n    _minSubArraySum_sum=$(( _minSubArraySum_sum + ${_minSubArraySum_nums[i]}\
    \ ))\n    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n     \
    \ _minSubArraySum_min=$_minSubArraySum_sum\n    fi\n    if [[ $_minSubArraySum_sum\
    \ -gt 0 ]]; then\n      _minSubArraySum_sum=0\n    fi\n  done\n  echo $_minSubArraySum_min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3cgua3ut.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n\
    \    if [[ $sum -lt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptsn_bg1j.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local min_sum=${_minSubArraySum_nums[0]}\n\
    \  local sum=0\n  for num in \"${_minSubArraySum_nums[@]}\"; do\n    sum=$((sum\
    \ + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpgbz288pk.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for i in \"${_minSubArraySum_nums[@]}\"; do\n\
    \    _minSubArraySum_sum=$((_minSubArraySum_sum + i))\n    if [[ $_minSubArraySum_sum\
    \ -lt _minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpuz09mmw1.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcxkpymiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for ((i=0; i<${#_minSubArraySum_nums[@]}; i++));\
    \ do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_nums[i]))\n\
    \    if ((_minSubArraySum_sum < _minSubArraySum_min)); then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if ((_minSubArraySum_sum > 0)); then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo $_minSubArraySum_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb3a20zug.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local min=${arr[0]}\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpderqffcq.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n arr=$1\n  local minSum=0\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum < minSum)); then\n      minSum=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpz4ug_o1i.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -n _minSubArraySum_nums=$1\n  local _minSubArraySum_min=${_minSubArraySum_nums[0]}\n\
    \  local _minSubArraySum_sum=0\n  for _minSubArraySum_num in \"${_minSubArraySum_nums[@]}\"\
    ; do\n    _minSubArraySum_sum=$((_minSubArraySum_sum + _minSubArraySum_num))\n\
    \    if [[ $_minSubArraySum_sum -lt $_minSubArraySum_min ]]; then\n      _minSubArraySum_min=$_minSubArraySum_sum\n\
    \    fi\n    if [[ $_minSubArraySum_sum -gt 0 ]]; then\n      _minSubArraySum_sum=0\n\
    \    fi\n  done\n  echo \"$_minSubArraySum_min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcxkpymiw.sh: line 10: local: `2 3 4 1 2 4'': invalid variable
    name for name reference\n"'
  stdout: b''
  timestamp: 1660357074
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\nminSubArraySum()\
    \ {\n  local -a nums=(\"$@\")\n  local min=${nums[0]}\n  local sum=0\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min));\
    \ then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n\
    \  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wvwsarn.sh: line 14: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")\n'''
  stdout: b''
  timestamp: 1660357074

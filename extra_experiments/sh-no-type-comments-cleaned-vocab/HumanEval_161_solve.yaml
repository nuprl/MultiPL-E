name: HumanEval_161_solve
language: sh
prompt: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
  # If the string contains no letters, reverse the string.\n# The function should\
  \ return the resulted string.\n# Examples\n# >>> $(solve \"1234\")\n# \"4321\"\n\
  # >>> $(solve \"ab\")\n# \"AB\"\n# >>> $(solve \"#a@C\")\n# \"#A@c\"\nsolve() {\n"
tests: "}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate\
  \ \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
  \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
  \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\")\
  \ = \"#CCC\" ]]\n}\n\nrun_test"
completions: ["    local s=$1\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                r+=\"${c^^}\"\n            else\n\
    \                r+=\"${c,,}\"\n            fi\n        else\n            r+=\"\
    $c\"\n        fi\n    done\n    echo \"$r\"", "    local s=\"$1\"\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=\"${s:$i:1}\"\n       \
    \ if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n    \
    \            res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    local s=\"$1\"\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=\"${s:$i:1}\"\n        if [[ \"$c\" =~ [a-zA-Z] ]];\
    \ then\n            if [[ \"$c\" =~ [a-z] ]]; then\n                res+=\"${c^^}\"\
    \n            else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local i=0\n    local len=${#s}\n    local res=\"\"\n    while [ $i\
    \ -lt $len ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]];\
    \ then\n            res+=${c^^}\n        else\n            res+=$c\n        fi\n\
    \        i=$((i+1))\n    done\n    echo $res", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\n  \
    \          fi\n        else\n            res+=\"$c\"\n        fi\n    done\n \
    \   echo \"$res\"", "    local s=$1\n    local s2=\"\"\n    local i=0\n    local\
    \ len=${#s}\n    while [ $i -lt $len ]; do\n        local c=${s:$i:1}\n      \
    \  if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n   \
    \             s2=$s2${c^^}\n            else\n                s2=$s2${c,,}\n \
    \           fi\n        else\n            s2=$s2$c\n        fi\n        i=$((i+1))\n\
    \    done\n    if [[ $s2 =~ [a-zA-Z] ]]; then\n        echo $s2\n    else\n  \
    \      echo $s2 | rev\n    fi", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    local s=$1\n    local r=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                r+=${c^^}\n\
    \            else\n                r+=${c,,}\n            fi\n        else\n \
    \           r+=$c\n        fi\n    done\n    echo $r", "    local s=$1\n    local\
    \ res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n   \
    \     if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                c=${c^^}\n            else\n                c=${c,,}\n      \
    \      fi\n        fi\n        res=$c$res\n    done\n    echo $res", "    local\
    \ str=$1\n    local result=\"\"\n    for (( i=0; i<${#str}; i++ )); do\n     \
    \   local char=${str:$i:1}\n        if [[ $char =~ [a-zA-Z] ]]; then\n       \
    \     result+=${char^^}\n        else\n            result+=${char,,}\n       \
    \ fi\n    done\n    echo $result", "    local str=$1\n    local res=\"\"\n   \
    \ for ((i=0; i<${#str}; i++)); do\n        local c=${str:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\n  \
    \          fi\n        else\n            res+=\"$c\"\n        fi\n    done\n \
    \   echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local ch=${s:$i:1}\n        if [[ $ch =~ [a-zA-Z] ]]; then\n\
    \            if [[ $ch =~ [a-z] ]]; then\n                res+=$(echo $ch | tr\
    \ '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo $ch\
    \ | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n            res+=$ch\n\
    \        fi\n    done\n    if [[ $res =~ [a-zA-Z] ]]; then\n        echo $res\n\
    \    else\n        echo $(echo $res | rev)\n    fi", "    local str=\"$1\"\n \
    \   local res=\"\"\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len\
    \ ]; do\n        local c=${str:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n        i=$((i+1))\n    done\n    echo \"\
    $res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  res+=$(echo $c | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local str=$1\n    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n   \
    \     local c=${str:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n           \
    \ if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n\
    \                res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  local str=$1\n  local result=\"\
    \"\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n\
    \    if [[ $char =~ [a-zA-Z] ]]; then\n      if [[ $char =~ [a-z] ]]; then\n \
    \       result+=${char^^}\n      else\n        result+=${char,,}\n      fi\n \
    \   else\n      result+=$char\n    fi\n    i=$((i+1))\n  done\n  echo $result",
  "    local s=$1\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~\
    \ [a-z] ]]; then\n                r+=\"${c^^}\"\n            else\n          \
    \      r+=\"${c,,}\"\n            fi\n        else\n            r+=\"$c\"\n  \
    \      fi\n    done\n    echo \"$r\"", "    local s=\"$1\"\n    local res=\"\"\
    \n    local i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            res=\"$res$(tr\
    \ '[a-z]' '[A-Z]' <<< $c)\"\n        else\n            res=\"$res$c\"\n      \
    \  fi\n        i=$((i+1))\n    done\n    echo \"$res\"", "    local s=$1\n   \
    \ local regex='[a-zA-Z]'\n    if [[ $s =~ $regex ]]; then\n        echo $s | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n    else\n        echo\
    \ $s | rev\n    fi", "    local s=$1\n    local i=0\n    local res=\"\"\n    local\
    \ len=${#s}\n    while [ $i -lt $len ]; do\n        local c=${s:$i:1}\n      \
    \  if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n   \
    \             c=${c^^}\n            else\n                c=${c,,}\n         \
    \   fi\n        fi\n        res+=$c\n        i=$((i+1))\n    done\n    echo $res",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ \"$c\" =~ [a-zA-Z] ]]; then\n            if\
    \ [[ \"$c\" =~ [a-z] ]]; then\n                c=${c^^}\n            else\n  \
    \              c=${c,,}\n            fi\n        fi\n        res=\"$c$res\"\n\
    \    done\n    echo \"$res\"", "    local s=\"$1\"\n    local res=\"\"\n    local\
    \ i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$res\"", "    local str=\"$1\"\n    local str_len=${#str}\n\
    \    local i=0\n    local res=\"\"\n    local char=\"\"\n    local char_ascii=\"\
    \"\n    local char_ascii_new=\"\"\n    local char_new=\"\"\n    while [ $i -lt\
    \ $str_len ]; do\n        char=${str:$i:1}\n        char_ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if [ $char_ascii -ge 65 ] && [ $char_ascii -le 90 ]; then\n\
    \            char_ascii_new=$((char_ascii + 32))\n        elif [ $char_ascii -ge\
    \ 97 ] && [ $char_ascii -le 122 ]; then\n            char_ascii_new=$((char_ascii\
    \ - 32))\n        else\n            char_ascii_new=$char_ascii\n        fi\n \
    \       char_new=$(printf \\\\$(printf '%03o' $char_ascii_new))\n        res=$res$char_new\n\
    \        i=$((i + 1))\n    done\n    echo $res", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n      \
    \          res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n    \
    \    else\n            res+=$c\n        fi\n    done\n    echo $res", "    local\
    \ s=$1\n    local result=\"\"\n    local i\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n          \
    \  else\n                result+=\"${c,,}\"\n            fi\n        else\n  \
    \          result+=\"$c\"\n        fi\n    done\n    echo \"$result\"", "    local\
    \ s=\"$1\"\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local\
    \ c=\"${s:$i:1}\"\n        if [[ \"$c\" =~ [a-zA-Z] ]]; then\n            if [[\
    \ \"$c\" =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n\
    \                res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\n  \
    \          fi\n        else\n            res+=\"$c\"\n        fi\n    done\n \
    \   echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ str=\"$1\"\n    local res=\"\"\n    local i=0\n    local len=${#str}\n    local\
    \ c=\"\"\n    local code=\"\"\n    local new_code=\"\"\n    while [ $i -lt $len\
    \ ]; do\n        c=${str:$i:1}\n        code=$(printf \"%d\" \"'$c\")\n      \
    \  if [ $code -ge 65 ] && [ $code -le 90 ]; then\n            new_code=$((code\
    \ + 32))\n        elif [ $code -ge 97 ] && [ $code -le 122 ]; then\n         \
    \   new_code=$((code - 32))\n        else\n            new_code=$code\n      \
    \  fi\n        res=\"$res$(printf \\\\$(printf '%03o' $new_code))\"\n        i=$((i\
    \ + 1))\n    done\n    echo \"$res\"", "    if [[ $1 =~ [a-zA-Z] ]]; then\n  \
    \      echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n   \
    \ else\n        echo $1 | rev\n    fi", "    local s=$1\n    local result=\"\"\
    \n    for (( i=0; i<${#s}; i++ )); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]];\
    \ then\n            result+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n        else\n\
    \            result+=${s:$i:1}\n        fi\n    done\n    echo $result | rev",
  "    local s=$1\n    local res=\"\"\n    local i=0\n    local c=\"\"\n    local\
    \ l=\"\"\n    local u=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        c=${s:$i:1}\n\
    \        l=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n        u=$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\n        if [[ \"$c\" == \"$l\" ]]; then\n   \
    \         res+=\"$u\"\n        else\n            res+=\"$l\"\n        fi\n   \
    \ done\n    echo \"$res\"", "    local s=$1\n    local result=\"\"\n    for ((\
    \ i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                c=${c^^}\n\
    \            else\n                c=${c,,}\n            fi\n        fi\n    \
    \    result=$c$result\n    done\n    echo $result", "    if [[ $1 =~ [a-zA-Z]\
    \ ]]; then\n        echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n\
    \    else\n        echo $1 | rev\n    fi", "    local s=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n       \
    \         result+=\"${c^^}\"\n            else\n                result+=\"${c,,}\"\
    \n            fi\n        else\n            result+=\"$c\"\n        fi\n    done\n\
    \    echo \"$result\"", "  local s=$1\n  local r=\"\"\n  for ((i=0; i<${#s}; i++));\
    \ do\n    local c=${s:$i:1}\n    if [[ $c =~ [a-zA-Z] ]]; then\n      if [[ $c\
    \ =~ [a-z] ]]; then\n        r+=\"${c^^}\"\n      else\n        r+=\"${c,,}\"\n\
    \      fi\n    else\n      r+=\"$c\"\n    fi\n  done\n  echo \"$r\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1}\
    \ =~ [a-zA-Z] ]]; then\n            res+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n\
    \        else\n            res+=${s:$i:1}\n        fi\n    done\n    echo $res\
    \ | rev", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++));\
    \ do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n     \
    \       if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n        \
    \    else\n                res+=\"${c,,}\"\n            fi\n        else\n   \
    \         res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "  local s=$1\n\
    \  local i=0\n  local l=${#s}\n  local r=\"\"\n  local c=\"\"\n  while [ $i -lt\
    \ $l ]; do\n    c=${s:$i:1}\n    if [[ $c =~ [a-zA-Z] ]]; then\n      if [[ $c\
    \ =~ [a-z] ]]; then\n        c=${c^^}\n      else\n        c=${c,,}\n      fi\n\
    \    fi\n    r=$r$c\n    i=$((i+1))\n  done\n  echo $r", "    local s=\"$1\"\n\
    \    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=\"${s:$i:1}\"\
    \n        if [[ \"$c\" =~ [a-zA-Z] ]]; then\n            if [[ \"$c\" =~ [a-z]\
    \ ]]; then\n                res+=\"${c^^}\"\n            else\n              \
    \  res+=\"${c,,}\"\n            fi\n        else\n            res+=\"$c\"\n  \
    \      fi\n    done\n    echo \"$res\"", "    local s=$1\n    local r=\"\"\n \
    \   for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c\
    \ =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n             \
    \   r+=\"${c^^}\"\n            else\n                r+=\"${c,,}\"\n         \
    \   fi\n        else\n            r+=\"$c\"\n        fi\n    done\n    echo \"\
    $r\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n\
    \                res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "  local s=$1\n  local res=\"\"\
    \n  for ((i=0; i<${#s}; i++)); do\n    local c=${s:$i:1}\n    if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n      if [[ $c =~ [a-z] ]]; then\n        res+=\"${c^^}\"\n      else\n\
    \        res+=\"${c,,}\"\n      fi\n    else\n      res+=\"$c\"\n    fi\n  done\n\
    \  echo \"$res\"", "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s};\
    \ i++ )); do\n        local char=${s:$i:1}\n        if [[ $char =~ [a-zA-Z] ]];\
    \ then\n            result+=$(echo $char | tr '[:upper:]' '[:lower:]')\n     \
    \   else\n            result+=$char\n        fi\n    done\n    echo $result |\
    \ rev", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  res+=$(echo $c | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n  \
    \      local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if\
    \ [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n            else\n\
    \                result+=\"${c,,}\"\n            fi\n        else\n          \
    \  result+=\"$c\"\n        fi\n    done\n    echo \"$result\"", "    local s=$1\n\
    \    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]')\n        else\n            res+=$c\n\
    \        fi\n    done\n    if [[ $res =~ [a-zA-Z] ]]; then\n        echo $res\n\
    \    else\n        echo $res | rev\n    fi", "    local string=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        if [[ \"$char\" =~ [a-zA-Z] ]]; then\n            if [[ \"$char\" =~\
    \ [a-z] ]]; then\n                result+=\"${char^^}\"\n            else\n  \
    \              result+=\"${char,,}\"\n            fi\n        else\n         \
    \   result+=\"$char\"\n        fi\n    done\n    echo \"$result\"", "    local\
    \ str=\"$1\"\n    local new_str=\"\"\n    local i=0\n    while [ $i -lt ${#str}\
    \ ]; do\n        local char=\"${str:$i:1}\"\n        if [[ \"$char\" =~ [a-zA-Z]\
    \ ]]; then\n            if [[ \"$char\" =~ [a-z] ]]; then\n                new_str+=\"\
    ${char^^}\"\n            else\n                new_str+=\"${char,,}\"\n      \
    \      fi\n        else\n            new_str+=\"$char\"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$new_str\"", "    local s=\"$1\"\n    local res=\"\"\n \
    \   for ((i=0; i<${#s}; i++)); do\n        if [[ \"${s:$i:1}\" =~ [a-zA-Z] ]];\
    \ then\n            res+=\"${s:$i:1}\" | tr '[:upper:]' '[:lower:]'\n        else\n\
    \            res+=\"${s:$i:1}\"\n        fi\n    done\n    echo \"$res\" | rev",
  "    local str=\"$1\"\n    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n\
    \        if [[ ${str:$i:1} =~ [a-zA-Z] ]]; then\n            res+=\"${str:$i:1}\"\
    \n        else\n            res=\"${str:$i:1}$res\"\n        fi\n    done\n  \
    \  echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local s2=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1}\
    \ =~ [a-zA-Z] ]]; then\n            s2+=${s:$i:1}\n        else\n            s2+=${s:$i:1}\n\
    \        fi\n    done\n    echo $s2 | rev", "    local s=\"$1\"\n    local res=\"\
    \"\n    local i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n      \
    \  local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n  \
    \              res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    if [[ $1 =~ [a-zA-Z] ]]; then\n        echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n    else\n        echo\
    \ \"$1\" | rev\n    fi", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    if [[\
    \ $1 =~ [a-zA-Z] ]]; then\n        echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n    else\n        echo $1 | rev\n    fi", "    local s=\"$1\"\n\
    \    local result=\"\"\n    local i=0\n    local len=${#s}\n    while [ $i -lt\
    \ $len ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n\
    \            else\n                result+=\"${c,,}\"\n            fi\n      \
    \  else\n            result+=\"$c\"\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$result\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            res+=$c\n        fi\n\
    \    done\n    echo $res", "    local s=$1\n    local s_len=${#s}\n    local res=\"\
    \"\n    for ((i=0; i<s_len; i++)); do\n        local c=${s:i:1}\n        if [[\
    \ \"$c\" =~ [a-zA-Z] ]]; then\n            if [[ \"$c\" =~ [a-z] ]]; then\n  \
    \              c=${c^^}\n            else\n                c=${c,,}\n        \
    \    fi\n        fi\n        res=\"$c$res\"\n    done\n    echo \"$res\"", " \
    \   local s=$1\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~\
    \ [a-z] ]]; then\n                r+=\"${c^^}\"\n            else\n          \
    \      r+=\"${c,,}\"\n            fi\n        else\n            r+=\"$c\"\n  \
    \      fi\n    done\n    echo \"$r\"", "    local str=$1\n    local res=\"\"\n\
    \    for ((i=0; i<${#str}; i++)); do\n        local c=${str:$i:1}\n        if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n       \
    \         res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\n\
    \            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    local s=$1\n    local r=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                r+=\"${c^^}\"\n     \
    \       else\n                r+=\"${c,,}\"\n            fi\n        else\n  \
    \          r+=\"$c\"\n        fi\n    done\n    echo \"$r\"", "    local s=$1\n\
    \    local s2=\"\"\n    local i=0\n    local l=${#s}\n    while [ $i -lt $l ];\
    \ do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n     \
    \       if [[ $c =~ [a-z] ]]; then\n                s2+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                s2+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            s2+=$c\n        fi\n\
    \        i=$((i+1))\n    done\n    if [[ $s2 =~ [a-zA-Z] ]]; then\n        echo\
    \ $s2\n    else\n        echo $s2 | rev\n    fi", "  local s=$1\n  local i=0\n\
    \  local res=\"\"\n  local len=${#s}\n  while [ $i -lt $len ]; do\n    local c=${s:$i:1}\n\
    \    if [[ $c =~ [a-zA-Z] ]]; then\n      if [[ $c =~ [a-z] ]]; then\n       \
    \ res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n      else\n        res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\n      fi\n    else\n      res+=$c\n    fi\n\
    \    ((i++))\n  done\n  echo $res", "    local s=$1\n    local res=\"\"\n    for\
    \ ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo\
    \ $c | tr '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n           \
    \ res+=$c\n        fi\n    done\n    echo $res", "    local s=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n       \
    \         result+=\"${c^^}\"\n            else\n                result+=\"${c,,}\"\
    \n            fi\n        else\n            result+=\"$c\"\n        fi\n    done\n\
    \    echo \"$result\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            res+=$c\n        fi\n    done\n    if [[ $res =~ [a-zA-Z]\
    \ ]]; then\n        echo $res\n    else\n        echo $(echo $res | rev)\n   \
    \ fi", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        if [[ ${s:$i:1} =~ [a-zA-Z] ]]; then\n            res+=${s:$i:1} | tr\
    \ '[:upper:]' '[:lower:]'\n        else\n            res+=${s:$i:1}\n        fi\n\
    \    done\n    echo $res | rev", "    local str=$1\n    local result=\"\"\n  \
    \  for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n       \
    \ if [[ $char =~ [a-zA-Z] ]]; then\n            if [[ $char =~ [a-z] ]]; then\n\
    \                result+=$(echo $char | tr '[:lower:]' '[:upper:]')\n        \
    \    else\n                result+=$(echo $char | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            result+=$char\n        fi\n    done\n\
    \    echo $result", "    local str=$1\n    local res=\"\"\n    for ((i=0; i<${#str};\
    \ i++)); do\n        if [[ \"${str:$i:1}\" =~ [a-zA-Z] ]]; then\n            res+=\"\
    ${str:$i:1}\" | tr '[:upper:]' '[:lower:]'\n        else\n            res+=\"\
    ${str:$i:1}\"\n        fi\n    done\n    echo $res | rev", "    local s=$1\n \
    \   local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ \"${s:$i:1}\"\
    \ =~ [a-zA-Z] ]]; then\n            res+=\"${s:$i:1}\" | tr '[:upper:]' '[:lower:]'\n\
    \        else\n            res+=\"${s:$i:1}\"\n        fi\n    done\n    echo\
    \ \"$res\" | rev", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            res+=$(echo $c | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=$1\n    local i=0\n    local l=${#s}\n    local r=\"\"\n    while ((\
    \ i < l )); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]]; then\n            if [[\
    \ ${s:$i:1} =~ [a-z] ]]; then\n                r+=${s:$i:1^^}\n            else\n\
    \                r+=${s:$i:1,,}\n            fi\n        else\n            r+=${s:$i:1}\n\
    \        fi\n        (( i++ ))\n    done\n    echo $r", "    local s=$1\n    local\
    \ i=0\n    local len=${#s}\n    local res=\"\"\n    while [ $i -lt $len ]; do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr a-z A-Z)\n\
    \            else\n                res+=$(echo $c | tr A-Z a-z)\n            fi\n\
    \        else\n            res+=$c\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $res", "    local s=$1\n    local s2=\"\"\n    local i=0\n    local\
    \ c=\"\"\n    local l=\"\"\n    local u=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        c=${s:$i:1}\n        l=$(echo $c | tr '[:upper:]' '[:lower:]')\n    \
    \    u=$(echo $c | tr '[:lower:]' '[:upper:]')\n        if [[ \"$c\" == \"$l\"\
    \ ]]; then\n            s2=$s2$u\n        else\n            s2=$s2$l\n       \
    \ fi\n    done\n    echo $s2", "    local s=$1\n    local res=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]]; then\n         \
    \   res+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n        else\n            res+=${s:$i:1}\n\
    \        fi\n    done\n    echo $res | rev", "    local str=$1\n    local res=\"\
    \"\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n    \
    \    local c=${str:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if\
    \ [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            res+=$c\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $res", "    local s=$1\n    local result=\"\"\n    for ((\
    \ i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                result+=$(echo\
    \ $c | tr a-z A-Z)\n            else\n                result+=$(echo $c | tr A-Z\
    \ a-z)\n            fi\n        else\n            result+=$c\n        fi\n   \
    \ done\n    if [[ $result =~ [a-zA-Z] ]]; then\n        echo $result\n    else\n\
    \        echo $(echo $result | rev)\n    fi", "    local s=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n       \
    \         result+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                result+=$(echo $c | tr '[:upper:]' '[:lower:]')\n           \
    \ fi\n        else\n            result+=$c\n        fi\n    done\n    echo $result",
  "    if [[ $1 =~ [a-zA-Z] ]]; then\n        echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n    else\n        echo \"$1\" | rev\n    fi",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            res+=$c\n        fi\n    done\n   \
    \ echo $res", "    if [[ $1 =~ [a-zA-Z] ]]; then\n        echo $1 | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n    else\n        echo $1 | rev\n\
    \    fi", "  local str=$1\n  local len=${#str}\n  local i=0\n  local res=\"\"\n\
    \  while [ $i -lt $len ]; do\n    local c=${str:$i:1}\n    if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n      if [[ $c =~ [a-z] ]]; then\n        res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n      else\n        res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \      fi\n    else\n      res+=$c\n    fi\n    i=$((i+1))\n  done\n  echo $res",
  "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n  \
    \      local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if\
    \ [[ $c =~ [a-z] ]]; then\n                result+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                result+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            result+=$c\n       \
    \ fi\n    done\n    echo $result", "    local s=$1\n    local res=\"\"\n    for\
    \ ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo\
    \ $c | tr '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n           \
    \ res+=$c\n        fi\n    done\n    if [[ $res =~ [a-zA-Z] ]]; then\n       \
    \ echo $res\n    else\n        echo $(rev <<< $res)\n    fi", "    local s=$1\n\
    \    local res=\"\"\n    local i\n    for ((i=0; i<${#s}; i++)); do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            res+=${c^^}\n\
    \        else\n            res+=${c,,}\n        fi\n    done\n    echo $res",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            res+=$c\n        fi\n    done\n   \
    \ echo $res", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++));\
    \ do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n     \
    \       if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n        \
    \    else\n                res+=\"${c,,}\"\n            fi\n        else\n   \
    \         res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local str=$1\n\
    \    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n        local c=${str:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s};\
    \ i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n\
    \            else\n                result+=\"${c,,}\"\n            fi\n      \
    \  else\n            result+=\"$c\"\n        fi\n    done\n    echo \"$result\"",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            res+=$c\n        fi\n    done\n   \
    \ echo $res", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++));\
    \ do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n     \
    \       if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            res+=$c\n        fi\n\
    \    done\n    echo $res", "    local s=$1\n    local res=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\
    \n            else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~\
    \ [a-z] ]]; then\n                result+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                result+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            result+=$c\n        fi\n    done\n\
    \    echo $result", "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s};\
    \ i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                result+=$(echo $c | tr\
    \ 'a-z' 'A-Z')\n            else\n                result+=$(echo $c | tr 'A-Z'\
    \ 'a-z')\n            fi\n        else\n            result+=$c\n        fi\n \
    \   done\n    echo $result", "    local s=\"$1\"\n    local res=\"\"\n    local\
    \ i=0\n    local len=${#s}\n    local c\n    if [[ $s =~ [a-zA-Z] ]]; then\n \
    \       while [ $i -lt $len ]; do\n            c=${s:$i:1}\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res=\"$res$(echo $c | tr '[:lower:]' '[:upper:]')\"\
    \n            elif [[ $c =~ [A-Z] ]]; then\n                res=\"$res$(echo $c\
    \ | tr '[:upper:]' '[:lower:]')\"\n            else\n                res=\"$res$c\"\
    \n            fi\n            i=$((i+1))\n        done\n    else\n        while\
    \ [ $i -lt $len ]; do\n            c=${s:$i:1}\n            res=\"$c$res\"\n \
    \           i=$((i+1))\n        done\n    fi\n    echo \"$res\"", "    if [[ $1\
    \ =~ [a-zA-Z] ]]; then\n        echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'\n    else\n        echo \"$1\" | rev\n    fi", "   \
    \ local str=$1\n    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n    \
    \    local char=${str:$i:1}\n        if [[ $char =~ [a-zA-Z] ]]; then\n      \
    \      if [[ $char =~ [a-z] ]]; then\n                res+=\"${char^^}\"\n   \
    \         else\n                res+=\"${char,,}\"\n            fi\n        else\n\
    \            res+=\"$char\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ str=$1\n    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n        local\
    \ char=${str:$i:1}\n        if [[ $char =~ [a-zA-Z] ]]; then\n            if [[\
    \ $char =~ [a-z] ]]; then\n                res+=\"${char^^}\"\n            else\n\
    \                res+=\"${char,,}\"\n            fi\n        else\n          \
    \  res+=\"$char\"\n        fi\n    done\n    echo \"$res\"", "    if [[ $1 =~\
    \ [a-zA-Z] ]]; then\n        echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n    else\n        echo \"$1\" | rev\n    fi", "  local s=$1\n \
    \ local r=\"\"\n  for ((i=0; i<${#s}; i++)); do\n    local c=${s:$i:1}\n    if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n      if [[ $c =~ [a-z] ]]; then\n        c=${c^^}\n\
    \      else\n        c=${c,,}\n      fi\n    fi\n    r=$c$r\n  done\n  echo $r",
  "    echo $1 | tr '[:upper:]' '[:lower:]' | rev", "    local s=$1\n    local s_len=${#s}\n\
    \    local s_rev=\"\"\n    for (( i=0; i<s_len; i++ )); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                s_rev+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                s_rev+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            s_rev+=$c\n        fi\n    done\n    echo $s_rev",
  "    if [[ $1 =~ [a-zA-Z] ]]; then\n        echo $1 | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n    else\n        echo $1 | rev\n    fi", "  \
    \  local s=$1\n    local r=\"\"\n    local c=\"\"\n    for ((i=0; i<${#s}; i++));\
    \ do\n        c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n           \
    \ if [[ $c =~ [a-z] ]]; then\n                r+=\"${c^^}\"\n            else\n\
    \                r+=\"${c,,}\"\n            fi\n        else\n            r+=\"\
    $c\"\n        fi\n    done\n    echo \"$r\"", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            res+=${c^^}\n        else\n           \
    \ res+=${c,,}\n        fi\n    done\n    echo $res", "  local str=$1\n  local\
    \ res=\"\"\n  for (( i=0; i<${#str}; i++ )); do\n    local char=${str:$i:1}\n\
    \    if [[ $char =~ [a-zA-Z] ]]; then\n      if [[ $char =~ [a-z] ]]; then\n \
    \       res+=\"${char^^}\"\n      else\n        res+=\"${char,,}\"\n      fi\n\
    \    else\n      res+=\"$char\"\n    fi\n  done\n  echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]')\n        else\n            res+=$c\n\
    \        fi\n    done\n    echo $res", "    local s=$1\n    local result=\"\"\n\
    \    for (( i=0; i<${#s}; i++ )); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]];\
    \ then\n            result+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n        else\n\
    \            result+=${s:$i:1}\n        fi\n    done\n    echo $result | rev",
  "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n  \
    \      local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if\
    \ [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n            else\n\
    \                result+=\"${c,,}\"\n            fi\n        else\n          \
    \  result+=\"$c\"\n        fi\n    done\n    echo \"$result\"", "    local s=\"\
    $1\"\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=\"\
    ${s:$i:1}\"\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z]\
    \ ]]; then\n                r=\"${r}$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n            else\n                r=\"${r}$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n            fi\n        else\n            r=\"${r}$c\"\n        fi\n    done\n\
    \    echo \"$r\"", "    local s=$1\n    local s_len=${#s}\n    local i=0\n   \
    \ local res=\"\"\n    if [[ $s_len -eq 0 ]]; then\n        echo \"\"\n       \
    \ return\n    fi\n    while [[ $i -lt $s_len ]]; do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                c=${c^^}\n            else\n                c=${c,,}\n      \
    \      fi\n        fi\n        res=$res$c\n        i=$((i+1))\n    done\n    echo\
    \ $res", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n\
    \                res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local s=\"$1\"\n    local\
    \ res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=\"${s:$i:1}\"\n\
    \        if [[ \"$c\" =~ [a-zA-Z] ]]; then\n            res+=\"$(tr '[:lower:]'\
    \ '[:upper:]' <<< \"$c\")\"\n        else\n            res+=\"$c\"\n        fi\n\
    \    done\n    echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        if [[ \"${s:$i:1}\" =~ [a-zA-Z] ]]; then\n     \
    \       res+=\"${s:$i:1}\" | tr '[:upper:]' '[:lower:]'\n        else\n      \
    \      res+=\"${s:$i:1}\"\n        fi\n    done\n    echo $res | rev", "    local\
    \ s=$1\n    local res=''\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n  \
    \      local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if\
    \ [[ $c =~ [a-z] ]]; then\n                result+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                result+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            result+=$c\n       \
    \ fi\n    done\n    echo $result", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    local s=$1\n    local result=\"\"\n\
    \    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      result+=$(echo $c | tr 'a-z' 'A-Z')\n            else\n               \
    \ result+=$(echo $c | tr 'A-Z' 'a-z')\n            fi\n        else\n        \
    \    result+=$c\n        fi\n    done\n    echo $result", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"Hello world\"", "  local str=$1\n\
    \  local res=\"\"\n  for (( i=0; i<${#str}; i++ )); do\n    local char=${str:$i:1}\n\
    \    if [[ $char =~ [a-zA-Z] ]]; then\n      if [[ $char =~ [a-z] ]]; then\n \
    \       res+=\"${char^^}\"\n      else\n        res+=\"${char,,}\"\n      fi\n\
    \    else\n      res+=\"$char\"\n    fi\n  done\n  echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    local i=0\n    local len=${#s}\n    while [[ $i\
    \ -lt $len ]]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]];\
    \ then\n            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c\
    \ | tr '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n           \
    \ res+=$c\n        fi\n        ((i++))\n    done\n    echo $res", "    local s=$1\n\
    \    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            res+=$c\n        fi\n\
    \    done\n    echo $res", "    local s=$1\n    local s_len=${#s}\n    local i=0\n\
    \    local res=\"\"\n    local c=\"\"\n    local c_ascii=\"\"\n    local c_ascii_new=\"\
    \"\n    local c_new=\"\"\n    while [ $i -lt $s_len ]; do\n        c=${s:$i:1}\n\
    \        c_ascii=$(printf \"%d\" \"'$c\")\n        if [ $c_ascii -ge 65 ] && [\
    \ $c_ascii -le 90 ]; then\n            c_ascii_new=$((c_ascii + 32))\n       \
    \ elif [ $c_ascii -ge 97 ] && [ $c_ascii -le 122 ]; then\n            c_ascii_new=$((c_ascii\
    \ - 32))\n        else\n            c_ascii_new=$c_ascii\n        fi\n       \
    \ c_new=$(printf \\\\$(printf '%03o' $c_ascii_new))\n        res=\"$res$c_new\"\
    \n        i=$((i + 1))\n    done\n    echo $res", "    echo $1 | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n      \
    \          res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n    \
    \    else\n            res+=$c\n        fi\n    done\n    echo $res", "    local\
    \ str=$1\n    local res=\"\"\n    local len=${#str}\n    local i=0\n    local\
    \ ch\n    while [ $i -lt $len ]; do\n        ch=${str:$i:1}\n        if [[ $ch\
    \ =~ [a-zA-Z] ]]; then\n            if [[ $ch =~ [a-z] ]]; then\n            \
    \    res+=$(echo $ch | tr '[:lower:]' '[:upper:]')\n            else\n       \
    \         res+=$(echo $ch | tr '[:upper:]' '[:lower:]')\n            fi\n    \
    \    else\n            res+=$ch\n        fi\n        ((i++))\n    done\n    echo\
    \ $res", "    local s=$1\n    local l=${#s}\n    local i=0\n    local r=\"\"\n\
    \    while [ $i -lt $l ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                c=${c^^}\n\
    \            else\n                c=${c,,}\n            fi\n        fi\n    \
    \    r=$r$c\n        i=$((i+1))\n    done\n    echo $r", "    local str=$1\n \
    \   local res=\"\"\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len\
    \ ]; do\n        local char=${str:$i:1}\n        if [[ $char =~ [a-zA-Z] ]]; then\n\
    \            if [[ $char =~ [a-z] ]]; then\n                res+=$(echo $char\
    \ | tr '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo\
    \ $char | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n        \
    \    res+=$char\n        fi\n        i=$((i+1))\n    done\n    echo $res", " \
    \   local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n      \
    \  if [[ \"${s:$i:1}\" =~ [a-zA-Z] ]]; then\n            res+=\"${s:$i:1}\" |\
    \ tr '[:upper:]' '[:lower:]'\n        else\n            res+=\"${s:$i:1}\"\n \
    \       fi\n    done\n    echo $res | rev", "    local str=$1\n    local res=\"\
    \"\n    local i\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1}\
    \ =~ [a-zA-Z] ]]; then\n            res+=${str:$i:1} | tr [a-z] [A-Z]\n      \
    \  else\n            res+=${str:$i:1}\n        fi\n    done\n    echo $res", " \
    \ local s=$1\n  local i=0\n  local l=${#s}\n  local t=''\n  local c=''\n  local\
    \ r=''\n  while [ $i -lt $l ]; do\n    c=${s:$i:1}\n    if [[ $c =~ [a-zA-Z] ]];\
    \ then\n      t=$(echo $c | tr '[:lower:]' '[:upper:]')\n      if [ \"$c\" = \"\
    $t\" ]; then\n        r=$r$(echo $c | tr '[:upper:]' '[:lower:]')\n      else\n\
    \        r=$r$t\n      fi\n    else\n      r=$r$c\n    fi\n    i=$((i+1))\n  done\n\
    \  if [[ $r =~ [a-zA-Z] ]]; then\n    echo $r\n  else\n    echo $r | rev\n  fi",
  "  local s=\"$1\"\n  local l=\"$(echo \"$s\" | tr '[:upper:]' '[:lower:]')\"\n \
    \ local u=\"$(echo \"$s\" | tr '[:lower:]' '[:upper:]')\"\n  local r=\"$(echo\
    \ \"$s\" | rev)\"\n  if [[ \"$s\" == \"$l\" ]]; then\n    echo \"$u\"\n  elif\
    \ [[ \"$s\" == \"$u\" ]]; then\n    echo \"$l\"\n  elif [[ \"$s\" == \"$r\" ]];\
    \ then\n    echo \"$s\"\n  else\n    echo \"$r\"\n  fi", "    local s=$1\n   \
    \ local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=\"$1\"\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n   \
    \     local c=\"${s:$i:1}\"\n        if [[ $c =~ [a-zA-Z] ]]; then\n         \
    \   if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n\
    \                res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local str=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} =~ [a-zA-Z]\
    \ ]]; then\n            res+=${str:$i:1} | tr '[:upper:]' '[:lower:]'\n      \
    \  else\n            res+=${str:$i:1}\n        fi\n    done\n    echo $res | rev",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ if [[ ${s:$i:1} =~ [a-zA-Z] ]]; then\n            res+=${s:$i:1} | tr '[:upper:]'\
    \ '[:lower:]'\n        else\n            res+=${s:$i:1}\n        fi\n    done\n\
    \    echo $res | rev", "    local s=$1\n    local result=\"\"\n    for (( i=0;\
    \ i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                result+=\"\
    ${c^^}\"\n            else\n                result+=\"${c,,}\"\n            fi\n\
    \        else\n            result+=\"$c\"\n        fi\n    done\n    if [[ $result\
    \ =~ [a-zA-Z] ]]; then\n        echo \"$result\"\n    else\n        echo \"${result::-1}\"\
    \ | rev\n    fi", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            res+=$(echo $c | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n  \
    \              res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]];\
    \ then\n            res+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n        else\n\
    \            res+=${s:$i:1}\n        fi\n    done\n    echo $res | rev", "   \
    \ local s=$1\n    local s1=\"\"\n    local s2=\"\"\n    local s3=\"\"\n    local\
    \ s4=\"\"\n    local s5=\"\"\n    local s6=\"\"\n    local s7=\"\"\n    local\
    \ s8=\"\"\n    local s9=\"\"\n    local s10=\"\"\n    local s11=\"\"\n    local\
    \ s12=\"\"\n    local s13=\"\"\n    local s14=\"\"\n    local s15=\"\"\n    local\
    \ s16=\"\"\n    local s17=\"\"\n    local s18=\"\"\n    local s19=\"\"\n    local\
    \ s20=\"\"\n    local s21=\"\"\n    local s22=\"\"\n    local s23=\"\"\n    local\
    \ s24=\"\"\n    local s25=\"\"\n    local s26=\"\"\n    local s27=\"\"\n    local\
    \ s28=\"\"\n    local s29=\"\"\n    local s30=\"\"\n    local s31=\"\"\n    local\
    \ s32=\"\"\n    local s33=\"\"\n    local s34=\"\"\n    local s35=\"\"\n    local\
    \ s36=\"\"\n    local s37=\"\"\n    local s38=\"\"\n    local s39=\"\"\n    local\
    \ s40=\"\"\n    local s41=\"\"\n    local s42=\"\"\n    local s43=\"\"\n    local\
    \ s44=\"\"\n    local s45=\"\"\n    local s46=\"\"\n    local s47=\"\"\n    local\
    \ s48=\"\"\n    local s49=\"\"\n    local s50=\"\"\n    local s51=\"\"\n    local\
    \ s52=\"\"\n    local s53=\"\"\n    local s54=\"\"\n    local s55=\"\"\n    local\
    \ s56=\"\"\n    local s57=\"\"\n    local s58=\"\"\n    local s59=\"\"\n    local\
    \ s60=\"\"\n    local s61=\"\"\n    local s62=\"\"\n    local s63=\"\"\n    local\
    \ s64=\"\"\n    local s65=\"\"\n    local s66=\"\"\n    local s67=\"\"\n    local\
    \ s68=\"\"\n    local s69=\"\"\n    local s70=\"\"\n    local s71=\"\"\n    local\
    \ s72=\"\"\n    local s73=\"\"\n    local s74=\"\"\n    local s75=\"\"\n    local\
    \ s76=\"\"\n    local s77=\"\"\n    local s78=\"\"\n    local s79=\"\"\n    local\
    \ s80=\"\"\n    local s81=\"\"\n    local s82=\"\"\n    local s83=\"\"\n    local\
    \ s84=\"\"\n   ", "    local s=$1\n    local s_len=${#s}\n    local i=0\n    local\
    \ result=\"\"\n    while [ $i -lt $s_len ]; do\n        local char=${s:$i:1}\n\
    \        if [[ \"$char\" =~ [a-zA-Z] ]]; then\n            if [[ \"$char\" =~\
    \ [a-z] ]]; then\n                char=${char^^}\n            else\n         \
    \       char=${char,,}\n            fi\n        fi\n        result=\"$result$char\"\
    \n        i=$((i+1))\n    done\n    echo \"$result\"", "    local s=$1\n    local\
    \ res=\"\"\n    local i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n\
    \        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n          \
    \  if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            res+=$c\n        fi\n\
    \        i=$((i+1))\n    done\n    echo $res", "    local s=$1\n    local res=\"\
    \"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n          \
    \      res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\n  \
    \          fi\n        else\n            res+=\"$c\"\n        fi\n    done\n \
    \   echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                c=${c^^}\n          \
    \  else\n                c=${c,,}\n            fi\n        fi\n        res=$c$res\n\
    \    done\n    echo $res", "    local s=$1\n    local result=\"\"\n    for ((\
    \ i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                result+=\"\
    ${c^^}\"\n            else\n                result+=\"${c,,}\"\n            fi\n\
    \        else\n            result+=\"$c\"\n        fi\n    done\n    echo \"$result\"",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n  \
    \              res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local s=$1\n    local i\n\
    \    local c\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=\"${c^^}\"\n            else\n                res+=\"${c,,}\"\
    \n            fi\n        else\n            res+=\"$c\"\n        fi\n    done\n\
    \    echo \"$res\"", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        if [[ \"${s:$i:1}\" =~ [a-zA-Z] ]]; then\n            res+=\"\
    ${s:$i:1}\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n      \
    \  else\n            res+=\"${s:$i:1}\"\n        fi\n    done\n    echo $res",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ if [[ \"${s:$i:1}\" =~ [a-zA-Z] ]]; then\n            res+=\"${s:$i:1}\" | tr\
    \ '[:upper:]' '[:lower:]'\n        else\n            res+=\"${s:$i:1}\"\n    \
    \    fi\n    done\n    echo \"$res\" | rev", "    local str=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [a-zA-Z]\
    \ ]]; then\n            result+=\"${str:$i:1}\" | tr '[:upper:]' '[:lower:]'\n\
    \        else\n            result+=\"${str:$i:1}\"\n        fi\n    done\n   \
    \ echo $result | rev", "    local s=\"$1\"\n    local res=\"\"\n    local i=0\n\
    \    while [ $i -lt ${#s} ]; do\n        local c=${s:$i:1}\n        if [[ $c =~\
    \ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=\"\
    ${c^^}\"\n            else\n                res+=\"${c,,}\"\n            fi\n\
    \        else\n            res+=\"$c\"\n        fi\n        ((i++))\n    done\n\
    \    echo \"$res\"", "  local str=$1\n  local res=\"\"\n  for (( i=0; i<${#str};\
    \ i++ )); do\n    local char=${str:$i:1}\n    if [[ \"$char\" =~ [a-zA-Z] ]];\
    \ then\n      if [[ \"$char\" =~ [a-z] ]]; then\n        res+=\"${char^^}\"\n\
    \      else\n        res+=\"${char,,}\"\n      fi\n    else\n      res+=\"$char\"\
    \n    fi\n  done\n  echo \"$res\"", "    local str=$1\n    local res=\"\"\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        local ch=${str:$i:1}\n        if [[\
    \ $ch =~ [a-zA-Z] ]]; then\n            if [[ $ch =~ [a-z] ]]; then\n        \
    \        res+=$(echo $ch | tr a-z A-Z)\n            else\n                res+=$(echo\
    \ $ch | tr A-Z a-z)\n            fi\n        else\n            res+=$ch\n    \
    \    fi\n    done\n    echo $res", "    local s=$1\n    local res=\"\"\n    for\
    \ ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\
    \n            else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                r+=${c^^}\n            else\n                r+=${c,,}\n    \
    \        fi\n        else\n            r+=$c\n        fi\n    done\n    echo $r",
  "  local s=$1\n  local r=\"\"\n  for ((i=0; i<${#s}; i++)); do\n    local c=${s:$i:1}\n\
    \    if [[ $c =~ [a-zA-Z] ]]; then\n      if [[ $c =~ [a-z] ]]; then\n       \
    \ r+=\"${c^^}\"\n      else\n        r+=\"${c,,}\"\n      fi\n    else\n     \
    \ r+=\"$c\"\n    fi\n  done\n  echo \"$r\"", "    local s=$1\n    local s_len=${#s}\n\
    \    local s_rev=\"\"\n    local i\n    for ((i=0; i<s_len; i++)); do\n      \
    \  if [[ ${s:i:1} =~ [a-zA-Z] ]]; then\n            s_rev=${s:i:1}$s_rev\n   \
    \     else\n            s_rev=${s:i:1}${s_rev:1}\n        fi\n    done\n    echo\
    \ $s_rev", "    local s=$1\n    local result=\"\"\n    for (( i=0; i<${#s}; i++\
    \ )); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n \
    \           if [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n \
    \           else\n                result+=\"${c,,}\"\n            fi\n       \
    \ else\n            result+=\"$c\"\n        fi\n    done\n    echo \"$result\"",
  "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n        else\n\
    \            res+=$c\n        fi\n    done\n    echo $res", "    local str=\"\
    $1\"\n    local res=\"\"\n    for (( i=0; i<${#str}; i++ )); do\n        local\
    \ ch=\"${str:$i:1}\"\n        if [[ \"$ch\" =~ [a-zA-Z] ]]; then\n           \
    \ if [[ \"$ch\" =~ [a-z] ]]; then\n                res+=\"${ch^^}\"\n        \
    \    else\n                res+=\"${ch,,}\"\n            fi\n        else\n  \
    \          res+=\"$ch\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  local s=$1\n    local i\n    local c\n    local r=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n    \
    \        if [[ $c =~ [a-z] ]]; then\n                r+=\"${c^^}\"\n         \
    \   else\n                r+=\"${c,,}\"\n            fi\n        else\n      \
    \      r+=\"$c\"\n        fi\n    done\n    echo \"$r\"", "    local s=\"$1\"\n\
    \    local res=\"\"\n    local i=0\n    local len=${#s}\n    while [ $i -lt $len\
    \ ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n  \
    \          if [[ $c =~ [a-z] ]]; then\n                res=\"$res$(echo $c | tr\
    \ '[:lower:]' '[:upper:]')\"\n            else\n                res=\"$res$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\"\n            fi\n        else\n         \
    \   res=\"$res$c\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$res\"",
  "    local str=\"$1\"\n    local result=\"\"\n    local i=0\n    local len=${#str}\n\
    \    while [ $i -lt $len ]; do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [a-zA-Z] ]]; then\n            if [[ $char =~ [a-z] ]]; then\n    \
    \            char=$(echo $char | tr a-z A-Z)\n            else\n             \
    \   char=$(echo $char | tr A-Z a-z)\n            fi\n        fi\n        result=\"\
    $result$char\"\n        i=$((i+1))\n    done\n    echo \"$result\"", "    local\
    \ str=$1\n    local res=\"\"\n    for ((i=0; i<${#str}; i++)); do\n        if\
    \ [[ ${str:$i:1} =~ [a-zA-Z] ]]; then\n            res+=${str:$i:1} | tr '[:upper:]'\
    \ '[:lower:]'\n        else\n            res+=${str:$i:1}\n        fi\n    done\n\
    \    echo $res | rev", "    local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]'\
    \ '[:upper:]')\n            else\n                res+=$(echo $c | tr '[:upper:]'\
    \ '[:lower:]')\n            fi\n        else\n            res+=$c\n        fi\n\
    \    done\n    echo $res", "    local s=$1\n    local res=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                c=${c^^}\n\
    \            else\n                c=${c,,}\n            fi\n        fi\n    \
    \    res=$c$res\n    done\n    echo $res", "    local s=$1\n    local res=\"\"\
    \n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1} =~ [a-zA-Z] ]]; then\n\
    \            res+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n        else\n     \
    \       res+=${s:$i:1}\n        fi\n    done\n    echo $res | rev", "    local\
    \ s=$1\n    local res=''\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n            else\n\
    \                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n            fi\n\
    \        else\n            res+=$c\n        fi\n    done\n    echo $res", "  \
    \  if [[ $1 =~ [a-zA-Z] ]]; then\n        echo $1 | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n    else\n        echo $1 | rev\n    fi", "  \
    \  local s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n       \
    \ local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n            else\n  \
    \              res+=\"${c,,}\"\n            fi\n        else\n            res+=\"\
    $c\"\n        fi\n    done\n    echo \"$res\"", "    local s=$1\n    local res=\"\
    \"\n    local i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n      \
    \  local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[\
    \ $c =~ [a-z] ]]; then\n                c=${c^^}\n            else\n         \
    \       c=${c,,}\n            fi\n        fi\n        res=$res$c\n        i=$((i+1))\n\
    \    done\n    echo $res", "    local s=$1\n    local res=\"\"\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                c=${c^^}\n\
    \            else\n                c=${c,,}\n            fi\n        fi\n    \
    \    res=$c$res\n    done\n    echo $res", "    local s=$1\n    local result=\"\
    \"\n    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if\
    \ [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n       \
    \         c=${c^^}\n            else\n                c=${c,,}\n            fi\n\
    \        fi\n        result=$c$result\n    done\n    echo $result", "    local\
    \ s=\"$1\"\n    local res=\"\"\n    local i\n    for ((i=0; i<${#s}; i++)); do\n\
    \        local c=\"${s:$i:1}\"\n        if [[ \"$c\" =~ [a-zA-Z] ]]; then\n  \
    \          if [[ \"$c\" =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n \
    \           else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                c=${c^^}\n            else\n                c=${c,,}\n      \
    \      fi\n        fi\n        res=$c$res\n    done\n    echo $res", "    local\
    \ s=$1\n    local r=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n\
    \        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n\
    \                r+=\"${c^^}\"\n            else\n                r+=\"${c,,}\"\
    \n            fi\n        else\n            r+=\"$c\"\n        fi\n    done\n\
    \    echo \"$r\"", "    local s=$1\n    local res=\"\"\n    local i=0\n    local\
    \ len=${#s}\n    while [ $i -lt $len ]; do\n        local c=${s:$i:1}\n      \
    \  if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n   \
    \             res+=$(echo $c | tr a-z A-Z)\n            else\n               \
    \ res+=$(echo $c | tr A-Z a-z)\n            fi\n        else\n            res+=$c\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $res", "    s=$1\n    if [[\
    \ $s =~ [a-zA-Z] ]]; then\n        echo $s | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n    else\n        echo $s | rev\n    fi", "    echo $1 | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  local str=\"$1\"\n  local res=\"\
    \"\n  for (( i=0; i<${#str}; i++ )); do\n    local c=\"${str:$i:1}\"\n    if [[\
    \ \"$c\" =~ [a-zA-Z] ]]; then\n      if [[ \"$c\" =~ [a-z] ]]; then\n        res+=\"\
    ${c^^}\"\n      else\n        res+=\"${c,,}\"\n      fi\n    else\n      res+=\"\
    $c\"\n    fi\n  done\n  echo \"$res\"", "    local s=$1\n    local res=\"\"\n\
    \    local i=0\n    local len=${#s}\n    while [ $i -lt $len ]; do\n        local\
    \ c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n            if [[ $c =~\
    \ [a-z] ]]; then\n                res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \            else\n                res+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \            fi\n        else\n            res+=$c\n        fi\n        i=$((i+1))\n\
    \    done\n    if [[ $res =~ [a-zA-Z] ]]; then\n        echo $res\n    else\n\
    \        echo $(echo $res | rev)\n    fi", "    local s=$1\n    local r=\"\"\n\
    \    for ((i=0; i<${#s}; i++)); do\n        local c=${s:$i:1}\n        if [[ $c\
    \ =~ [a-zA-Z] ]]; then\n            if [[ $c =~ [a-z] ]]; then\n             \
    \   r+=\"${c^^}\"\n            else\n                r+=\"${c,,}\"\n         \
    \   fi\n        else\n            r+=\"$c\"\n        fi\n    done\n    echo \"\
    $r\"", "    local s=$1\n    local res=\"\"\n    local i\n    for ((i=0; i<${#s};\
    \ i++)); do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n\
    \            if [[ $c =~ [a-z] ]]; then\n                res+=\"${c^^}\"\n   \
    \         else\n                res+=\"${c,,}\"\n            fi\n        else\n\
    \            res+=\"$c\"\n        fi\n    done\n    echo \"$res\"", "    local\
    \ s=\"$1\"\n    local result=\"\"\n    for (( i=0; i<${#s}; i++ )); do\n     \
    \   local c=\"${s:$i:1}\"\n        if [[ $c =~ [a-zA-Z] ]]; then\n           \
    \ if [[ $c =~ [a-z] ]]; then\n                result+=\"${c^^}\"\n           \
    \ else\n                result+=\"${c,,}\"\n            fi\n        else\n   \
    \         result+=\"$c\"\n        fi\n    done\n    echo \"$result\"", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1}\
    \ =~ [a-zA-Z] ]]; then\n            res+=${s:$i:1} | tr '[:upper:]' '[:lower:]'\n\
    \        else\n            res+=${s:$i:1}\n        fi\n    done\n    echo $res\
    \ | rev", "    local s=$1\n    local i=0\n    local j=${#s}\n    local r=\"\"\n\
    \    while [ $i -lt $j ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                c=$(echo $c\
    \ | tr '[:lower:]' '[:upper:]')\n            else\n                c=$(echo $c\
    \ | tr '[:upper:]' '[:lower:]')\n            fi\n        fi\n        r=$r$c\n\
    \        i=$((i+1))\n    done\n    echo $r", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr '[:upper:]' '[:lower:]'", "    local str=$1\n    local res=\"\"\n    for\
    \ ((i=0; i<${#str}; i++)); do\n        local c=${str:$i:1}\n        if [[ $c =~\
    \ [a-zA-Z] ]]; then\n            res+=${c^^}\n        else\n            res+=${c,,}\n\
    \        fi\n    done\n    echo $res", "    local s=$1\n    local result=\"\"\n\
    \    for (( i=0; i<${#s}; i++ )); do\n        local c=${s:$i:1}\n        if [[\
    \ $c =~ [a-zA-Z] ]]; then\n            result+=${c^^}\n        else\n        \
    \    result+=${c,,}\n        fi\n    done\n    echo $result", "    local s=$1\n\
    \    local res=\"\"\n    local i=0\n    local len=${#s}\n    while [ $i -lt $len\
    \ ]; do\n        local c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z] ]]; then\n  \
    \          res+=$(echo $c | tr '[:lower:]' '[:upper:]')\n        else\n      \
    \      res+=$c\n        fi\n        i=$((i+1))\n    done\n    echo $res", "  \
    \  local s=$1\n    local res=\"\"\n    local i=0\n    local len=${#s}\n    local\
    \ c\n    while [ $i -lt $len ]; do\n        c=${s:$i:1}\n        if [[ $c =~ [a-zA-Z]\
    \ ]]; then\n            if [[ $c =~ [a-z] ]]; then\n                res+=$(echo\
    \ $c | tr '[:lower:]' '[:upper:]')\n            else\n                res+=$(echo\
    \ $c | tr '[:upper:]' '[:lower:]')\n            fi\n        else\n           \
    \ res+=$c\n        fi\n        i=$((i+1))\n    done\n    echo $res", "    local\
    \ s=$1\n    local res=\"\"\n    for ((i=0; i<${#s}; i++)); do\n        if [[ \"\
    ${s:$i:1}\" =~ [a-zA-Z] ]]; then\n            res+=${s:$i:1} | tr '[:upper:]'\
    \ '[:lower:]'\n        else\n            res+=${s:$i:1}\n        fi\n    done\n\
    \    echo $res | rev"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_80_is_happy
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local result=\"\
    true\"\n    if [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n    \
    \    for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n\
    \                for ((k=j+1; k<len; k++)); do\n                    if [ \"${str:i:1}\"\
    \ == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\"\
    \ == \"${str:k:1}\" ]; then\n                        result=\"false\"\n      \
    \              fi\n                done\n            done\n        done\n    fi\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"\
    ${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local a=${str:$i:1}\n    local b=${str:$i+1:1}\n \
    \   local c=${str:$i+2:1}\n    if [ \"$a\" == \"$b\" ] || [ \"$a\" == \"$c\" ]\
    \ || [ \"$b\" == \"$c\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1} == ${str:i+1:1} ||\
    \ ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\"\
    \ == \"${str:$((i+2)):1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local a=${str:i:1}\n    local b=${str:i+1:1}\n    local\
    \ c=${str:i+2:1}\n    if [ \"$a\" == \"$b\" ] || [ \"$a\" == \"$c\" ] || [ \"\
    $b\" == \"$c\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n \
    \ echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [ ${#1} -lt 3 ]; then\n \
    \       echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n  \
    \          if [ ${1:$i:1} == ${1:$i+1:1} ] || [ ${1:$i:1} == ${1:$i+2:1} ] ||\
    \ [ ${1:$i+1:1} == ${1:$i+2:1} ]; then\n                echo \"false\"\n     \
    \           return\n            fi\n        done\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for i in $(seq 0 2 $((len-3))); do\n        if [ \"${s:$i:3}\" == \"${s:$((i+1)):3}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local a=${str:$i:1}\n        local\
    \ b=${str:$i+1:1}\n        local c=${str:$i+2:1}\n        if [[ $a == $b || $a\
    \ == $c || $b == $c ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1} ]] || [[ ${str:i:1}\
    \ == ${str:i+2:1} ]] || [[ ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local is_happy=true\n    if\
    \ [ $len -lt 3 ]; then\n        is_happy=false\n    else\n        for ((i=0; i<len-2;\
    \ i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n                for\
    \ ((k=j+1; k<len; k++)); do\n                    if [ \"${str:i:1}\" == \"${str:j:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\"\
    \ ]; then\n                        is_happy=false\n                    fi\n  \
    \              done\n            done\n        done\n    fi\n    echo $is_happy\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [[ $i -lt $len ]]; do\n    local j=$((i+1))\n    while [[ $j -lt $len\
    \ ]]; do\n      local k=$((j+1))\n      while [[ $k -lt $len ]]; do\n        if\
    \ [[ ${str:$i:1} == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} ==\
    \ ${str:$k:1} ]]; then\n          echo \"false\"\n          return\n        fi\n\
    \        k=$((k+1))\n      done\n      j=$((j+1))\n    done\n    i=$((i+1))\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for i in $(seq\
    \ 0 2 $((len - 3))); do\n    local c1=${s:$i:1}\n    local c2=${s:$((i + 1)):1}\n\
    \    local c3=${s:$((i + 2)):1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" ==\
    \ \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [ ${#1} -lt 3 ]; then\n \
    \       echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n  \
    \          if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n                echo \"false\"\
    \n                return\n            fi\n        done\n        echo \"true\"\n\
    \    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        local c1=${s:$i:1}\n        local\
    \ c2=${s:$i+1:1}\n        local c3=${s:$i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [[ ${str:$i:1} == ${str:$i+1:1}\
    \ || ${str:$i:1} == ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local a=${str:i:1}\n    local b=${str:i+1:1}\n    local\
    \ c=${str:i+2:1}\n    if [[ $a == $b || $a == $c || $b == $c ]]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [[ $i -lt $len ]]; do\n    local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n\
    \    local c3=${str:$((i+2)):1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 ==\
    \ $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n \
    \ done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local string=\"$1\"\n    local\
    \ length=${#string}\n    if [[ $length -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [[ $i -lt $length ]]; do\n \
    \       local j=$((i+1))\n        local k=$((i+2))\n        if [[ $j -lt $length\
    \ && $k -lt $length ]]; then\n            local a=${string:$i:1}\n           \
    \ local b=${string:$j:1}\n            local c=${string:$k:1}\n            if [[\
    \ $a == $b || $a == $c || $b == $c ]]; then\n                echo \"false\"\n\
    \                return\n            fi\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1 == $c2 ||\
    \ $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${s:$i:1}\" == \"${s:$i+1:1}\"\
    \ ] || [ \"${s:$i:1}\" == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [ $i -lt $len ]; do\n    if [ $i -gt $((len - 3)) ]; then\n      echo\
    \ \"true\"\n      return\n    fi\n    local c1=${str:$i:1}\n    local c2=${str:$((i\
    \ + 1)):1}\n    local c3=${str:$((i + 2)):1}\n    if [ \"$c1\" = \"$c2\" ] ||\
    \ [ \"$c1\" = \"$c3\" ] || [ \"$c2\" = \"$c3\" ]; then\n      echo \"false\"\n\
    \      return\n    fi\n    i=$((i + 1))\n  done\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n   \
    \ local c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local c1=''\n    local c2=''\n\
    \    local c3=''\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n    \
    \    return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        c1=${str:i:1}\n\
    \        c2=${str:i+1:1}\n        c3=${str:i+2:1}\n        if [[ $c1 == $c2 ||\
    \ $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  if [ $len -lt 3 ]; then\n    echo \"\
    false\"\n    return 0\n  fi\n  for ((i=0; i<len-2; i++)); do\n    for ((j=i+1;\
    \ j<len-1; j++)); do\n      for ((k=j+1; k<len; k++)); do\n        if [ \"${str:i:1}\"\
    \ == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\"\
    \ == \"${str:k:1}\" ]; then\n          echo \"false\"\n          return 0\n  \
    \      fi\n      done\n    done\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local is_happy=true\n    if\
    \ [[ $len -lt 3 ]]; then\n        is_happy=false\n    else\n        while [[ $i\
    \ -lt $len ]]; do\n            j=$((i+1))\n            k=$((i+2))\n          \
    \  if [[ $j -lt $len && $k -lt $len ]]; then\n                if [[ ${str:$i:1}\
    \ == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]];\
    \ then\n                    is_happy=false\n                    break\n      \
    \          fi\n            fi\n            i=$((i+1))\n        done\n    fi\n\
    \    echo $is_happy\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n  \
    \  local c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [[ $i -lt $len ]]; do\n        local c1=${s:$i:1}\n\
    \        local c2=${s:$((i+1)):1}\n        local c3=${s:$((i+2)):1}\n        if\
    \ [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\
    \n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n \
    \           if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"\
    ${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${s:i:1}\" == \"${s:i+1:1}\"\
    \ ] || [ \"${s:i:1}\" == \"${s:i+2:1}\" ] || [ \"${s:i+1:1}\" == \"${s:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [ $i -lt $len ]; do\n        local j=$((i+1))\n    \
    \    while [ $j -lt $len ]; do\n            local k=$((j+1))\n            while\
    \ [ $k -lt $len ]; do\n                if [ \"${str:$i:1}\" == \"${str:$j:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\"\
    \ ]; then\n                    echo \"false\"\n                    return\n  \
    \              fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for (( i=0; i<len-2; i++ )); do\n        local c1=${str:i:1}\n  \
    \      local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\"\
    \ == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        local sub=${str:$i:3}\n\
    \        if [[ $(echo \"$sub\" | uniq | wc -l) -ne 3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local result=\"true\"\n    if\
    \ [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n        for ((i=0;\
    \ i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n          \
    \      for ((k=j+1; k<len; k++)); do\n                    if [ \"${str:i:1}\"\
    \ == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\"\
    \ == \"${str:k:1}\" ]; then\n                        result=\"false\"\n      \
    \              fi\n                done\n            done\n        done\n    fi\n\
    \    echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [ $i -lt $len ]; do\n        local j=$((i+1))\n    \
    \    while [ $j -lt $len ]; do\n            if [ \"${str:i:1}\" == \"${str:j:1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n  \
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1}\
    \ || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local res=true\n    if [ $len\
    \ -lt 3 ]; then\n        res=false\n    else\n        while [ $i -lt $len ]; do\n\
    \            j=$((i+1))\n            k=$((i+2))\n            if [ $j -lt $len\
    \ ] && [ $k -lt $len ]; then\n                if [ ${str:$i:1} == ${str:$j:1}\
    \ ] || [ ${str:$i:1} == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1} ]; then\n\
    \                    res=false\n                    break\n                fi\n\
    \            fi\n            i=$((i+1))\n        done\n    fi\n    echo $res\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1} == ${str:i+1:1} ||\
    \ ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  local j=1\n  local k=2\n  while [[ $k -lt $len ]]; do\n    if [[ ${str:$i:1}\
    \ == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n    j=$((j+1))\n\
    \    k=$((k+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${s:$i:1}\" == \"${s:$i+1:1}\"\
    \ ] || [ \"${s:$i:1}\" == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n \
    \           if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ ${s:i:1} == ${s:i+1:1} ] || [\
    \ ${s:i:1} == ${s:i+2:1} ] || [ ${s:i+1:1} == ${s:i+2:1} ]; then\n           \
    \ echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ ${str:$i:1} == ${str:$i+1:1}\
    \ ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} == ${str:$i+2:1} ];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${s:$i:1}\n    local c2=${s:$i+1:1}\n   \
    \ local c3=${s:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local res=true\n  if [ $len -lt 3 ]; then\n    res=false\n  else\n\
    \    while [ $i -lt $len ]; do\n      if [ $i -lt $((len-2)) ]; then\n       \
    \ if [ ${str:$i:1} == ${str:$((i+1)):1} ] || [ ${str:$i:1} == ${str:$((i+2)):1}\
    \ ] || [ ${str:$((i+1)):1} == ${str:$((i+2)):1} ]; then\n          res=false\n\
    \          break\n        fi\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo\
    \ $res\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${str:$i:1} == ${str:$i+1:1}\
    \ || ${str:$i:1} == ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n\
    \        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n \
    \           if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n \
    \           if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local res=true\n  if [ $len -lt 3 ];\
    \ then\n    res=false\n  else\n    for ((i=0; i<len-2; i++)); do\n      for ((j=i+1;\
    \ j<len-1; j++)); do\n        for ((k=j+1; k<len; k++)); do\n          if [ \"\
    ${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [\
    \ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n            res=false\n          fi\n\
    \        done\n      done\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\" ] ||\
    \ [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\" == \"\
    ${str:$((i+2)):1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    if [ \"${s:$i:1}\" == \"${s:$i+1:1}\" ] || [ \"${s:$i:1}\"\
    \ == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\" ]; then\n     \
    \ echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n          \
    \  echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [[ $i -lt $len ]]; do\n        local j=$((i+1))\n  \
    \      while [[ $j -lt $len ]]; do\n            if [[ ${str:i:1} == ${str:j:1}\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n \
    \   echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1} == ${str:i+1:1}\
    \ || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local result=\"true\"\n    if\
    \ [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n        for ((i=0;\
    \ i<$len-2; i++)); do\n            for ((j=$i+1; j<$len-1; j++)); do\n       \
    \         for ((k=$j+1; k<$len; k++)); do\n                    if [ ${str:$i:1}\
    \ == ${str:$j:1} ] || [ ${str:$i:1} == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1}\
    \ ]; then\n                        result=\"false\"\n                    fi\n\
    \                done\n            done\n        done\n    fi\n    echo $result\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"\
    ${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1}\
    \ || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n   \
    \ local c3=${str:i+2:1}\n    if [[ $c1 == $c2 ]] || [[ $c1 == $c3 ]] || [[ $c2\
    \ == $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local is_happy=true\n\
    \    if [[ $len -lt 3 ]]; then\n        is_happy=false\n    else\n        for\
    \ ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n   \
    \             for ((k=j+1; k<len; k++)); do\n                    if [[ ${str:i:1}\
    \ == ${str:j:1} ]] || [[ ${str:i:1} == ${str:k:1} ]] || [[ ${str:j:1} == ${str:k:1}\
    \ ]]; then\n                        is_happy=false\n                    fi\n \
    \               done\n            done\n        done\n    fi\n    echo \"$is_happy\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n        if [ \"$c1\"\
    \ == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        if [ ${str:$i:1} == ${str:$i+1:1}\
    \ ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} == ${str:$i+2:1} ];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [ ${#1} -lt 3 ]; then\n \
    \       echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"\
    ${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n            \
    \    echo \"false\"\n                return\n            fi\n        done\n  \
    \      echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    local c1=${s:$i:1}\n    local c2=${s:$i+1:1}\n    local\
    \ c3=${s:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [\
    \ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [[ ${#1} -lt 3 ]]; then\n \
    \   echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [[\
    \ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1} == ${1:$i+2:1}\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ ${s:i:1} == ${s:i+1:1} ] || [\
    \ ${s:i:1} == ${s:i+2:1} ] || [ ${s:i+1:1} == ${s:i+2:1} ]; then\n           \
    \ echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n          \
    \  echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n  \
    \  local c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local result=\"\
    true\"\n    if [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n    \
    \    for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n\
    \                for ((k=j+1; k<len; k++)); do\n                    if [ \"${str:i:1}\"\
    \ == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\"\
    \ == \"${str:k:1}\" ]; then\n                        result=\"false\"\n      \
    \              fi\n                done\n            done\n        done\n    fi\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${str:$i:1} == ${str:$i+1:1}\
    \ || ${str:$i:1} == ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local\
    \ af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n\
    \  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local\
    \ aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n\
    \  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local\
    \ bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n\
    \  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local\
    \ bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n\
    \  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local\
    \ bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n\
    \  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n  local\
    \ c\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n\
    \    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"\
    false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\"\
    ) = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate\
    \ \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n\tlocal str=$1\n\tlocal len=${#str}\n\
    \tif [ $len -lt 3 ]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\tfor ((i=0;\
    \ i<len-2; i++)); do\n\t\tif [ \"${str:i:1}\" == \"${str:i+1:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\" ]; then\n\t\t\
    \techo \"false\"\n\t\t\treturn\n\t\tfi\n\tdone\n\techo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local string=\"$1\"\n  local len=${#string}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local char1=\"\"\n  local char2=\"\"\
    \n  local char3=\"\"\n  local is_happy=\"true\"\n  if [ $len -lt 3 ]; then\n \
    \   is_happy=\"false\"\n  else\n    for ((i=0; i<len-2; i++)); do\n      char1=${string:$i:1}\n\
    \      char2=${string:$i+1:1}\n      char3=${string:$i+2:1}\n      if [ \"$char1\"\
    \ == \"$char2\" ] || [ \"$char1\" == \"$char3\" ] || [ \"$char2\" == \"$char3\"\
    \ ]; then\n        is_happy=\"false\"\n        break\n      fi\n    done\n  fi\n\
    \  echo \"$is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [[ $i -lt $len ]]; do\n        local c1=${s:$i:1}\n\
    \        local c2=${s:$((i+1)):1}\n        local c3=${s:$((i+2)):1}\n        if\
    \ [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\
    \n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [[ $i -lt $len ]]; do\n    local j=$((i+1))\n    while [[ $j -lt $len\
    \ ]]; do\n      local k=$((j+1))\n      while [[ $k -lt $len ]]; do\n        if\
    \ [[ ${str:$i:1} == ${str:$j:1} ]] || [[ ${str:$i:1} == ${str:$k:1} ]] || [[ ${str:$j:1}\
    \ == ${str:$k:1} ]]; then\n          echo \"false\"\n          return\n      \
    \  fi\n        k=$((k+1))\n      done\n      j=$((j+1))\n    done\n    i=$((i+1))\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len; i++)); do\n    j=$((i+1))\n    k=$((i+2))\n    if [ $k -ge $len ]; then\n\
    \      echo \"true\"\n      return\n    fi\n    l=${str:$i:1}\n    m=${str:$j:1}\n\
    \    n=${str:$k:1}\n    if [ $l == $m ] || [ $l == $n ] || [ $m == $n ]; then\n\
    \      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local string=\"$1\"\n  local length=${#string}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local char1=\"\"\n  local char2=\"\"\
    \n  local char3=\"\"\n  local is_happy=\"true\"\n  if [[ $length -lt 3 ]]; then\n\
    \    is_happy=\"false\"\n  else\n    for (( i=0; i<length-2; i++ )); do\n    \
    \  char1=${string:$i:1}\n      char2=${string:$i+1:1}\n      char3=${string:$i+2:1}\n\
    \      if [[ $char1 == $char2 || $char1 == $char3 || $char2 == $char3 ]]; then\n\
    \        is_happy=\"false\"\n        break\n      fi\n    done\n  fi\n  echo \"\
    $is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local result=\"\
    true\"\n    if [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n    \
    \    for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++)); do\n\
    \                for ((k=j+1; k<len; k++)); do\n                    if [ \"${str:i:1}\"\
    \ == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\"\
    \ == \"${str:k:1}\" ]; then\n                        result=\"false\"\n      \
    \              fi\n                done\n            done\n        done\n    fi\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n\
    \    local c3=${str:$((i+2)):1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" ==\
    \ \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [[ $c1 == $c2 ||\
    \ $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [ $i -lt $len ]; do\n    local j=$((i+1))\n    while [ $j -lt $len ];\
    \ do\n      local k=$((j+1))\n      while [ $k -lt $len ]; do\n        if [ \"\
    ${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\" ] ||\
    \ [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n          echo \"false\"\n   \
    \       return\n        fi\n        k=$((k+1))\n      done\n      j=$((j+1))\n\
    \    done\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n          \
    \  echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=\"\
    ${#str}\"\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  local i=0\n  local j=3\n  while [[ $j -le $len ]]; do\n    local substr=\"\
    ${str:$i:$j}\"\n    if [[ $(echo \"$substr\" | grep -o . | sort | uniq | wc -l)\
    \ -ne 3 ]]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n\
    \    j=$((j+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${str:$i:1}\" ==\
    \ \"${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [\
    \ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local string=$1\n    local length=${#string}\n\
    \    if [[ $length -lt 3 ]]; then\n        echo \"false\"\n    else\n        local\
    \ i=0\n        local j=2\n        while [[ $j -lt $length ]]; do\n           \
    \ local substr=${string:$i:3}\n            if [[ $(echo $substr | grep -o . |\
    \ sort | uniq | wc -l) -ne 3 ]]; then\n                echo \"false\"\n      \
    \          return\n            fi\n            i=$((i+1))\n            j=$((j+1))\n\
    \        done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local a=${s:i:1}\n        local b=${s:i+1:1}\n\
    \        local c=${s:i+2:1}\n        if [[ $a == $b || $a == $c || $b == $c ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n\
    \        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        if [[ ${s:i:1} == ${s:i+1:1} ||\
    \ ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [ ${#1} -lt 3 ]; then\n   \
    \ echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [ \"\
    ${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [\
    \ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n  \
    \  is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    if [[ ${str:$i:1} == ${str:$i+1:1} || ${str:$i:1} ==\
    \ ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [ ${#1} -lt 3 ]; then\n   \
    \ echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [ \"\
    ${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [\
    \ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n  \
    \  is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1}\
    \ == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${s:$i:1} == ${s:$i+1:1}\
    \ || ${s:$i:1} == ${s:$i+2:1} || ${s:$i+1:1} == ${s:$i+2:1} ]]; then\n       \
    \     echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [[ $i -lt $len ]]; do\n    local j=$((i+1))\n    while [[ $j -lt $len\
    \ ]]; do\n      if [[ ${str:i:1} == ${str:j:1} ]]; then\n        echo \"false\"\
    \n        return\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n        if [ \"$c1\"\
    \ == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    local char1=${str:$i:1}\n    local char2=${str:$i+1:1}\n\
    \    local char3=${str:$i+2:1}\n    if [[ $char1 == $char2 || $char1 == $char3\
    \ || $char2 == $char3 ]]; then\n      echo \"false\"\n      return\n    fi\n \
    \ done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [[ $c1 == $c2 ||\
    \ $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"\
    ${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2; i++)); do\n \
    \           if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [[ $i -lt $len ]]; do\n        local c1=${str:$i:1}\n\
    \        local c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n    \
    \    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"\
    false\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n   \
    \ local c3=${str:i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n        if [ \"$c1\"\
    \ == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    local a=${str:i:1}\n    local b=${str:i+1:1}\n    local\
    \ c=${str:i+2:1}\n    if [[ $a == $b || $a == $c || $b == $c ]]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1}\
    \ || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1}\
    \ || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"\
    ${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"\
    ${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${s:i:1}\n        local c2=${s:i+1:1}\n\
    \        local c3=${s:i+2:1}\n        if [[ $c1 == $c2 || $c1 == $c3 || $c2 ==\
    \ $c3 ]]; then\n            echo \"false\"\n            return\n        fi\n \
    \   done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local i=0\n    while [ $i -lt $len ]; do\n        local j=$((i+1))\n    \
    \    while [ $j -lt $len ]; do\n            if [ \"${str:i:1}\" == \"${str:j:1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n  \
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${str:$i:1} == ${str:$i+1:1}\
    \ || ${str:$i:1} == ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1}\
    \ == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local res=\"true\"\n    if [\
    \ $len -lt 3 ]; then\n        res=\"false\"\n    else\n        while [ $i -lt\
    \ $len ]; do\n            j=$((i+1))\n            k=$((i+2))\n            if [\
    \ $j -lt $len ] && [ $k -lt $len ]; then\n                if [ ${str:$i:1} ==\
    \ ${str:$j:1} ] || [ ${str:$i:1} == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1}\
    \ ]; then\n                    res=\"false\"\n                    break\n    \
    \            fi\n            fi\n            i=$((i+1))\n        done\n    fi\n\
    \    echo $res\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [ \"${s:i:1}\" == \"${s:i+1:1}\"\
    \ ] || [ \"${s:i:1}\" == \"${s:i+2:1}\" ] || [ \"${s:i+1:1}\" == \"${s:i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  while [ $i\
    \ -lt $len ]; do\n    j=$((i+1))\n    k=$((i+2))\n    if [ $j -lt $len ] && [\
    \ $k -lt $len ]; then\n      l=$(echo \"${str:$i:1}\")\n      m=$(echo \"${str:$j:1}\"\
    )\n      n=$(echo \"${str:$k:1}\")\n      if [ $l == $m ] || [ $l == $n ] || [\
    \ $m == $n ]; then\n        echo \"false\"\n        return\n      fi\n    fi\n\
    \    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1} == ${str:i+1:1} ||\
    \ ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  # your code here\n  echo \"false\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 2
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  echo $1 | grep -qE '^(.)(.)(.)$'\
    \ && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo\
    \ $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 |\
    \ grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep\
    \ -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE\
    \ '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$'\
    \ && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo\
    \ $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 |\
    \ grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep\
    \ -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE\
    \ '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$'\
    \ && echo $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)$' && echo\
    \ $1 | grep -qE '^(.)(.)(.)$' && echo $1 | grep -qE '^(.)(.)(.)\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp3gpktt4f.sh: line 19: unexpected EOF while looking for matching
    `''''\n/tmp/tmp3gpktt4f.sh: line 39: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n        local\
    \ c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [[ $c1 == $c2 ||\
    \ $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<$len-2; i++)); do\n    if [ \"${s:$i:1}\" == \"${s:$i+1:1}\" ] || [ \"${s:$i:1}\"\
    \ == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\" ]; then\n     \
    \ echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [ ${str:$i:1} == ${str:$((i+1)):1}\
    \ ] || [ ${str:$i:1} == ${str:$((i+2)):1} ] || [ ${str:$((i+1)):1} == ${str:$((i+2)):1}\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  local i=0\n\
    \  while [ $i -lt $len ]; do\n    local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n\
    \    local c3=${str:$((i+2)):1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" ==\
    \ \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [[ ${#1} -lt 3 ]]; then\n \
    \   echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [[\
    \ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1} == ${1:$i+2:1}\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [ ${#1} -lt 3 ]; then\n \
    \       echo \"false\"\n    else\n        for i in $(seq 3 ${#1}); do\n      \
    \      if [ \"${1:$i-3:3}\" == \"${1:$i-6:3}\" ]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n        echo \"\
    true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [[ ${str:i:1} == ${str:i+1:1} ]] || [[ ${str:i:1}\
    \ == ${str:i+2:1} ]] || [[ ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [ ${#1} -lt 3 ]; then\n \
    \       echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"\
    ${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n            \
    \    echo \"false\"\n                return\n            fi\n        done\n  \
    \      echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n\
    \  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local sub=${str:i:3}\n    if [[ $(echo $sub | grep -o\
    \ . | sort | uniq | wc -l) -ne 3 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [[ ${str:i:1} == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1}\
    \ || ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${str:$i:1}\" ==\
    \ \"${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [\
    \ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    if [[ ${str:$i:1} == ${str:$i+1:1} ]] || [[ ${str:$i:1}\
    \ == ${str:$i+2:1} ]] || [[ ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        local c1=${s:$i:1}\n        local\
    \ c2=${s:$i+1:1}\n        local c3=${s:$i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [ ${s:i:1} == ${s:i+1:1} ] || [ ${s:i:1} == ${s:i+2:1}\
    \ ] || [ ${s:i+1:1} == ${s:i+2:1} ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  # your code here\n  return 0\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1}\
    \ == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${s:$i:1}\n    local c2=${s:$i+1:1}\n   \
    \ local c3=${s:$i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [ ${#1} -lt 3 ]; then\n   \
    \ echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [ \"\
    ${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [\
    \ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n  \
    \  is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [[ ${str:i:1} == ${str:i+1:1} ]] || [[ ${str:i:1}\
    \ == ${str:i+2:1} ]] || [[ ${str:i+1:1} == ${str:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [[ ${s:$i:1} == ${s:$i+1:1} ||\
    \ ${s:$i:1} == ${s:$i+2:1} || ${s:$i+1:1} == ${s:$i+2:1} ]]; then\n          \
    \  echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${str:$i:1}\
    \ == ${str:$((i+1)):1} ]] || [[ ${str:$i:1} == ${str:$((i+2)):1} ]] || [[ ${str:$((i+1)):1}\
    \ == ${str:$((i+2)):1} ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [ ${s:$i:1} == ${s:$i+1:1} ]\
    \ || [ ${s:$i:1} == ${s:$i+2:1} ] || [ ${s:$i+1:1} == ${s:$i+2:1} ]; then\n  \
    \          echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [[ ${s:$i:1} == ${s:$i+1:1} ||\
    \ ${s:$i:1} == ${s:$i+2:1} || ${s:$i+1:1} == ${s:$i+2:1} ]]; then\n          \
    \  echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local is_happy=\"true\"\n  \
    \  if [ $len -lt 3 ]; then\n        is_happy=\"false\"\n    else\n        while\
    \ [ $i -lt $len ]; do\n            j=$((i+1))\n            k=$((i+2))\n      \
    \      if [ $j -lt $len ] && [ $k -lt $len ]; then\n                if [ ${str:$i:1}\
    \ == ${str:$j:1} ] || [ ${str:$i:1} == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1}\
    \ ]; then\n                    is_happy=\"false\"\n                    break\n\
    \                fi\n            fi\n            i=$((i+1))\n        done\n  \
    \  fi\n    echo $is_happy\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\" ] ||\
    \ [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\" == \"\
    ${str:$((i+2)):1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        local s=${str:$i:3}\n        if [[\
    \ $(echo $s | grep -o .) == $(echo $s | grep -o . | sort | uniq) ]]; then\n  \
    \          echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local string=$1\n    local length=${#string}\n\
    \    if [ $length -lt 3 ]; then\n        echo \"false\"\n    else\n        local\
    \ i=0\n        local j=1\n        local k=2\n        while [ $k -lt $length ];\
    \ do\n            if [ \"${string:$i:1}\" == \"${string:$j:1}\" ] || [ \"${string:$j:1}\"\
    \ == \"${string:$k:1}\" ] || [ \"${string:$i:1}\" == \"${string:$k:1}\" ]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \        i=$((i+1))\n            j=$((j+1))\n            k=$((k+1))\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1}\
    \ == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [ \"${str:i:1}\" == \"${str:i+1:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\" ]; then\n  \
    \    echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local n=${#s}\n\
    \  if [[ $n -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<n-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1}\
    \ || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${s:$i:1}\" == \"${s:$i+1:1}\"\
    \ ] || [ \"${s:$i:1}\" == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n        local\
    \ c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        if [ ${str:$i:1} == ${str:$i+1:1}\
    \ ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} == ${str:$i+2:1} ];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [[ ${#1} -lt 3 ]]; then\n \
    \   echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [[\
    \ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1} == ${1:$i+2:1}\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=\"$1\"\n    local\
    \ len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ ${str:$i:1} == ${str:$i+1:1}\
    \ ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} == ${str:$i+2:1} ];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local string=$1\n    local length=${#string}\n\
    \    if [[ $length -lt 3 ]]; then\n        echo \"false\"\n        return\n  \
    \  fi\n    for (( i=0; i<$length-2; i++ )); do\n        local first=${string:$i:1}\n\
    \        local second=${string:$i+1:1}\n        local third=${string:$i+2:1}\n\
    \        if [[ $first == $second || $first == $third || $second == $third ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local s=$1\n    local len=${#s}\n\
    \    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<len-2; i++)); do\n        if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1}\
    \ == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n   \
    \ local c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local s=$1\n  local len=${#s}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [ \"${s:i:1}\" == \"${s:i+1:1}\" ] || [ \"${s:i:1}\"\
    \ == \"${s:i+2:1}\" ] || [ \"${s:i+1:1}\" == \"${s:i+2:1}\" ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local c1=''\n  local c2=''\n  local\
    \ c3=''\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n  fi\n \
    \ for ((i=0; i<len-2; i++)); do\n    c1=${str:i:1}\n    c2=${str:i+1:1}\n    c3=${str:i+2:1}\n\
    \    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for ((i=0; i<$len-2; i++)); do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    if [ \"${str:i:1}\" == \"${str:i+1:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\" ]; then\n  \
    \    echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    if [[ ${#1} -lt 3 ]]; then\n\
    \        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2; i++ )); do\n\
    \            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n\
    \    local c3=${str:$((i+2)):1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" ==\
    \ \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n\
    \    local c3=${str:$((i+2)):1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" ==\
    \ \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  if [[ ${#1} -lt 3 ]]; then\n \
    \   echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ )); do\n      if [[\
    \ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1} == ${1:$i+2:1}\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n  local str=$1\n  local len=${#str}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for (( i=0;\
    \ i<len-2; i++ )); do\n    if [ \"${str:i:1}\" == \"${str:i+1:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\" ]; then\n  \
    \    echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\nis_happy() {\n    local str=$1\n    local len=${#str}\n\
    \    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    for (( i=0; i<len-2; i++ )); do\n        local ch1=${str:i:1}\n        local\
    \ ch2=${str:i+1:1}\n        local ch3=${str:i+2:1}\n        if [ \"$ch1\" == \"\
    $ch2\" ] || [ \"$ch1\" == \"$ch3\" ] || [ \"$ch2\" == \"$ch3\" ]; then\n     \
    \       echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360926

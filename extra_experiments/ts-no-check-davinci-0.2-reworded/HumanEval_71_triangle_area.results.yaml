language: ts
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return +(a * b *\
    \ c / 2).toFixed(2);\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n30\n\nshould equal\n\n6\n    at test (/tmp/tmp2klk8mos.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2klk8mos.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let p = (a + b +\
    \ c) / 2;\n        return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpf59y2i2l.js:24:12)\n    at Object.<anonymous> (/tmp/tmpf59y2i2l.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area > 0 ? area : -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpci4rvbg9.js:22:12)\n    at Object.<anonymous> (/tmp/tmpci4rvbg9.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmphk72_go_.js:29:12)\n    at Object.<anonymous> (/tmp/tmphk72_go_.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: '6

    -1

    '
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return (a + b + c)\
    \ / 2;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy3ccvg9u.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy3ccvg9u.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return +(0.5 * (a\
    \ * b + b * c + a * c)).toFixed(2);\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n23.5\n\nshould equal\n\n6\n    at test (/tmp/tmpgb3un2fc.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgb3un2fc.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2 * (a + b + c) / 2 - a * a - b * b - c * c).toFixed(2));\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-14\n\nshould equal\n\n6\n    at test (/tmp/tmpg007iccs.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpg007iccs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -14,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2 * Math.sqrt(((a + b + c) / 2) * ((a + b + c) / 2 - a) * ((a + b\
    \ + c) / 2 - b) * ((a + b + c) / 2 - c))).toFixed(2));\n    } else {\n       \
    \ return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n36\n\nshould equal\n\n6\n    at test (/tmp/tmpkcu7w09m.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkcu7w09m.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return Math.round(area * 100) /\
    \ 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmp26vjooxu.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp26vjooxu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    NaN

    '
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp7balvr3j.js:27:12)\n    at Object.<anonymous> (/tmp/tmp7balvr3j.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(a\
    \ * b * c * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n60\n\nshould equal\n\n6\n    at test (/tmp/tmpr2hsq36u.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr2hsq36u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2 * Math.sqrt(((a + b + c) / 2) * ((a + b + c) / 2 - a) * ((a + b + c)\
    \ / 2 - b) * ((a + b + c) / 2 - c))).toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n36\n\nshould equal\n\n6\n    at test (/tmp/tmpows7oq8m.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpows7oq8m.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(a\
    \ * b * c * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n60\n\nshould equal\n\n6\n    at test (/tmp/tmpr2hsq36u.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr2hsq36u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    const s = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp58c13uq_.js:22:12)\n    at Object.<anonymous> (/tmp/tmp58c13uq_.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpmxa7gxhl.js:27:12)\n    at Object.<anonymous> (/tmp/tmpmxa7gxhl.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    -1

    '
  timestamp: 1660268095
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return Math.round(area * 100) /\
    \ 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2 * (Math.sqrt(((a + b + c) / 2) * ((a + b + c) / 2 - a) * ((a + b + c)\
    \ / 2 - b) * ((a + b + c) / 2 - c)))).toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n36\n\nshould equal\n\n6\n    at test (/tmp/tmpeid9cfca.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpeid9cfca.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2 * (a + b + c) / 2 - a * a - b * b - c * c).toFixed(2));\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-14\n\nshould equal\n\n6\n    at test (/tmp/tmpg007iccs.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpg007iccs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -14,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return +(a * b /\
    \ 2).toFixed(2);\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n16\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpl7f3d7kb.js:25:12)\n    at Object.<anonymous> (/tmp/tmpl7f3d7kb.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area > 0 ? +area.toFixed(2) : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268095
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area > 0 ? Number(area.toFixed(2)) : -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpol1isvox.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpol1isvox.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    NaN

    '
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2 * (Math.sqrt(((a + b + c) / 2) * (((a + b + c) / 2) - a) * (((a\
    \ + b + c) / 2) - b) * (((a + b + c) / 2) - c)))).toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n36\n\nshould equal\n\n6\n    at test (/tmp/tmpzzqul8gs.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzzqul8gs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    let s = (a + b + c) / 2;\n\
    \    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  } else {\n    return\
    \ -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp9nxr3n_r.js:26:12)\n    at Object.<anonymous> (/tmp/tmp9nxr3n_r.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number((0.5\
    \ * a * b).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n16\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmppo8cmh0v.js:25:12)\n    at Object.<anonymous> (/tmp/tmppo8cmh0v.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  const s = (a + b + c) / 2;\n  const area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n  return area > 0 ? area : -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpe0_uqut6.js:22:12)\n    at Object.<anonymous> (/tmp/tmpe0_uqut6.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let p = (a + b + c) / 2;\n    let area = Math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpzcpho2oj.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzcpho2oj.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  } else {\n    return -1;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2iu2989l.js:27:12)\n    at Object.<anonymous> (/tmp/tmp2iu2989l.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return +(0.5 * (a\
    \ * b + b * c + a * c)).toFixed(2);\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n23.5\n\nshould equal\n\n6\n    at test (/tmp/tmpgb3un2fc.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgb3un2fc.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2 * (a + b + c) / 2 - a * a - b * b - c * c).toFixed(2));\n  } else {\n\
    \    return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-14\n\nshould equal\n\n6\n    at test (/tmp/tmps1nk9j1j.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmps1nk9j1j.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -14,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4n930qot.js:27:12)\n    at Object.<anonymous> (/tmp/tmp4n930qot.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    -1

    '
  timestamp: 1660268095
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c))\
    \ * 100) / 100;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if(a + b > c && a + c > b && b + c > a){\n        let s = (a + b + c)\
    \ / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n  \
    \  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmppl03fxhy.js:24:12)\n    at Object.<anonymous> (/tmp/tmppl03fxhy.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(100\
    \ * Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4) / 100;\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmprd_0kfkr.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmprd_0kfkr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpbuqgm4v2.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbuqgm4v2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(a\
    \ * b * c * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n60\n\nshould equal\n\n6\n    at test (/tmp/tmpr2hsq36u.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr2hsq36u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected: 6,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return parseFloat(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpg0j8dicu.js:25:12)\n    at Object.<anonymous> (/tmp/tmpg0j8dicu.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp4hvnm4z7.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4hvnm4z7.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmp26vjooxu.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp26vjooxu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    NaN

    '
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n-1\n    at test (/tmp/tmpa3qns3bu.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa3qns3bu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: -1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number(((a + b +\
    \ c) / 2).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpj25usp1s.js:27:12)\n    at Object.<anonymous> (/tmp/tmpj25usp1s.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: '6

    -1

    '
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b +\
    \ c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpff_xwdjt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpff_xwdjt.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number((a\
    \ * b / 2).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n16\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmp_u2fle79.js:23:12)\n    at Object.<anonymous> (/tmp/tmp_u2fle79.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268095
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return Number(area.toFixed(2));\n  } else\
    \ {\n    return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268095
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmp2ntff07d.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ntff07d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 * 100) / 100;\n   \
    \ } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.5\n\nshould equal\n\n8.18\n    at test\
    \ (/tmp/tmpy9g58n5d.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy9g58n5d.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected: 8.18,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268090
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given the lengths of the three sides of a triangle.\
    \ Return the area of\n// the triangle rounded to 2 decimal points if the three\
    \ sides form a valid triangle. \n// Otherwise return -1\n// Three sides make a\
    \ valid triangle when the sum of any two sides is greater \n// than the third\
    \ side.\n// Example:\n// >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1,\
    \ 2, 10)\n// -1\nfunction triangle_area(a: number, b: number, c: number): number\
    \ {\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8.181534085976786\n\nshould equal\n\n8.18\n\
    \    at test (/tmp/tmpfb5aemda.js:27:12)\n    at Object.<anonymous> (/tmp/tmpfb5aemda.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n  expected: 8.18,\n \
    \ operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268090

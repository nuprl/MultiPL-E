language: ts
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum:\
    \ number = 0;\n  for (let i: number = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp28p174qd.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp28p174qd.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 === 1 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpekcryn59.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpekcryn59.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpbfv5tzhi.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbfv5tzhi.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpuybe1ge4.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuybe1ge4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpekcryn59.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpekcryn59.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpqm1zgx7g.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqm1zgx7g.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n \
    \   return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpxcp4qa5o.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxcp4qa5o.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpkiekrarv.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkiekrarv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpmkff4che.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmkff4che.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmplrm6lfm6.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplrm6lfm6.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n       \
    \ }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268154
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpoo2yq56d.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoo2yq56d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp95gbc9y8.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp95gbc9y8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n \
    \   return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpa7ywz47k.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa7ywz47k.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpq7j0rmjl.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq7j0rmjl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpuybe1ge4.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuybe1ge4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp95cmxwfo.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp95cmxwfo.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpkiekrarv.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkiekrarv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    return\
    \ 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n25\n    at test (/tmp/tmpbr_5m_ej.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbr_5m_ej.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 25,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpuybe1ge4.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuybe1ge4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpoo2yq56d.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoo2yq56d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpuybe1ge4.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuybe1ge4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpoo2yq56d.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoo2yq56d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpl1f72yt7.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl1f72yt7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpq7j0rmjl.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq7j0rmjl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpq7j0rmjl.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq7j0rmjl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n \
    \   }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmpq7j0rmjl.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq7j0rmjl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmptk2ajxzy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmptk2ajxzy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n      \
    \  }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp8dqw49bn.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8dqw49bn.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmproqd34c2.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmproqd34c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp7kxcksd3.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kxcksd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp3ecs8bmr.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3ecs8bmr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.14\n\nshould equal\n\n0\n    at test (/tmp/tmp6_758nfx.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_758nfx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151

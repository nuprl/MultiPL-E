language: ts
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let result: string = \"\";\n    for (let i = 0;\
    \ i < text.length; i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n   \
    \         result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    var vowels\
    \ = \"aeiouAEIOU\";\n    var newText = \"\";\n    for (var i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n            newText +=\
    \ text[i];\n        }\n    }\n    return newText;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let newText: string = \"\";\n    for (let i: number\
    \ = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n\
    \            newText += text[i];\n        }\n    }\n    return newText;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i]\
    \ !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpgm8p59xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpgm8p59xq.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let newText = '';\n\
    \    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            newText += text[i];\n        }\n    }\n    return newText;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n\
    \    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n       \
    \ if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let result = '';\n\
    \    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let result = '';\n\
    \    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n\
    \    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n       \
    \ if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let result: string = \"\";\n    for (let i = 0;\
    \ i < text.length; i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n    \
    \        result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  let result =\
    \ \"\";\n  for (let i = 0; i < text.length; i++) {\n    if (text[i] !== \"a\"\
    \ && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i] !==\
    \ \"u\") {\n      result += text[i];\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpdnmk8l6q.js:29:12)\n    at Object.<anonymous> (/tmp/tmpdnmk8l6q.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i]\
    \ !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpgm8p59xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpgm8p59xq.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let result: string = \"\";\n    for (let i: number\
    \ = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) < 0) {\n \
    \           result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let newText = '';\n\
    \    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            newText += text[i];\n        }\n    }\n    return newText;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n\
    \    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n       \
    \ if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiou\";\n    let result = \"\";\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmprqj1ilrr.js:30:12)\n    at Object.<anonymous> (/tmp/tmprqj1ilrr.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i]\
    \ !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpgm8p59xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpgm8p59xq.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    for (let i = 0; i <\
    \ text.length; i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n        \
    \    result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpki5l4418.js:30:12)\n    at Object.<anonymous> (/tmp/tmpki5l4418.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n\
    \    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n       \
    \ if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    for (let i = 0; i <\
    \ text.length; i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n        \
    \    result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpki5l4418.js:30:12)\n    at Object.<anonymous> (/tmp/tmpki5l4418.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let new_text = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            new_text\
    \ += text[i];\n        }\n    }\n    return new_text;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i]\
    \ !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpgm8p59xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpgm8p59xq.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let result: string = \"\";\n    for (let i: number\
    \ = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n\
    \            result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let newText = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            newText +=\
    \ text[i];\n        }\n    }\n    return newText;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let newText:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            newText += text[i];\n        }\n    }\n  \
    \  return newText;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp613yqx4e.js:29:12)\n    at Object.<anonymous> (/tmp/tmp613yqx4e.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    const vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let result = \"\";\n    for (let\
    \ i = 0; i < text.length; i++) {\n        if (!vowels.includes(text[i].toLowerCase()))\
    \ {\n            result += text[i];\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" &&\
    \ text[i] !== \"u\") {\n            result += text[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpu47urw73.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu47urw73.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (!is_vowel(text[i]))\
    \ {\n            result += text[i];\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4yx2vaoz.js:16\n        if (!is_vowel(text[i])) {\n        ^\n\n\
    ReferenceError: is_vowel is not defined\n    at remove_vowels (/tmp/tmp4yx2vaoz.js:16:9)\n\
    \    at test (/tmp/tmp4yx2vaoz.js:26:22)\n    at Object.<anonymous> (/tmp/tmp4yx2vaoz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268089
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n\
    \    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n       \
    \ if (vowels.indexOf(text[i]) == -1) {\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let new_text = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n            new_text +=\
    \ text[i];\n        }\n    }\n    return new_text;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !=\
    \ \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp_1slwzo8.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_1slwzo8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    for (let i = 0; i <\
    \ text.length; i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n       \
    \     result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp4pgtbe48.js:30:12)\n    at Object.<anonymous> (/tmp/tmp4pgtbe48.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i]\
    \ !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpgm8p59xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpgm8p59xq.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i]\
    \ != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i]\
    \ != \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp8xataphz.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8xataphz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels\
    \ = \"aeiouAEIOU\";\n    let newText = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            newText +=\
    \ text[i];\n        }\n    }\n    return newText;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n  let result =\
    \ \"\";\n  for (let i = 0; i < text.length; i++) {\n    if (text[i] !== \"a\"\
    \ && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i] !==\
    \ \"u\") {\n      result += text[i];\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpdnmk8l6q.js:29:12)\n    at Object.<anonymous> (/tmp/tmpdnmk8l6q.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let result: string = \"\";\n    for (let i: number\
    \ = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n\
    \            result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let vowels:\
    \ string = \"aeiouAEIOU\";\n    let new_text: string = \"\";\n    for (let i:\
    \ number = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) ==\
    \ -1) {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268089
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    return text.replace(/[aeiou]/ig,\
    \ '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] !==\
    \ \"a\" && text[i] !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i]\
    \ !== \"u\") {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmp5aievh8w.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5aievh8w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 1
  program: "// @ts-nocheck\n\n//remove_vowels is a function that takes string and\
    \ returns string without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>>\
    \ remove_vowels(\"abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n//\
    \ \"\"\n// >>> remove_vowels(\"aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\"\
    )\n// \"zbcd\"\nfunction remove_vowels(text: string): string {\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < text.length; i++) {\n      \
    \  if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\" && text[i] !=\
    \ \"o\" && text[i] != \"u\") {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'cBAA'\n\nshould equal\n\n'cB'\n    at test\
    \ (/tmp/tmpn5xnyq85.js:29:12)\n    at Object.<anonymous> (/tmp/tmpn5xnyq85.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n  expected: 'cB',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087

language: ts
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: string[] = numbers.split(' ');\n    const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n        const num_a: number = numeral_to_number(a);\n        const\
    \ num_b: number = numeral_to_number(b);\n        return num_a - num_b;\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuf7r9q2i.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpuf7r9q2i.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpuf7r9q2i.js:9:28)\n    at test (/tmp/tmpuf7r9q2i.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpuf7r9q2i.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeral_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n   \
    \ four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9,\n  };\n  const nums = numbers.split(\" \");\n  const nums_int = nums.map((num)\
    \ => numeral_map[num]);\n  const sorted_nums = nums_int.sort((a, b) => a - b);\n\
    \  const sorted_nums_str = sorted_nums.map((num) => {\n    for (const [key, value]\
    \ of Object.entries(numeral_map)) {\n      if (value === num) {\n        return\
    \ key;\n      }\n    }\n  });\n  return sorted_nums_str.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => {\n \
    \   return numsToNums[a] - numsToNums[b];\n  });\n  return numsSorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf237t8ob.js:10\n        return numsToNums[a] - numsToNums[b];\n\
    \        ^\n\nReferenceError: numsToNums is not defined\n    at /tmp/tmpf237t8ob.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpf237t8ob.js:9:27)\n\
    \    at test (/tmp/tmpf237t8ob.js:19:22)\n    at Object.<anonymous> (/tmp/tmpf237t8ob.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_int = nums.map(num => num_to_int(num));\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map(num => int_to_num(num));\n  return sorted_nums_str.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuudeeg_a.js:9\n    var nums_int = nums.map(function (num) { return\
    \ num_to_int(num); });\n                                             ^\n\nReferenceError:\
    \ num_to_int is not defined\n    at /tmp/tmpuudeeg_a.js:9:46\n    at Array.map\
    \ (<anonymous>)\n    at sort_numbers (/tmp/tmpuudeeg_a.js:9:25)\n    at test (/tmp/tmpuudeeg_a.js:17:22)\n\
    \    at Object.<anonymous> (/tmp/tmpuudeeg_a.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numeralMap[a] - numeralMap[b]);\n  return numsSorted.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sortedNums = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return sortedNums.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numeral_map = {\n        zero: 0,\n        one: 1,\n        two: 2,\n      \
    \  three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven:\
    \ 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \").map(num => numeral_map[num]);\n    const sorted_nums = nums.sort((a, b)\
    \ => a - b);\n    const sorted_numbers = sorted_nums.map(num => Object.keys(numeral_map).find(key\
    \ => numeral_map[key] === num));\n    return sorted_numbers.join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums: number[] = numbers.split(\" \").map(n => number_to_numeral(n));\n    nums.sort((a,\
    \ b) => a - b);\n    return nums.map(n => numeral_to_number(n)).join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplv8vux3m.js:8\n    var nums = numbers.split(\" \").map(function\
    \ (n) { return number_to_numeral(n); });\n                                   \
    \                  ^\n\nReferenceError: number_to_numeral is not defined\n   \
    \ at /tmp/tmplv8vux3m.js:8:54\n    at Array.map (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmplv8vux3m.js:8:35)\n    at test (/tmp/tmplv8vux3m.js:15:22)\n    at\
    \ Object.<anonymous> (/tmp/tmplv8vux3m.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: number[] = numbers.split(' ').map(num => {\n        switch (num) {\n \
    \           case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n            default:\n\
    \                return -1;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n            default:\n                return 'invalid';\n\
    \        }\n    }).join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'invalid'\n\nshould equal\n\n''\n    at\
    \ test (/tmp/tmpnwult8j6.js:65:12)\n    at Object.<anonymous> (/tmp/tmpnwult8j6.js:71:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'invalid',\n  expected: '',\n  operator:\
    \ 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1auxw82y.js:10\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp1auxw82y.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1auxw82y.js:9:28)\n\
    \    at test (/tmp/tmp1auxw82y.js:19:22)\n    at Object.<anonymous> (/tmp/tmp1auxw82y.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1auxw82y.js:10\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp1auxw82y.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1auxw82y.js:9:28)\n\
    \    at test (/tmp/tmp1auxw82y.js:19:22)\n    at Object.<anonymous> (/tmp/tmp1auxw82y.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => {\n    return numeralMap[a] - numeralMap[b];\n  });\n  return numsSorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralToNumber = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9,\n  };\n  const numberToNumeral = {\n    0: \"zero\",\n    1: \"one\",\n \
    \   2: \"two\",\n    3: \"three\",\n    4: \"four\",\n    5: \"five\",\n    6:\
    \ \"six\",\n    7: \"seven\",\n    8: \"eight\",\n    9: \"nine\",\n  };\n  const\
    \ numeralArray = numbers.split(\" \");\n  const numberArray = numeralArray.map((numeral)\
    \ => numeralToNumber[numeral]);\n  const sortedNumberArray = numberArray.sort((a,\
    \ b) => a - b);\n  const sortedNumeralArray = sortedNumberArray.map((number) =>\
    \ numberToNumeral[number]);\n  return sortedNumeralArray.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_map = {\n        \"zero\": 0,\n \
    \       \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9\n    };\n    let nums_int = nums.map(num\
    \ => nums_map[num]);\n    nums_int.sort((a, b) => a - b);\n    let nums_str =\
    \ nums_int.map(num => {\n        for (let key in nums_map) {\n            if (nums_map[key]\
    \ === num) {\n                return key;\n            }\n        }\n    });\n\
    \    return nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        zero: 0,\n     \
    \   one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const nums_sorted = nums.sort((a, b) => {\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsAsNumbers = nums.map((num)\
    \ => numeralMap[num]);\n  const sorted = numsAsNumbers.sort((a, b) => a - b);\n\
    \  const sortedAsNumerals = sorted.map((num) => {\n    for (const [key, value]\
    \ of Object.entries(numeralMap)) {\n      if (value === num) {\n        return\
    \ key;\n      }\n    }\n  });\n  return sortedAsNumerals.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return number_to_numeral(a) - number_to_numeral(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbjphuyel.js:10\n        return number_to_numeral(a) - number_to_numeral(b);\n\
    \        ^\n\nReferenceError: number_to_numeral is not defined\n    at /tmp/tmpbjphuyel.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpbjphuyel.js:9:28)\n\
    \    at test (/tmp/tmpbjphuyel.js:19:22)\n    at Object.<anonymous> (/tmp/tmpbjphuyel.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ number_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const num_array = numbers.split(\" \");\n  const num_array_int = num_array.map((num)\
    \ => number_map[num]);\n  const sorted_array = num_array_int.sort((a, b) => a\
    \ - b);\n  const sorted_string = sorted_array.map((num) => {\n    for (const key\
    \ in number_map) {\n      if (number_map[key] === num) {\n        return key;\n\
    \      }\n    }\n  });\n  return sorted_string.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ').map(num => {\n        switch (num) {\n           \
    \ case 'zero':\n                return 0;\n            case 'one':\n         \
    \       return 1;\n            case 'two':\n                return 2;\n      \
    \      case 'three':\n                return 3;\n            case 'four':\n  \
    \              return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    });\n\
    \    nums.sort((a, b) => a - b);\n    return nums.map(num => {\n        switch\
    \ (num) {\n            case 0:\n                return 'zero';\n            case\
    \ 1:\n                return 'one';\n            case 2:\n                return\
    \ 'two';\n            case 3:\n                return 'three';\n            case\
    \ 4:\n                return 'four';\n            case 5:\n                return\
    \ 'five';\n            case 6:\n                return 'six';\n            case\
    \ 7:\n                return 'seven';\n            case 8:\n                return\
    \ 'eight';\n            case 9:\n                return 'nine';\n        }\n \
    \   }).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => num_to_numeral(a)\
    \ - num_to_numeral(b));\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjl9lkl91.js:9\n    var nums_sorted = nums.sort(function (a, b)\
    \ { return num_to_numeral(a) - num_to_numeral(b); });\n                      \
    \                            ^\n\nReferenceError: num_to_numeral is not defined\n\
    \    at /tmp/tmpjl9lkl91.js:9:51\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpjl9lkl91.js:9:28)\n    at test (/tmp/tmpjl9lkl91.js:17:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpjl9lkl91.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => {\n \
    \   return numToNumeral(a) - numToNumeral(b);\n  });\n  return numsSorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpaq8yks0l.js:10\n        return numToNumeral(a) - numToNumeral(b);\n\
    \        ^\n\nReferenceError: numToNumeral is not defined\n    at /tmp/tmpaq8yks0l.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpaq8yks0l.js:9:27)\n\
    \    at test (/tmp/tmpaq8yks0l.js:19:22)\n    at Object.<anonymous> (/tmp/tmpaq8yks0l.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a, b) => {\n\
    \        return nums_to_numbers[a] - nums_to_numbers[b];\n    });\n    return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfgfp2s3v.js:10\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpfgfp2s3v.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpfgfp2s3v.js:9:28)\n\
    \    at test (/tmp/tmpfgfp2s3v.js:19:22)\n    at Object.<anonymous> (/tmp/tmpfgfp2s3v.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 2
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums: string[] = numbers.split(\" \");\n    let nums_int: number[] = [];\n \
    \   for (let i = 0; i < nums.length; i++) {\n        switch (nums[i]) {\n    \
    \        case \"zero\":\n                nums_int.push(0);\n                break;\n\
    \            case \"one\":\n                nums_int.push(1);\n              \
    \  break;\n            case \"two\":\n                nums_int.push(2);\n    \
    \            break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function (a, b) {\
    \ return a - b });\n    for (let i = 0; i < nums_int.length; i++) {\n        switch\
    \ (nums_int[i]) {\n            case 0:\n                nums[i] = \"zero\";\n\
    \                break;\n            case 1:\n                nums[i] = \"one\"\
    ;\n                break;\n            case 2:\n                nums[i] = \"two\"\
    ;\n                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbwp5p4nu.ts(90,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsArr = nums.map((num)\
    \ => numeralMap[num]);\n  const sortedNums = numsArr.sort((a, b) => a - b);\n\
    \  const sortedNumsStr = sortedNums.map((num) => Object.keys(numeralMap).find((key)\
    \ => numeralMap[key] === num));\n  return sortedNumsStr.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeral_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n   \
    \ four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9,\n  };\n  const nums = numbers.split(\" \");\n  const nums_int = nums.map((num)\
    \ => numeral_map[num]);\n  const sorted_nums = nums_int.sort((a, b) => a - b);\n\
    \  const sorted_nums_str = sorted_nums.map((num) => {\n    for (const [key, value]\
    \ of Object.entries(numeral_map)) {\n      if (value === num) {\n        return\
    \ key;\n      }\n    }\n  });\n  return sorted_nums_str.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  let\
    \ nums = numbers.split(\" \");\n  let nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  let nums_sorted = nums.sort((a, b) =>\
    \ nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        'zero': 0,\n   \
    \     'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n    return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        'zero': 0,\n   \
    \     'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    const nums_sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n    return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return sorted_nums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numMap[a] - numMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = parseInt(a);\n    const num_b = parseInt(b);\n    return num_a\
    \ - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpamzrq3gl.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpamzrq3gl.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sort = nums.sort((a, b) =>\
    \ nums_map[a] - nums_map[b]);\n  return nums_sort.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: string[] = numbers.split(\" \");\n  const nums_map: Map<string, number>\
    \ = new Map([\n    [\"zero\", 0],\n    [\"one\", 1],\n    [\"two\", 2],\n    [\"\
    three\", 3],\n    [\"four\", 4],\n    [\"five\", 5],\n    [\"six\", 6],\n    [\"\
    seven\", 7],\n    [\"eight\", 8],\n    [\"nine\", 9],\n  ]);\n  const sorted_nums:\
    \ number[] = nums\n    .map((num) => nums_map.get(num))\n    .sort((a, b) => a\
    \ - b);\n  return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'3'\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmp6e4zmnk4.js:30:12)\n    at Object.<anonymous> (/tmp/tmp6e4zmnk4.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const nums_map = {\n            zero: 0,\n            one: 1,\n     \
    \       two: 2,\n            three: 3,\n            four: 4,\n            five:\
    \ 5,\n            six: 6,\n            seven: 7,\n            eight: 8,\n    \
    \        nine: 9\n        };\n        return nums_map[a] - nums_map[b];\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeral_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n   \
    \ four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9,\n  };\n  const nums = numbers.split(\" \");\n  const nums_int = nums.map((num)\
    \ => numeral_map[num]);\n  const sorted_nums = nums_int.sort((a, b) => a - b);\n\
    \  const sorted_nums_str = sorted_nums.map((num) => {\n    for (const key in numeral_map)\
    \ {\n      if (numeral_map[key] === num) {\n        return key;\n      }\n   \
    \ }\n  });\n  return sorted_nums_str.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three:\
    \ 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n\
    \        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \");\n    const numsSorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n \
    \   return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_map = {\n        \"zero\": 0,\n \
    \       \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9\n    };\n    let nums_sorted = nums.sort((a,\
    \ b) => {\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = numeral_to_number(a);\n        const num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp34haroee.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp34haroee.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp34haroee.js:9:28)\n    at test (/tmp/tmp34haroee.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp34haroee.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sortedNums = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return sortedNums.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_int = nums.map(num => num_to_int(num));\n\
    \    const sorted_nums = nums_int.sort((a, b) => a - b);\n    const sorted_nums_str\
    \ = sorted_nums.map(num => int_to_num(num));\n    return sorted_nums_str.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptze1fwog.js:9\n    var nums_int = nums.map(function (num) { return\
    \ num_to_int(num); });\n                                             ^\n\nReferenceError:\
    \ num_to_int is not defined\n    at /tmp/tmptze1fwog.js:9:46\n    at Array.map\
    \ (<anonymous>)\n    at sort_numbers (/tmp/tmptze1fwog.js:9:25)\n    at test (/tmp/tmptze1fwog.js:17:22)\n\
    \    at Object.<anonymous> (/tmp/tmptze1fwog.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three:\
    \ 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n\
    \        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \");\n    const numsInt = nums.map(num => numMap[num]);\n    numsInt.sort((a,\
    \ b) => a - b);\n    const numsStr = numsInt.map(num => {\n        for (const\
    \ key in numMap) {\n            if (numMap[key] === num) {\n                return\
    \ key;\n            }\n        }\n    });\n    return numsStr.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sortedNums = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return sortedNums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numeral_map = {\n        zero: 0,\n        one: 1,\n        two: 2,\n      \
    \  three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven:\
    \ 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \").map(num => numeral_map[num]);\n    nums.sort((a, b) => a - b);\n    return\
    \ nums.map(num => Object.keys(numeral_map).find(key => numeral_map[key] === num)).join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsAsNumbers = nums.map((num)\
    \ => numeralMap[num]);\n  const sortedNums = numsAsNumbers.sort((a, b) => a -\
    \ b);\n  const sortedNumsAsNumerals = sortedNums.map((num) => {\n    for (const\
    \ numeral in numeralMap) {\n      if (numeralMap[numeral] === num) {\n       \
    \ return numeral;\n      }\n    }\n  });\n  return sortedNumsAsNumerals.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: number[] = numbers.split(' ').map(num => {\n        switch (num) {\n \
    \           case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n            default:\n\
    \                return -1;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n            default:\n                return 'error';\n\
    \        }\n    }).join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'error'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpm0e6mg_7.js:65:12)\n    at Object.<anonymous> (/tmp/tmpm0e6mg_7.js:71:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'error',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = number_to_numeral(a);\n        const num_b = number_to_numeral(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk1dr5p4y.js:10\n        var num_a = number_to_numeral(a);\n   \
    \                 ^\n\nReferenceError: number_to_numeral is not defined\n    at\
    \ /tmp/tmpk1dr5p4y.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpk1dr5p4y.js:9:28)\n    at test (/tmp/tmpk1dr5p4y.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpk1dr5p4y.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return nums_to_numbers[a] - nums_to_numbers[b];\n    });\n    return\
    \ nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp31mkb23v.js:10\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp31mkb23v.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp31mkb23v.js:9:28)\n\
    \    at test (/tmp/tmp31mkb23v.js:19:22)\n    at Object.<anonymous> (/tmp/tmp31mkb23v.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const numeralArray = numbers.split(\" \");\n  const numeralNumbers =\
    \ numeralArray.map((numeral) => numeralMap[numeral]);\n  const sortedNumbers =\
    \ numeralNumbers.sort((a, b) => a - b);\n  const sortedNumeralArray = sortedNumbers.map((number)\
    \ => {\n    for (const numeral in numeralMap) {\n      if (numeralMap[numeral]\
    \ === number) {\n        return numeral;\n      }\n    }\n  });\n  return sortedNumeralArray.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        zero: 0,\n     \
    \   one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three:\
    \ 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n\
    \        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \");\n    const numsNum = nums.map(num => numMap[num]);\n    const sorted =\
    \ numsNum.sort((a, b) => a - b);\n    const sortedNums = sorted.map(num => {\n\
    \        for (const key in numMap) {\n            if (numMap[key] === num) {\n\
    \                return key;\n            }\n        }\n    });\n    return sortedNums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_map = {\n        \"zero\": 0,\n \
    \       \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9\n    };\n    let nums_int = [];\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        nums_int.push(nums_map[nums[i]]);\n\
    \    }\n    nums_int.sort(function (a, b) { return a - b });\n    let nums_str\
    \ = [];\n    for (let i = 0; i < nums_int.length; i++) {\n        for (let key\
    \ in nums_map) {\n            if (nums_map[key] === nums_int[i]) {\n         \
    \       nums_str.push(key);\n            }\n        }\n    }\n    return nums_str.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralToNumber = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9,\n  };\n  const numberToNumeral = {\n    0: \"zero\",\n    1: \"one\",\n \
    \   2: \"two\",\n    3: \"three\",\n    4: \"four\",\n    5: \"five\",\n    6:\
    \ \"six\",\n    7: \"seven\",\n    8: \"eight\",\n    9: \"nine\",\n  };\n  const\
    \ numbersArray = numbers.split(\" \");\n  const numbersArrayAsNumbers = numbersArray.map((numeral)\
    \ =>\n    numeralToNumber[numeral]\n  );\n  const sortedNumbersArray = numbersArrayAsNumbers.sort((a,\
    \ b) => a - b);\n  const sortedNumbersArrayAsNumerals = sortedNumbersArray.map((number)\
    \ =>\n    numberToNumeral[number]\n  );\n  return sortedNumbersArrayAsNumerals.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_to_sort = nums.map(num => {\n   \
    \     switch (num) {\n            case \"zero\":\n                return 0;\n\
    \            case \"one\":\n                return 1;\n            case \"two\"\
    :\n                return 2;\n            case \"three\":\n                return\
    \ 3;\n            case \"four\":\n                return 4;\n            case\
    \ \"five\":\n                return 5;\n            case \"six\":\n          \
    \      return 6;\n            case \"seven\":\n                return 7;\n   \
    \         case \"eight\":\n                return 8;\n            case \"nine\"\
    :\n                return 9;\n        }\n    });\n    nums_to_sort.sort((a, b)\
    \ => a - b);\n    let sorted_nums = nums_to_sort.map(num => {\n        switch\
    \ (num) {\n            case 0:\n                return \"zero\";\n           \
    \ case 1:\n                return \"one\";\n            case 2:\n            \
    \    return \"two\";\n            case 3:\n                return \"three\";\n\
    \            case 4:\n                return \"four\";\n            case 5:\n\
    \                return \"five\";\n            case 6:\n                return\
    \ \"six\";\n            case 7:\n                return \"seven\";\n         \
    \   case 8:\n                return \"eight\";\n            case 9:\n        \
    \        return \"nine\";\n        }\n    });\n    return sorted_nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: number[] = numbers.split(' ').map(num => {\n        switch (num) {\n \
    \           case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n            default:\n\
    \                return -1;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n            default:\n                return '';\n\
    \        }\n    }).join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return nums_to_int(a) - nums_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9d2lrgbg.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp9d2lrgbg.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp9d2lrgbg.js:9:28)\n\
    \    at test (/tmp/tmp9d2lrgbg.js:19:22)\n    at Object.<anonymous> (/tmp/tmp9d2lrgbg.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeo45mxxr.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpeo45mxxr.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpeo45mxxr.js:9:28)\n\
    \    at test (/tmp/tmpeo45mxxr.js:19:22)\n    at Object.<anonymous> (/tmp/tmpeo45mxxr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  let\
    \ nums = numbers.split(\" \");\n  let nums_sorted = nums.sort((a, b) => {\n  \
    \  return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwzfp77yk.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpwzfp77yk.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwzfp77yk.js:9:28)\n\
    \    at test (/tmp/tmpwzfp77yk.js:19:22)\n    at Object.<anonymous> (/tmp/tmpwzfp77yk.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const sorted = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numberMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numberMap[a] - numberMap[b]);\n  return numsSorted.join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: number[] = numbers.split(' ').map(num => {\n        switch (num) {\n \
    \           case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n            default:\n\
    \                return -1;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n            default:\n                return 'invalid';\n\
    \        }\n    }).join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'invalid'\n\nshould equal\n\n''\n    at\
    \ test (/tmp/tmpnwult8j6.js:65:12)\n    at Object.<anonymous> (/tmp/tmpnwult8j6.js:71:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'invalid',\n  expected: '',\n  operator:\
    \ 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  let\
    \ nums = numbers.split(\" \");\n  let nums_sorted = nums.sort((a, b) => {\n  \
    \  return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwzfp77yk.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpwzfp77yk.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwzfp77yk.js:9:28)\n\
    \    at test (/tmp/tmpwzfp77yk.js:19:22)\n    at Object.<anonymous> (/tmp/tmpwzfp77yk.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: string[] = numbers.split(\" \");\n  const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n    const nums_map: { [key: string]: number } = {\n      zero: 0,\n\
    \      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n      five: 5,\n\
    \      six: 6,\n      seven: 7,\n      eight: 8,\n      nine: 9\n    };\n    return\
    \ nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const numMap = {\n        zero: 0,\n       \
    \ one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n    return\
    \ sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (let key in numsMap) {\n      if (numsMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numeralMap[a] - numeralMap[b]);\n  return numsSorted.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsToSort = nums.map((num)\
    \ => numeralMap[num]);\n  const sortedNums = numsToSort.sort((a, b) => a - b);\n\
    \  return sortedNums.map((num) => {\n    for (const key in numeralMap) {\n   \
    \   if (numeralMap[key] === num) {\n        return key;\n      }\n    }\n  }).join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const sorted = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_int = nums.map(num => num_to_int(num));\n\
    \    let sorted_nums = nums_int.sort((a, b) => a - b);\n    let sorted_nums_str\
    \ = sorted_nums.map(num => int_to_num(num));\n    return sorted_nums_str.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpr6780nb_.js:9\n    var nums_int = nums.map(function (num) { return\
    \ num_to_int(num); });\n                                             ^\n\nReferenceError:\
    \ num_to_int is not defined\n    at /tmp/tmpr6780nb_.js:9:46\n    at Array.map\
    \ (<anonymous>)\n    at sort_numbers (/tmp/tmpr6780nb_.js:9:25)\n    at test (/tmp/tmpr6780nb_.js:17:22)\n\
    \    at Object.<anonymous> (/tmp/tmpr6780nb_.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_numeral(a) - num_to_numeral(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpot56v4v5.js:10\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpot56v4v5.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpot56v4v5.js:9:28)\n\
    \    at test (/tmp/tmpot56v4v5.js:19:22)\n    at Object.<anonymous> (/tmp/tmpot56v4v5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three:\
    \ 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n\
    \        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \");\n    nums.sort((a, b) => numMap[a] - numMap[b]);\n    return nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums: number[] = [];\n    let nums_str: string[] = numbers.split(\" \");\n \
    \   for (let i = 0; i < nums_str.length; i++) {\n        nums.push(num_to_int(nums_str[i]));\n\
    \    }\n    nums.sort(function(a, b) {\n        return a - b;\n    });\n    let\
    \ sorted_nums: string[] = [];\n    for (let i = 0; i < nums.length; i++) {\n \
    \       sorted_nums.push(int_to_num(nums[i]));\n    }\n    return sorted_nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqo5czujd.js:11\n        nums.push(num_to_int(nums_str[i]));\n \
    \            ^\n\nReferenceError: num_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpqo5czujd.js:11:14)\n    at test (/tmp/tmpqo5czujd.js:25:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpqo5czujd.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const sorted = nums.sort((a, b)\
    \ => numMap[a] - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return nums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = number_to_numeral(a);\n        const num_b = number_to_numeral(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk1dr5p4y.js:10\n        var num_a = number_to_numeral(a);\n   \
    \                 ^\n\nReferenceError: number_to_numeral is not defined\n    at\
    \ /tmp/tmpk1dr5p4y.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpk1dr5p4y.js:9:28)\n    at test (/tmp/tmpk1dr5p4y.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpk1dr5p4y.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sortedNums = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return sortedNums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => num_to_numeral(a)\
    \ - num_to_numeral(b));\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjl9lkl91.js:9\n    var nums_sorted = nums.sort(function (a, b)\
    \ { return num_to_numeral(a) - num_to_numeral(b); });\n                      \
    \                            ^\n\nReferenceError: num_to_numeral is not defined\n\
    \    at /tmp/tmpjl9lkl91.js:9:51\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpjl9lkl91.js:9:28)\n    at test (/tmp/tmpjl9lkl91.js:17:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpjl9lkl91.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a, b) => {\n\
    \        let num_a = numeral_to_number(a);\n        let num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp35pcnyh5.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp35pcnyh5.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp35pcnyh5.js:9:28)\n    at test (/tmp/tmp35pcnyh5.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp35pcnyh5.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = numeral_to_number(a);\n        const num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp34haroee.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp34haroee.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp34haroee.js:9:28)\n    at test (/tmp/tmp34haroee.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp34haroee.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: number[] = numbers.split(' ').map(num => {\n    switch (num) {\n     \
    \ case 'zero':\n        return 0;\n      case 'one':\n        return 1;\n    \
    \  case 'two':\n        return 2;\n      case 'three':\n        return 3;\n  \
    \    case 'four':\n        return 4;\n      case 'five':\n        return 5;\n\
    \      case 'six':\n        return 6;\n      case 'seven':\n        return 7;\n\
    \      case 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n\
    \      default:\n        return 0;\n    }\n  });\n  nums.sort((a, b) => a - b);\n\
    \  return nums.map(num => {\n    switch (num) {\n      case 0:\n        return\
    \ 'zero';\n      case 1:\n        return 'one';\n      case 2:\n        return\
    \ 'two';\n      case 3:\n        return 'three';\n      case 4:\n        return\
    \ 'four';\n      case 5:\n        return 'five';\n      case 6:\n        return\
    \ 'six';\n      case 7:\n        return 'seven';\n      case 8:\n        return\
    \ 'eight';\n      case 9:\n        return 'nine';\n      default:\n        return\
    \ 'zero';\n    }\n  }).join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'zero'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp3xm9vjj8.js:65:12)\n    at Object.<anonymous> (/tmp/tmp3xm9vjj8.js:71:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'zero',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = numeral_to_number(a);\n        const num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp34haroee.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp34haroee.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp34haroee.js:9:28)\n    at test (/tmp/tmp34haroee.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp34haroee.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsToSort = nums.map((num) => {\n   \
    \ switch (num) {\n      case \"zero\":\n        return 0;\n      case \"one\"\
    :\n        return 1;\n      case \"two\":\n        return 2;\n      case \"three\"\
    :\n        return 3;\n      case \"four\":\n        return 4;\n      case \"five\"\
    :\n        return 5;\n      case \"six\":\n        return 6;\n      case \"seven\"\
    :\n        return 7;\n      case \"eight\":\n        return 8;\n      case \"\
    nine\":\n        return 9;\n      default:\n        return 0;\n    }\n  });\n\
    \  numsToSort.sort((a, b) => a - b);\n  const sortedNums = numsToSort.map((num)\
    \ => {\n    switch (num) {\n      case 0:\n        return \"zero\";\n      case\
    \ 1:\n        return \"one\";\n      case 2:\n        return \"two\";\n      case\
    \ 3:\n        return \"three\";\n      case 4:\n        return \"four\";\n   \
    \   case 5:\n        return \"five\";\n      case 6:\n        return \"six\";\n\
    \      case 7:\n        return \"seven\";\n      case 8:\n        return \"eight\"\
    ;\n      case 9:\n        return \"nine\";\n      default:\n        return \"\
    zero\";\n    }\n  });\n  return sortedNums.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'zero'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp70kfmmg2.js:67:12)\n    at Object.<anonymous> (/tmp/tmp70kfmmg2.js:73:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'zero',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1auxw82y.js:10\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp1auxw82y.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1auxw82y.js:9:28)\n\
    \    at test (/tmp/tmp1auxw82y.js:19:22)\n    at Object.<anonymous> (/tmp/tmp1auxw82y.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = numeral_to_number(a);\n        const num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp34haroee.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp34haroee.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp34haroee.js:9:28)\n    at test (/tmp/tmp34haroee.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp34haroee.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const numMap = {\n        zero: 0,\n       \
    \ one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    return nums.sort((a, b) => numMap[a] - numMap[b]).join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numMap[a] - numMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: number[] = numbers.split(' ').map(n => {\n    switch (n) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n      default:\n\
    \        return -1;\n    }\n  });\n  nums.sort((a, b) => a - b);\n  return nums.map(n\
    \ => {\n    switch (n) {\n      case 0:\n        return 'zero';\n      case 1:\n\
    \        return 'one';\n      case 2:\n        return 'two';\n      case 3:\n\
    \        return 'three';\n      case 4:\n        return 'four';\n      case 5:\n\
    \        return 'five';\n      case 6:\n        return 'six';\n      case 7:\n\
    \        return 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n\
    \        return 'nine';\n      default:\n        return 'error';\n    }\n  }).join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'error'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp0ufseavt.js:65:12)\n    at Object.<anonymous> (/tmp/tmp0ufseavt.js:71:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'error',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_numeral(a) - num_to_numeral(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpot56v4v5.js:10\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpot56v4v5.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpot56v4v5.js:9:28)\n\
    \    at test (/tmp/tmpot56v4v5.js:19:22)\n    at Object.<anonymous> (/tmp/tmpot56v4v5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_numbers = nums.map(num => {\n   \
    \ switch (num) {\n      case \"zero\":\n        return 0;\n      case \"one\"\
    :\n        return 1;\n      case \"two\":\n        return 2;\n      case \"three\"\
    :\n        return 3;\n      case \"four\":\n        return 4;\n      case \"five\"\
    :\n        return 5;\n      case \"six\":\n        return 6;\n      case \"seven\"\
    :\n        return 7;\n      case \"eight\":\n        return 8;\n      case \"\
    nine\":\n        return 9;\n    }\n  });\n  const sorted_nums = nums_numbers.sort((a,\
    \ b) => a - b);\n  const sorted_words = sorted_nums.map(num => {\n    switch (num)\
    \ {\n      case 0:\n        return \"zero\";\n      case 1:\n        return \"\
    one\";\n      case 2:\n        return \"two\";\n      case 3:\n        return\
    \ \"three\";\n      case 4:\n        return \"four\";\n      case 5:\n       \
    \ return \"five\";\n      case 6:\n        return \"six\";\n      case 7:\n  \
    \      return \"seven\";\n      case 8:\n        return \"eight\";\n      case\
    \ 9:\n        return \"nine\";\n    }\n  });\n  return sorted_words.join(\" \"\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const numsMap = {\n        zero: 0,\n      \
    \  one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const sortedNums = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \    return sortedNums.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsToSort = nums.map((num) => numToInt(num));\n\
    \  const sortedNums = numsToSort.sort((a, b) => a - b);\n  const sortedNumsToWords\
    \ = sortedNums.map((num) => intToNum(num));\n  return sortedNumsToWords.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpomlyac4d.js:9\n    var numsToSort = nums.map(function (num) { return\
    \ numToInt(num); });\n                                               ^\n\nReferenceError:\
    \ numToInt is not defined\n    at /tmp/tmpomlyac4d.js:9:48\n    at Array.map (<anonymous>)\n\
    \    at sort_numbers (/tmp/tmpomlyac4d.js:9:27)\n    at test (/tmp/tmpomlyac4d.js:17:22)\n\
    \    at Object.<anonymous> (/tmp/tmpomlyac4d.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = convert_to_number(a);\n        const num_b = convert_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkn01rq8o.js:10\n        var num_a = convert_to_number(a);\n   \
    \                 ^\n\nReferenceError: convert_to_number is not defined\n    at\
    \ /tmp/tmpkn01rq8o.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpkn01rq8o.js:9:28)\n    at test (/tmp/tmpkn01rq8o.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpkn01rq8o.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numeral_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n\
    \        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    const\
    \ nums = numbers.split(' ');\n    const nums_int = nums.map(num => numeral_map[num]);\n\
    \    const sorted_nums = nums_int.sort((a, b) => a - b);\n    const sorted_nums_str\
    \ = sorted_nums.map(num => Object.keys(numeral_map).find(key => numeral_map[key]\
    \ === num));\n    return sorted_nums_str.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: string[] = numbers.split(\" \");\n  const numsMap: Map<string, number>\
    \ = new Map([\n    [\"zero\", 0],\n    [\"one\", 1],\n    [\"two\", 2],\n    [\"\
    three\", 3],\n    [\"four\", 4],\n    [\"five\", 5],\n    [\"six\", 6],\n    [\"\
    seven\", 7],\n    [\"eight\", 8],\n    [\"nine\", 9],\n  ]);\n  const numsArr:\
    \ number[] = nums.map((num) => numsMap.get(num));\n  numsArr.sort((a, b) => a\
    \ - b);\n  const sortedNums: string[] = numsArr.map((num) => {\n    for (const\
    \ [key, value] of numsMap.entries()) {\n      if (value === num) {\n        return\
    \ key;\n      }\n    }\n  });\n  return sortedNums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpu8866b6e.js:37:12)\n    at Object.<anonymous> (/tmp/tmpu8866b6e.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (let key in numsMap) {\n      if (numsMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return sorted_nums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return nums_to_int(a) - nums_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9d2lrgbg.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp9d2lrgbg.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp9d2lrgbg.js:9:28)\n\
    \    at test (/tmp/tmp9d2lrgbg.js:19:22)\n    at Object.<anonymous> (/tmp/tmp9d2lrgbg.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: string[] = numbers.split(' ');\n    const nums_map: Map<string, number>\
    \ = new Map([\n        ['zero', 0],\n        ['one', 1],\n        ['two', 2],\n\
    \        ['three', 3],\n        ['four', 4],\n        ['five', 5],\n        ['six',\
    \ 6],\n        ['seven', 7],\n        ['eight', 8],\n        ['nine', 9]\n   \
    \ ]);\n    const nums_sorted: string[] = nums.sort((a, b) => nums_map.get(a) -\
    \ nums_map.get(b));\n    return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = convert_to_number(a);\n    const num_b = convert_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfg4_0qz_.js:10\n        var num_a = convert_to_number(a);\n   \
    \                 ^\n\nReferenceError: convert_to_number is not defined\n    at\
    \ /tmp/tmpfg4_0qz_.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpfg4_0qz_.js:9:28)\n    at test (/tmp/tmpfg4_0qz_.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpfg4_0qz_.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const nums = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'];\n        return nums.indexOf(a) - nums.indexOf(b);\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        zero: 0,\n     \
    \   one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = convert_numeral_to_number(a);\n        const num_b = convert_numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpclugu9dm.js:10\n        var num_a = convert_numeral_to_number(a);\n\
    \                    ^\n\nReferenceError: convert_numeral_to_number is not defined\n\
    \    at /tmp/tmpclugu9dm.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpclugu9dm.js:9:28)\n    at test (/tmp/tmpclugu9dm.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpclugu9dm.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267975
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const sorted = nums.sort((a, b)\
    \ => {\n    return numeralMap[a] - numeralMap[b];\n  });\n  return sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267975
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums: string[] = numbers.split(' ');\n    const nums_int: number[] = nums.map(num\
    \ => {\n        switch (num) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \            default:\n                return -1;\n        }\n    });\n    nums_int.sort((a,\
    \ b) => a - b);\n    return nums_int.map(num => {\n        switch (num) {\n  \
    \          case 0:\n                return 'zero';\n            case 1:\n    \
    \            return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n            default:\n \
    \               return '-1';\n        }\n    }).join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'-1'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpe95wwnx0.js:66:12)\n    at Object.<anonymous> (/tmp/tmpe95wwnx0.js:72:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '-1',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: string[] = numbers.split(\" \");\n  const nums_map: Map<string, number>\
    \ = new Map([\n    [\"zero\", 0],\n    [\"one\", 1],\n    [\"two\", 2],\n    [\"\
    three\", 3],\n    [\"four\", 4],\n    [\"five\", 5],\n    [\"six\", 6],\n    [\"\
    seven\", 7],\n    [\"eight\", 8],\n    [\"nine\", 9],\n  ]);\n  const sorted_nums:\
    \ number[] = nums\n    .map((num) => nums_map.get(num))\n    .sort((a, b) => a\
    \ - b);\n  return sorted_nums.map((num) => nums_map.get(num)).join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpge6i44gp.js:30:12)\n    at Object.<anonymous> (/tmp/tmpge6i44gp.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => {\n    return numeralMap[a] - numeralMap[b];\n  });\n  return numsSorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeo45mxxr.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpeo45mxxr.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpeo45mxxr.js:9:28)\n\
    \    at test (/tmp/tmpeo45mxxr.js:19:22)\n    at Object.<anonymous> (/tmp/tmpeo45mxxr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = number_to_numeral(a);\n    const num_b = number_to_numeral(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_1iyxamw.js:10\n        var num_a = number_to_numeral(a);\n   \
    \                 ^\n\nReferenceError: number_to_numeral is not defined\n    at\
    \ /tmp/tmp_1iyxamw.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp_1iyxamw.js:9:28)\n    at test (/tmp/tmp_1iyxamw.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp_1iyxamw.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = number_to_numeral(a);\n        const num_b = number_to_numeral(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk1dr5p4y.js:10\n        var num_a = number_to_numeral(a);\n   \
    \                 ^\n\nReferenceError: number_to_numeral is not defined\n    at\
    \ /tmp/tmpk1dr5p4y.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpk1dr5p4y.js:9:28)\n    at test (/tmp/tmpk1dr5p4y.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpk1dr5p4y.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums[a] - nums[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        if (a === 'zero') {\n            return -1;\n        } else if (b ===\
    \ 'zero') {\n            return 1;\n        } else if (a === 'one') {\n      \
    \      return -1;\n        } else if (b === 'one') {\n            return 1;\n\
    \        } else if (a === 'two') {\n            return -1;\n        } else if\
    \ (b === 'two') {\n            return 1;\n        } else if (a === 'three') {\n\
    \            return -1;\n        } else if (b === 'three') {\n            return\
    \ 1;\n        } else if (a === 'four') {\n            return -1;\n        } else\
    \ if (b === 'four') {\n            return 1;\n        } else if (a === 'five')\
    \ {\n            return -1;\n        } else if (b === 'five') {\n            return\
    \ 1;\n        } else if (a === 'six') {\n            return -1;\n        } else\
    \ if (b === 'six') {\n            return 1;\n        } else if (a === 'seven')\
    \ {\n            return -1;\n        } else if (b === 'seven') {\n           \
    \ return 1;\n        } else if (a === 'eight') {\n            return -1;\n   \
    \     } else if (b === 'eight') {\n            return 1;\n        } else if (a\
    \ === 'nine') {\n            return -1;\n        } else if (b === 'nine') {\n\
    \            return 1;\n        } else {\n            return 0;\n        }\n \
    \   });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return sorted_nums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsToSort = nums.map((num) => {\n   \
    \ switch (num) {\n      case \"zero\":\n        return 0;\n      case \"one\"\
    :\n        return 1;\n      case \"two\":\n        return 2;\n      case \"three\"\
    :\n        return 3;\n      case \"four\":\n        return 4;\n      case \"five\"\
    :\n        return 5;\n      case \"six\":\n        return 6;\n      case \"seven\"\
    :\n        return 7;\n      case \"eight\":\n        return 8;\n      case \"\
    nine\":\n        return 9;\n      default:\n        return 0;\n    }\n  });\n\
    \  const sorted = numsToSort.sort((a, b) => a - b);\n  return sorted.map((num)\
    \ => {\n    switch (num) {\n      case 0:\n        return \"zero\";\n      case\
    \ 1:\n        return \"one\";\n      case 2:\n        return \"two\";\n      case\
    \ 3:\n        return \"three\";\n      case 4:\n        return \"four\";\n   \
    \   case 5:\n        return \"five\";\n      case 6:\n        return \"six\";\n\
    \      case 7:\n        return \"seven\";\n      case 8:\n        return \"eight\"\
    ;\n      case 9:\n        return \"nine\";\n      default:\n        return \"\
    zero\";\n    }\n  }).join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'zero'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp77x2r38q.js:66:12)\n    at Object.<anonymous> (/tmp/tmp77x2r38q.js:72:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'zero',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three:\
    \ 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ numeral_map = {\n        zero: 0,\n        one: 1,\n        two: 2,\n      \
    \  three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n        seven:\
    \ 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \").map(num => numeral_map[num]);\n    nums.sort((a, b) => a - b);\n    return\
    \ nums.map(num => Object.keys(numeral_map).find(key => numeral_map[key] === num)).join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const nums_map = {\n            zero: 0,\n            one: 1,\n     \
    \       two: 2,\n            three: 3,\n            four: 4,\n            five:\
    \ 5,\n            six: 6,\n            seven: 7,\n            eight: 8,\n    \
    \        nine: 9\n        };\n        return nums_map[a] - nums_map[b];\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return sorted_nums.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    if (a === \"zero\") {\n      return -1;\n    } else if (b === \"zero\") {\n\
    \      return 1;\n    } else if (a === \"one\") {\n      return -1;\n    } else\
    \ if (b === \"one\") {\n      return 1;\n    } else if (a === \"two\") {\n   \
    \   return -1;\n    } else if (b === \"two\") {\n      return 1;\n    } else if\
    \ (a === \"three\") {\n      return -1;\n    } else if (b === \"three\") {\n \
    \     return 1;\n    } else if (a === \"four\") {\n      return -1;\n    } else\
    \ if (b === \"four\") {\n      return 1;\n    } else if (a === \"five\") {\n \
    \     return -1;\n    } else if (b === \"five\") {\n      return 1;\n    } else\
    \ if (a === \"six\") {\n      return -1;\n    } else if (b === \"six\") {\n  \
    \    return 1;\n    } else if (a === \"seven\") {\n      return -1;\n    } else\
    \ if (b === \"seven\") {\n      return 1;\n    } else if (a === \"eight\") {\n\
    \      return -1;\n    } else if (b === \"eight\") {\n      return 1;\n    } else\
    \ if (a === \"nine\") {\n      return -1;\n    } else if (b === \"nine\") {\n\
    \      return 1;\n    }\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_int = [];\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        nums_int.push(numeral_to_int(nums[i]));\n   \
    \ }\n    nums_int.sort(function (a, b) { return a - b });\n    let nums_str =\
    \ [];\n    for (let i = 0; i < nums_int.length; i++) {\n        nums_str.push(int_to_numeral(nums_int[i]));\n\
    \    }\n    return nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj7dwp8vm.js:11\n        nums_int.push(numeral_to_int(nums[i]));\n\
    \                 ^\n\nReferenceError: numeral_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpj7dwp8vm.js:11:18)\n    at test (/tmp/tmpj7dwp8vm.js:23:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpj7dwp8vm.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_map = {\n        zero: 0,\n     \
    \   one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five:\
    \ 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n\
    \    };\n    const sorted_nums = nums.sort((a, b) => {\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return sorted_nums.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsMapReverse = {\n    0: \"\
    zero\",\n    1: \"one\",\n    2: \"two\",\n    3: \"three\",\n    4: \"four\"\
    ,\n    5: \"five\",\n    6: \"six\",\n    7: \"seven\",\n    8: \"eight\",\n \
    \   9: \"nine\"\n  };\n  const numsSorted = nums.map(num => numsMap[num]).sort((a,\
    \ b) => a - b);\n  return numsSorted.map(num => numsMapReverse[num]).join(\" \"\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj4_3_8gl.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpj4_3_8gl.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj4_3_8gl.js:9:28)\n\
    \    at test (/tmp/tmpj4_3_8gl.js:19:22)\n    at Object.<anonymous> (/tmp/tmpj4_3_8gl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums: number[] = numbers.split(\" \").map(num => {\n        switch (num) {\n\
    \            case \"zero\":\n                return 0;\n            case \"one\"\
    :\n                return 1;\n            case \"two\":\n                return\
    \ 2;\n            case \"three\":\n                return 3;\n            case\
    \ \"four\":\n                return 4;\n            case \"five\":\n         \
    \       return 5;\n            case \"six\":\n                return 6;\n    \
    \        case \"seven\":\n                return 7;\n            case \"eight\"\
    :\n                return 8;\n            case \"nine\":\n                return\
    \ 9;\n            default:\n                return -1;\n        }\n    });\n \
    \   nums.sort((a, b) => a - b);\n    return nums.map(num => {\n        switch\
    \ (num) {\n            case 0:\n                return \"zero\";\n           \
    \ case 1:\n                return \"one\";\n            case 2:\n            \
    \    return \"two\";\n            case 3:\n                return \"three\";\n\
    \            case 4:\n                return \"four\";\n            case 5:\n\
    \                return \"five\";\n            case 6:\n                return\
    \ \"six\";\n            case 7:\n                return \"seven\";\n         \
    \   case 8:\n                return \"eight\";\n            case 9:\n        \
    \        return \"nine\";\n            default:\n                return \"\";\n\
    \        }\n    }).join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267977
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    const\
    \ nums = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        const num_a = parseInt(a);\n        const num_b = parseInt(b);\n    \
    \    return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpuqfjiy94.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuqfjiy94.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted = nums.sort((a, b)\
    \ => numsMap[a] - numsMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_int = nums.map(num => num_to_int(num));\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map(num => int_to_num(num));\n  return sorted_nums_str.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuudeeg_a.js:9\n    var nums_int = nums.map(function (num) { return\
    \ num_to_int(num); });\n                                             ^\n\nReferenceError:\
    \ num_to_int is not defined\n    at /tmp/tmpuudeeg_a.js:9:46\n    at Array.map\
    \ (<anonymous>)\n    at sort_numbers (/tmp/tmpuudeeg_a.js:9:25)\n    at test (/tmp/tmpuudeeg_a.js:17:22)\n\
    \    at Object.<anonymous> (/tmp/tmpuudeeg_a.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums: string[] = numbers.split(\" \");\n  const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n    const num_a: number = numeral_to_number(a);\n    const num_b: number\
    \ = numeral_to_number(b);\n    return num_a - num_b;\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5l0snlrj.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmp5l0snlrj.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmp5l0snlrj.js:9:28)\n    at test (/tmp/tmp5l0snlrj.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp5l0snlrj.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267977
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu_9xj7ef.js:10\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpu_9xj7ef.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpu_9xj7ef.js:9:28)\n\
    \    at test (/tmp/tmpu_9xj7ef.js:19:22)\n    at Object.<anonymous> (/tmp/tmpu_9xj7ef.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267969
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo_79n0l2.js:10\n        var num_a = numeral_to_number(a);\n   \
    \                 ^\n\nReferenceError: numeral_to_number is not defined\n    at\
    \ /tmp/tmpo_79n0l2.js:10:21\n    at Array.sort (<anonymous>)\n    at sort_numbers\
    \ (/tmp/tmpo_79n0l2.js:9:28)\n    at test (/tmp/tmpo_79n0l2.js:21:22)\n    at\
    \ Object.<anonymous> (/tmp/tmpo_79n0l2.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp68i4e433.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmp68i4e433.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp68i4e433.js:9:28)\n\
    \    at test (/tmp/tmp68i4e433.js:19:22)\n    at Object.<anonymous> (/tmp/tmp68i4e433.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267966
- exit_code: 1
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n    let\
    \ nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a, b) => {\n\
    \        return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeo45mxxr.js:10\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpeo45mxxr.js:10:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpeo45mxxr.js:9:28)\n\
    \    at test (/tmp/tmpeo45mxxr.js:19:22)\n    at Object.<anonymous> (/tmp/tmpeo45mxxr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  stdout: ''
  timestamp: 1660267972
- exit_code: 0
  program: "// @ts-nocheck\n\n//Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers\
    \ sorted from smallest to largest\n// >>> sort_numbers(\"three one five\")\n//\
    \ \"one three five\"\nfunction sort_numbers(numbers: string): string {\n  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660267966

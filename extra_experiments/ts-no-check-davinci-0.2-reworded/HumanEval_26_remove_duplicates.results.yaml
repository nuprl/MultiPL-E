language: ts
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpncqzftrf.js:14:12)\n    at Object.<anonymous> (/tmp/tmpncqzftrf.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268029
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let newArray: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (newArray.indexOf(numbers[i]) ===\
    \ -1) {\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpyqnxvvt0.js:20:12)\n    at Object.<anonymous> (/tmp/tmpyqnxvvt0.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268029
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((number, index) => numbers.indexOf(number)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxwbu6psq.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxwbu6psq.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnk__825.js:21:12)\n    at Object.<anonymous> (/tmp/tmphnk__825.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpncqzftrf.js:14:12)\n    at Object.<anonymous> (/tmp/tmpncqzftrf.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268029
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4aqjne43.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4aqjne43.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9nhrdxlq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9nhrdxlq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjxupqi4x.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjxupqi4x.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpolf_fx5a.js:20:12)\n    at Object.<anonymous> (/tmp/tmpolf_fx5a.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique_numbers.indexOf(number) === -1) {\n         \
    \   unique_numbers.push(number);\n        }\n    });\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpn_8qddcn.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn_8qddcn.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpolf_fx5a.js:20:12)\n    at Object.<anonymous> (/tmp/tmpolf_fx5a.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4aqjne43.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4aqjne43.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzys6nia9.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzys6nia9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => {\n\
    \        return self.indexOf(value) === index;\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpw254ax4n.js:16:12)\n    at Object.<anonymous> (/tmp/tmpw254ax4n.js:18:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzys6nia9.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzys6nia9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpolf_fx5a.js:20:12)\n    at Object.<anonymous> (/tmp/tmpolf_fx5a.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) == -1)\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpe3r2hiiq.js:20:12)\n    at Object.<anonymous> (/tmp/tmpe3r2hiiq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjxupqi4x.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjxupqi4x.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((number, index) => numbers.indexOf(number)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxwbu6psq.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxwbu6psq.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    const uniqueNumbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpnbg861i5.js:21:12)\n    at Object.<anonymous> (/tmp/tmpnbg861i5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let temp: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (temp.indexOf(numbers[i])\
    \ === -1) {\n            temp.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphj2ivaf0.js:22:12)\n    at Object.<anonymous> (/tmp/tmphj2ivaf0.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa8idldn3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa8idldn3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (uniqueNumbers.indexOf(value) === -1) {\n            uniqueNumbers.push(value);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpkk6a01_9.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkk6a01_9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 0
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        let isUnique: boolean = true;\n   \
    \     for (let j: number = 0; j < numbers.length; j++) {\n            if (numbers[i]\
    \ === numbers[j] && i !== j) {\n                isUnique = false;\n          \
    \  }\n        }\n        if (isUnique) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    let unique_index:\
    \ number = 0;\n    for (let i: number = 0; i < numbers.length; i++) {\n      \
    \  if (unique.indexOf(numbers[i]) === -1) {\n            unique[unique_index]\
    \ = numbers[i];\n            unique_index++;\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_s2_tnh5.js:22:12)\n    at Object.<anonymous> (/tmp/tmp_s2_tnh5.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzys6nia9.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzys6nia9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpixgdmg7x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpixgdmg7x.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (item) {\n        if (unique.indexOf(item) === -1) {\n            unique.push(item);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpe67ejn4d.js:20:12)\n    at Object.<anonymous> (/tmp/tmpe67ejn4d.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpncqzftrf.js:14:12)\n    at Object.<anonymous> (/tmp/tmpncqzftrf.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268029
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzys6nia9.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzys6nia9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4aqjne43.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4aqjne43.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4aqjne43.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4aqjne43.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 0
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        let isUnique: boolean = true;\n   \
    \     for (let j: number = 0; j < numbers.length; j++) {\n            if (i !==\
    \ j && numbers[i] === numbers[j]) {\n                isUnique = false;\n     \
    \       }\n        }\n        if (isUnique) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpolf_fx5a.js:20:12)\n    at Object.<anonymous> (/tmp/tmpolf_fx5a.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppqwrr9y6.js:21:12)\n    at Object.<anonymous> (/tmp/tmppqwrr9y6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpr2_0ymbb.js:20:12)\n    at Object.<anonymous> (/tmp/tmpr2_0ymbb.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnk__825.js:21:12)\n    at Object.<anonymous> (/tmp/tmphnk__825.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique = [];\n    numbers.forEach(function (number)\
    \ {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjv7rgasa.js:20:12)\n    at Object.<anonymous> (/tmp/tmpjv7rgasa.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpncqzftrf.js:14:12)\n    at Object.<anonymous> (/tmp/tmpncqzftrf.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268029
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let set = new Set(numbers);\n    return Array.from(set);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp534bmz6m.js:15:12)\n    at Object.<anonymous> (/tmp/tmp534bmz6m.js:17:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_81rn7d9.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_81rn7d9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpixgdmg7x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpixgdmg7x.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique_numbers.indexOf(number) === -1) {\n         \
    \   unique_numbers.push(number);\n        }\n    });\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpn_8qddcn.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn_8qddcn.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4aqjne43.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4aqjne43.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique_numbers: number[] = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9nhrdxlq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9nhrdxlq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphnycp104.js:14:12)\n    at Object.<anonymous> (/tmp/tmphnycp104.js:16:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 0
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i]) ===\
    \ numbers.lastIndexOf(numbers[i])) {\n            result.push(numbers[i]);\n \
    \       }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    return numbers.filter((value, index, self) => {\n\
    \        return self.indexOf(value) === index;\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpw254ax4n.js:16:12)\n    at Object.<anonymous> (/tmp/tmpw254ax4n.js:18:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpixgdmg7x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpixgdmg7x.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268031
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfwtcscw5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfwtcscw5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6cmfy1sq.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6cmfy1sq.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqpni3nx0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpqpni3nx0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1660268032
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9izv9jej.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9izv9jej.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgyph9jn7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgyph9jn7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp155lqhyh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp155lqhyh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028
- exit_code: 1
  program: "// @ts-nocheck\n\n//From an array of integers, remove all elements that\
    \ occur more than once.\n// Keep order of elements left the same as in the input.\n\
    // >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers:\
    \ number[]): number[] {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgg1wxi8h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgg1wxi8h.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  stdout: ''
  timestamp: 1660268028

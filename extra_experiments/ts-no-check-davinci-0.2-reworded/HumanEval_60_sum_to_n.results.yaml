language: ts
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 1
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    // TODO: implement this function\n    return 0;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpur7ao5ym.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpur7ao5ym.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum: number = 0;\n  for (let i: number = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 1
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    // your code here\n    return 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmph7pft4t5.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7pft4t5.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return (n * (n + 1)) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  if (n === 1) {\n    return 1;\n  }\n  return n + sum_to_n(n\
    \ - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return (n * (n + 1)) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return (n * (n + 1)) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 1
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  // TODO: implement this function\n  return 0;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp2_vw0lce.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2_vw0lce.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return\
    \ n + sum_to_n(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  if (n === 1) {\n    return 1;\n  } else {\n    return n\
    \ + sum_to_n(n - 1);\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return (n * (n + 1)) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum: number = 0;\n  for (let i: number = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum: number = 0;\n  for (let i: number = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return\
    \ n + sum_to_n(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return (n * (n + 1)) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return (n * (n + 1)) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n  return (n * (n + 1)) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268087
- exit_code: 0
  program: "// @ts-nocheck\n\n//sum_to_n is a function that sums numbers from 1 to\
    \ n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n\
    // 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n:\
    \ number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return\
    \ n + sum_to_n(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660268086

language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3, 5, 13, 89];\n    if (n <= fib_list.length) {\n        return fib_list[n -\
    \ 1];\n    } else {\n        let i: number = fib_list.length;\n        let fib_num:\
    \ number = fib_list[i - 1];\n        while (i < n) {\n            fib_num = fib_num\
    \ + fib_list[i - 2];\n            if (is_prime(fib_num)) {\n                fib_list.push(fib_num);\n\
    \                i++;\n            }\n        }\n        return fib_num;\n   \
    \ }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpynz7uq5e.js:23\n            if (is_prime(fib_num)) {\n        \
    \    ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpynz7uq5e.js:23:13)\n\
    \    at test (/tmp/tmpynz7uq5e.js:39:22)\n    at Object.<anonymous> (/tmp/tmpynz7uq5e.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let prime_fib = 0;\n    let i = 0;\n  \
    \  while (i < n) {\n        if (fib === prime) {\n            prime_fib = fib;\n\
    \            i++;\n        }\n        fib = fibonacci(n);\n        prime = prime_number(n);\n\
    \    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6u1rrars.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp6u1rrars.js:14:15)\n\
    \    at test (/tmp/tmp6u1rrars.js:31:22)\n    at Object.<anonymous> (/tmp/tmp6u1rrars.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    let fib_prev_prev = 0;\n    while (i < n) {\n\
    \        fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        fib = fib_prev\
    \ + fib_prev_prev;\n        if (is_prime(fib)) {\n            i += 1;\n      \
    \  }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpdeslq_42.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdeslq_42.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        fib = fib_prev + fib_prev_prev;\n\
    \        if (is_prime(fib)) {\n            count++;\n        }\n        fib_prev_prev\
    \ = fib_prev;\n        fib_prev = fib;\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqpbg_zq.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpiqpbg_zq.js:20:9)\n    at\
    \ test (/tmp/tmpiqpbg_zq.js:31:22)\n    at Object.<anonymous> (/tmp/tmpiqpbg_zq.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: -6
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let is_prime: boolean = true;\n    while (i < n) {\n        j = fib_numbers[i\
    \ - 1] + fib_numbers[i - 2];\n        fib_numbers.push(j);\n        for (k = 2;\
    \ k < j; k++) {\n            if (j % k === 0) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           i++;\n        }\n        is_prime = true;\n    }\n    return fib_numbers[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: Exception
  stderr: "\n<--- Last few GCs --->\n\n[12720:0x51d5b60]      737 ms: Scavenge 808.5\
    \ (841.5) -> 808.5 (841.5) MB, 30.5 / 0.0 ms  (average mu = 1.000, current mu\
    \ = 1.000) allocation failure \n[12720:0x51d5b60]     1099 ms: Scavenge 1211.8\
    \ (1244.8) -> 1211.8 (1244.8) MB, 48.4 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n[12720:0x51d5b60]     1676 ms: Scavenge 1816.7\
    \ (1849.8) -> 1816.7 (1849.8) MB, 116.7 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR:\
    \ invalid array length Allocation failed - JavaScript heap out of memory\n 1:\
    \ 0xa04200 node::Abort() [node]\n 2: 0x94e4e9 node::FatalError(char const*, char\
    \ const*) [node]\n 3: 0xb797be v8::Utils::ReportOOMFailure(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe9568e\
    \  [node]\n 8: 0xe957da  [node]\n 9: 0x1032b83 v8::internal::Runtime_GrowArrayElements(int,\
    \ unsigned long*, v8::internal::Isolate*) [node]\n10: 0x14011f9  [node]\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_arr = [2, 3];\n  \
    \  let i = 0;\n    while (fib_arr.length < n) {\n        fib_arr.push(fib_arr[i]\
    \ + fib_arr[i + 1]);\n        i++;\n    }\n    return fib_arr[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpnb4h0kxa.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnb4h0kxa.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n += 1;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7wabrlex.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmp7wabrlex.js:14:19)\n\
    \    at test (/tmp/tmp7wabrlex.js:24:22)\n    at Object.<anonymous> (/tmp/tmp7wabrlex.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  let prime_num = prime(n);\n    if (fib_num == prime_num) {\n        return\
    \ fib_num;\n    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg57zt1kw.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpg57zt1kw.js:14:19)\n\
    \    at test (/tmp/tmpg57zt1kw.js:26:22)\n    at Object.<anonymous> (/tmp/tmpg57zt1kw.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpqmzfsc7g.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqmzfsc7g.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let a = 1;\n\
    \    let b = 1;\n    let c = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmp_4p064mt.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_4p064mt.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    let fib: number = 0;\n    while (i < n) {\n\
    \        fib = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n    \
    \        fibs.push(fib);\n            i += 1;\n        }\n    }\n    return fibs[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4hqonois.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp4hqonois.js:19:9)\n    at\
    \ test (/tmp/tmp4hqonois.js:32:22)\n    at Object.<anonymous> (/tmp/tmp4hqonois.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpr9mfh7xl.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr9mfh7xl.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw41rtf13.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpw41rtf13.js:22:9)\n    at\
    \ test (/tmp/tmpw41rtf13.js:31:22)\n    at Object.<anonymous> (/tmp/tmpw41rtf13.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i += 1;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpf6a85572.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf6a85572.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcqizk78v.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpcqizk78v.js:19:9)\n    at\
    \ test (/tmp/tmpcqizk78v.js:31:22)\n    at Object.<anonymous> (/tmp/tmpcqizk78v.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpr9mfh7xl.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr9mfh7xl.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzrymi3g6.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpzrymi3g6.js:22:9)\n    at\
    \ test (/tmp/tmpzrymi3g6.js:31:22)\n    at Object.<anonymous> (/tmp/tmpzrymi3g6.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let fib_number of fib_numbers) {\n        if (is_prime(fib_number))\
    \ {\n            prime_fib_numbers.push(fib_number);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmph3bots7x.js:23\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmph3bots7x.js:23:9)\n\
    \    at test (/tmp/tmph3bots7x.js:32:22)\n    at Object.<anonymous> (/tmp/tmph3bots7x.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let prime_fib_nums: number[] = [2];\n    let i: number = 2;\n    while\
    \ (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2p83xguq.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp2p83xguq.js:19:9)\n\
    \    at test (/tmp/tmp2p83xguq.js:30:22)\n    at Object.<anonymous> (/tmp/tmp2p83xguq.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let counter: number = 0;\n    let i: number = 1;\n    while (counter < n)\
    \ {\n        fib_num = fib(i);\n        if (is_prime(fib_num)) {\n           \
    \ counter++;\n        }\n        i++;\n    }\n    return fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxtsqbcsn.js:18\n        fib_num = fib(i);\n        ^\n\nReferenceError:\
    \ fib is not defined\n    at prime_fib (/tmp/tmpxtsqbcsn.js:18:9)\n    at test\
    \ (/tmp/tmpxtsqbcsn.js:29:22)\n    at Object.<anonymous> (/tmp/tmpxtsqbcsn.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    while (fibs.length < n) {\n        fibs.push(fibs[i\
    \ - 1] + fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpzyxk3sbz.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzyxk3sbz.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n \
    \       else {\n            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqsdwzo_.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpiqsdwzo_.js:14:15)\n\
    \    at test (/tmp/tmpiqsdwzo_.js:34:22)\n    at Object.<anonymous> (/tmp/tmpiqsdwzo_.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpo8dfjyvc.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo8dfjyvc.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nkw48yp.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp7nkw48yp.js:14:15)\n\
    \    at test (/tmp/tmp7nkw48yp.js:34:22)\n    at Object.<anonymous> (/tmp/tmp7nkw48yp.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n \
    \       else {\n            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqsdwzo_.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpiqsdwzo_.js:14:15)\n\
    \    at test (/tmp/tmpiqsdwzo_.js:34:22)\n    at Object.<anonymous> (/tmp/tmpiqsdwzo_.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmk20u2f8.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpmk20u2f8.js:19:9)\n\
    \    at test (/tmp/tmpmk20u2f8.js:31:22)\n    at Object.<anonymous> (/tmp/tmpmk20u2f8.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let j: number = 0; j < fib_numbers.length; j++) {\n\
    \        if (is_prime(fib_numbers[j])) {\n            prime_fib_numbers.push(fib_numbers[j]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_zilbvmx.js:22\n        if (is_prime(fib_numbers[j])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp_zilbvmx.js:22:9)\n\
    \    at test (/tmp/tmp_zilbvmx.js:31:22)\n    at Object.<anonymous> (/tmp/tmp_zilbvmx.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (fib_list.length < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmp1yzoou6z.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1yzoou6z.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpufhwsyt3.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpufhwsyt3.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzrymi3g6.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpzrymi3g6.js:22:9)\n    at\
    \ test (/tmp/tmpzrymi3g6.js:31:22)\n    at Object.<anonymous> (/tmp/tmpzrymi3g6.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    while (fibs.length < n) {\n        let fib:\
    \ number = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n        \
    \    fibs.push(fib);\n        }\n        i++;\n    }\n    return fibs[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpid09p9d9.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpid09p9d9.js:18:9)\n    at\
    \ test (/tmp/tmpid09p9d9.js:31:22)\n    at Object.<anonymous> (/tmp/tmpid09p9d9.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpsgj1ka1s.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpsgj1ka1s.js:14:15)\n\
    \    at test (/tmp/tmpsgj1ka1s.js:26:22)\n    at Object.<anonymous> (/tmp/tmpsgj1ka1s.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let i: number = 1;\n    let j: number = 0;\n\
    \    while (j < n) {\n        if (is_prime(fib)) {\n            j++;\n       \
    \ }\n        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev\
    \ = temp;\n        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0nmlxwt0.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp0nmlxwt0.js:19:9)\n    at\
    \ test (/tmp/tmp0nmlxwt0.js:32:22)\n    at Object.<anonymous> (/tmp/tmp0nmlxwt0.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    while (i < n) {\n        let temp = fib;\n  \
    \      fib += fib_prev;\n        fib_prev = temp;\n        if (is_prime(fib))\
    \ {\n            i += 1;\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpapsig3uw.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpapsig3uw.js:41:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    while\
    \ (i < fib.length && j < prime.length) {\n        if (fib[i] == prime[j]) {\n\
    \            return fib[i];\n        } else if (fib[i] < prime[j]) {\n       \
    \     i++;\n        } else {\n            j++;\n        }\n    }\n    return 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpm5msgcnb.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpm5msgcnb.js:14:15)\n\
    \    at test (/tmp/tmpm5msgcnb.js:34:22)\n    at Object.<anonymous> (/tmp/tmpm5msgcnb.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let fib_1: number = 1;\n    let fib_2: number = 1;\n    let count: number =\
    \ 0;\n    while (count < n) {\n        fib = fib_1 + fib_2;\n        fib_2 = fib_1;\n\
    \        fib_1 = fib;\n        if (is_prime(fib)) {\n            count++;\n  \
    \      }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpgo2yjpb4.js:22\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpgo2yjpb4.js:22:9)\n    at\
    \ test (/tmp/tmpgo2yjpb4.js:31:22)\n    at Object.<anonymous> (/tmp/tmpgo2yjpb4.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fibonacci(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fibonacci(n);\n        n++;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpddmvdl5k.js:14\n    var fib_num = fibonacci(n);\n             \
    \     ^\n\nReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpddmvdl5k.js:14:19)\n\
    \    at test (/tmp/tmpddmvdl5k.js:24:22)\n    at Object.<anonymous> (/tmp/tmpddmvdl5k.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 1;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_count: number = 0;\n\
    \    while (prime_fib_num_count < n) {\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \        if (is_prime(fib_num)) {\n            prime_fib_num = fib_num;\n    \
    \        prime_fib_num_count++;\n        }\n        fib_num_prev_prev = fib_num_prev;\n\
    \        fib_num_prev = fib_num;\n    }\n    return prime_fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp347tbtnc.js:21\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp347tbtnc.js:21:9)\n\
    \    at test (/tmp/tmp347tbtnc.js:33:22)\n    at Object.<anonymous> (/tmp/tmp347tbtnc.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let count: number = 0;\n    while (count < n) {\n        fib_num = fib_num_prev\
    \ + fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            count +=\
    \ 1;\n        }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev\
    \ = fib_num;\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8pg2cmzf.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp8pg2cmzf.js:20:9)\n\
    \    at test (/tmp/tmp8pg2cmzf.js:31:22)\n    at Object.<anonymous> (/tmp/tmp8pg2cmzf.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1, 2];\n\
    \    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let\
    \ prime: number = 0;\n    let prime_fib: number = 0;\n    while (k < n) {\n  \
    \      fib.push(fib[i] + fib[i + 1]);\n        i++;\n        if (is_prime(fib[j]))\
    \ {\n            prime++;\n            if (prime == n) {\n                prime_fib\
    \ = fib[j];\n            }\n        }\n        j++;\n        k++;\n    }\n   \
    \ return prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbhl203pv.js:23\n        if (is_prime(fib[j])) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpbhl203pv.js:23:9)\n\
    \    at test (/tmp/tmpbhl203pv.js:37:22)\n    at Object.<anonymous> (/tmp/tmpbhl203pv.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6ao7bpjx.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp6ao7bpjx.js:14:15)\n\
    \    at test (/tmp/tmp6ao7bpjx.js:37:22)\n    at Object.<anonymous> (/tmp/tmp6ao7bpjx.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    let prime_fib_nums: number[] = [2];\n    while\
    \ (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4p9ncufh.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp4p9ncufh.js:19:9)\n\
    \    at test (/tmp/tmp4p9ncufh.js:30:22)\n    at Object.<anonymous> (/tmp/tmp4p9ncufh.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3, 5];\n    let prime_fib_nums: number[] = [2, 3, 5];\n    let i: number = 3;\n\
    \    while (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1]\
    \ + fib_nums[i - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5alyschc.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp5alyschc.js:19:9)\n\
    \    at test (/tmp/tmp5alyschc.js:32:22)\n    at Object.<anonymous> (/tmp/tmp5alyschc.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [1, 1];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpi3t9_6sl.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi3t9_6sl.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib: number = 1;\n  let\
    \ fib_prev: number = 1;\n  let fib_prev_prev: number = 0;\n  let count: number\
    \ = 0;\n  let prime_count: number = 0;\n  while (prime_count < n) {\n    if (is_prime(fib))\
    \ {\n      prime_count++;\n    }\n    fib_prev_prev = fib_prev;\n    fib_prev\
    \ = fib;\n    fib = fib_prev + fib_prev_prev;\n  }\n  return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpimq6hqrh.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpimq6hqrh.js:20:9)\n    at\
    \ test (/tmp/tmpimq6hqrh.js:32:22)\n    at Object.<anonymous> (/tmp/tmpimq6hqrh.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return prime[j - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzbs17l7k.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpzbs17l7k.js:14:15)\n\
    \    at test (/tmp/tmpzbs17l7k.js:35:22)\n    at Object.<anonymous> (/tmp/tmpzbs17l7k.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let fib_num_3:\
    \ number = 2;\n    let i: number = 0;\n    while (i < n) {\n        if (is_prime(fib_num_3))\
    \ {\n            i++;\n        }\n        fib_num = fib_num_1 + fib_num_2;\n \
    \       fib_num_1 = fib_num_2;\n        fib_num_2 = fib_num;\n        fib_num_3\
    \ = fib_num_1 + fib_num_2;\n    }\n    return fib_num;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbyr49zzk.js:20\n        if (is_prime(fib_num_3)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpbyr49zzk.js:20:9)\n\
    \    at test (/tmp/tmpbyr49zzk.js:33:22)\n    at Object.<anonymous> (/tmp/tmpbyr49zzk.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n    let\
    \ b: number = 1;\n    let c: number = 0;\n    let count: number = 0;\n    while\
    \ (count < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if\
    \ (is_prime(c)) {\n            count++;\n        }\n    }\n    return c;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_rer80z3.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp_rer80z3.js:22:9)\n    at\
    \ test (/tmp/tmp_rer80z3.js:31:22)\n    at Object.<anonymous> (/tmp/tmp_rer80z3.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n > fib_numbers.length) {\n        let i: number\
    \ = fib_numbers.length;\n        while (i < n) {\n            let last: number\
    \ = fib_numbers[fib_numbers.length - 1];\n            let second_last: number\
    \ = fib_numbers[fib_numbers.length - 2];\n            let next_fib: number = last\
    \ + second_last;\n            if (is_prime(next_fib)) {\n                fib_numbers.push(next_fib);\n\
    \                i += 1;\n            }\n        }\n    }\n    return fib_numbers[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpq4tb3b1l.js:21\n            if (is_prime(next_fib)) {\n       \
    \     ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpq4tb3b1l.js:21:13)\n\
    \    at test (/tmp/tmpq4tb3b1l.js:37:22)\n    at Object.<anonymous> (/tmp/tmpq4tb3b1l.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        fib_num = fib_num_1 + fib_num_2;\n\
    \        fib_num_2 = fib_num_1;\n        fib_num_1 = fib_num;\n        if (is_prime(fib_num))\
    \ {\n            count += 1;\n        }\n    }\n    return fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9m41n2gm.js:22\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp9m41n2gm.js:22:9)\n\
    \    at test (/tmp/tmp9m41n2gm.js:31:22)\n    at Object.<anonymous> (/tmp/tmp9m41n2gm.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5, 13, 89];\n    if (n < 1) {\n        return 0;\n    }\n    if (n <= fibs.length)\
    \ {\n        return fibs[n - 1];\n    }\n    let i: number = fibs.length;\n  \
    \  let fib: number = fibs[i - 1];\n    while (i < n) {\n        fib = fibs[i -\
    \ 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n            fibs.push(fib);\n\
    \            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6jbkpx9a.js:25\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp6jbkpx9a.js:25:9)\n    at\
    \ test (/tmp/tmp6jbkpx9a.js:40:22)\n    at Object.<anonymous> (/tmp/tmp6jbkpx9a.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let j: number = 1;\n    let k: number = 0;\n    while\
    \ (i < n) {\n        k = fib[j] + fib[j - 1];\n        if (is_prime(k)) {\n  \
    \          fib.push(k);\n            i++;\n        }\n        j++;\n    }\n  \
    \  return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppkzvt013.js:20\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmppkzvt013.js:20:9)\n    at\
    \ test (/tmp/tmppkzvt013.js:33:22)\n    at Object.<anonymous> (/tmp/tmppkzvt013.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6ao7bpjx.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp6ao7bpjx.js:14:15)\n\
    \    at test (/tmp/tmp6ao7bpjx.js:37:22)\n    at Object.<anonymous> (/tmp/tmp6ao7bpjx.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let k =\
    \ 0;\n    while (k < n) {\n        if (fib[i] === prime[j]) {\n            k++;\n\
    \            i++;\n            j++;\n        } else if (fib[i] < prime[j]) {\n\
    \            i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ fib[i - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp03b_dc6y.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp03b_dc6y.js:14:15)\n\
    \    at test (/tmp/tmp03b_dc6y.js:37:22)\n    at Object.<anonymous> (/tmp/tmp03b_dc6y.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 0;\n    while (fib_nums.length < n) {\n        fib_nums.push(fib_nums[i]\
    \ + fib_nums[i + 1]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmp9yaf8dg7.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9yaf8dg7.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqdwbreq.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpiqdwbreq.js:22:9)\n    at\
    \ test (/tmp/tmpiqdwbreq.js:31:22)\n    at Object.<anonymous> (/tmp/tmpiqdwbreq.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return prime[j - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4fqf2ao_.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp4fqf2ao_.js:14:15)\n\
    \    at test (/tmp/tmp4fqf2ao_.js:35:22)\n    at Object.<anonymous> (/tmp/tmp4fqf2ao_.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268154
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp483ofqql.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp483ofqql.js:14:15)\n\
    \    at test (/tmp/tmp483ofqql.js:34:22)\n    at Object.<anonymous> (/tmp/tmp483ofqql.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppz6992hs.js:19\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmppz6992hs.js:19:9)\n\
    \    at test (/tmp/tmppz6992hs.js:30:22)\n    at Object.<anonymous> (/tmp/tmppz6992hs.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count += 1;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0qiadlmt.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp0qiadlmt.js:19:9)\n    at\
    \ test (/tmp/tmp0qiadlmt.js:31:22)\n    at Object.<anonymous> (/tmp/tmp0qiadlmt.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (i < fib.length) {\n        if (is_prime(fib[i])) {\n\
    \            return fib[i];\n        }\n        i++;\n    }\n    return 0;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvx3mpod9.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpvx3mpod9.js:14:15)\n\
    \    at test (/tmp/tmpvx3mpod9.js:27:22)\n    at Object.<anonymous> (/tmp/tmpvx3mpod9.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuqlwjlex.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpuqlwjlex.js:22:9)\n    at\
    \ test (/tmp/tmpuqlwjlex.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuqlwjlex.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < fib.length; i++) {\n        for (let j = 0; j < prime.length; j++) {\n   \
    \         if (fib[i] === prime[j]) {\n                result = fib[i];\n     \
    \       }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphwxobg4q.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmphwxobg4q.js:14:15)\n\
    \    at test (/tmp/tmphwxobg4q.js:29:22)\n    at Object.<anonymous> (/tmp/tmphwxobg4q.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let count: number = 0;\n    let i: number = 1;\n    while (count < n) {\n  \
    \      fib = fibonacci(i);\n        if (is_prime(fib)) {\n            count++;\n\
    \        }\n        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbxv_hkla.js:18\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmpbxv_hkla.js:18:9)\n    at\
    \ test (/tmp/tmpbxv_hkla.js:29:22)\n    at Object.<anonymous> (/tmp/tmpbxv_hkla.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let i = 1;\n  let j = 1;\n \
    \ let k = 2;\n  let count = 1;\n  while (count < n) {\n    if (is_prime(k)) {\n\
    \      count++;\n    }\n    i = j;\n    j = k;\n    k = i + j;\n  }\n  return\
    \ k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplp6ow6l1.js:19\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmplp6ow6l1.js:19:9)\n    at\
    \ test (/tmp/tmplp6ow6l1.js:32:22)\n    at Object.<anonymous> (/tmp/tmplp6ow6l1.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5];\n    let i: number = 3;\n    while (fib_numbers.length < n) {\n\
    \        let fib_number: number = fib_numbers[i - 1] + fib_numbers[i - 2];\n \
    \       if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \        }\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpauldfcwb.js:18\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpauldfcwb.js:18:9)\n\
    \    at test (/tmp/tmpauldfcwb.js:31:22)\n    at Object.<anonymous> (/tmp/tmpauldfcwb.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9_0vvh36.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp9_0vvh36.js:14:15)\n\
    \    at test (/tmp/tmp9_0vvh36.js:23:22)\n    at Object.<anonymous> (/tmp/tmp9_0vvh36.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpo8dfjyvc.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo8dfjyvc.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268152
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3,\
    \ 5, 13, 89];\n    let i: number = 0;\n    while (i < n) {\n        fib.push(fib[i]\
    \ + fib[i + 1]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n233\n    at test (/tmp/tmpospzzsyq.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpospzzsyq.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 233,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let i: number\
    \ = 1;\n    while (i < n) {\n        fib_num = fib_num_1 + fib_num_2;\n      \
    \  fib_num_2 = fib_num_1;\n        fib_num_1 = fib_num;\n        if (is_prime(fib_num))\
    \ {\n            i++;\n        }\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmp1m5sxnj1.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1m5sxnj1.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = [2, 3];\n    let\
    \ i = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n  \
    \      i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpfbt4lqng.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfbt4lqng.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpumagr1vp.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumagr1vp.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 1;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let count: number = 0;\n    while (count < n) {\n        if (is_prime(fib_num))\
    \ {\n            count++;\n        }\n        fib_num_prev_prev = fib_num_prev;\n\
    \        fib_num_prev = fib_num;\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \    }\n    return fib_num_prev;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo9g1hde8.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpo9g1hde8.js:19:9)\n\
    \    at test (/tmp/tmpo9g1hde8.js:31:22)\n    at Object.<anonymous> (/tmp/tmpo9g1hde8.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpztpmwbd2.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpztpmwbd2.js:22:9)\n    at\
    \ test (/tmp/tmpztpmwbd2.js:31:22)\n    at Object.<anonymous> (/tmp/tmpztpmwbd2.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib =\
    \ 0;\n    let prime = 0;\n    let count = 0;\n    while (count < n) {\n      \
    \  fib = fibonacci(i);\n        if (is_prime(fib)) {\n            count += 1;\n\
    \            prime = fib;\n        }\n        i += 1;\n    }\n    return prime;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmph1rl67uy.js:19\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmph1rl67uy.js:19:9)\n    at\
    \ test (/tmp/tmph1rl67uy.js:31:22)\n    at Object.<anonymous> (/tmp/tmph1rl67uy.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < fib.length; i++) {\n        for (let j = 0; j < prime.length; j++) {\n   \
    \         if (fib[i] === prime[j]) {\n                result = fib[i];\n     \
    \       }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphwxobg4q.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmphwxobg4q.js:14:15)\n\
    \    at test (/tmp/tmphwxobg4q.js:29:22)\n    at Object.<anonymous> (/tmp/tmphwxobg4q.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    while (fib !== prime) {\n        if (fib\
    \ > prime) {\n            prime = prime_number(n);\n        } else {\n       \
    \     fib = fibonacci(n);\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpphyjo9p3.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpphyjo9p3.js:14:15)\n\
    \    at test (/tmp/tmpphyjo9p3.js:29:22)\n    at Object.<anonymous> (/tmp/tmpphyjo9p3.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     }\n        if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuqk6qbel.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpuqk6qbel.js:14:15)\n\
    \    at test (/tmp/tmpuqk6qbel.js:34:22)\n    at Object.<anonymous> (/tmp/tmpuqk6qbel.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n += 1;\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfw96c7vm.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpfw96c7vm.js:14:15)\n\
    \    at test (/tmp/tmpfw96c7vm.js:24:22)\n    at Object.<anonymous> (/tmp/tmpfw96c7vm.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 2;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2zvhduws.js:17\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmp2zvhduws.js:17:9)\n    at\
    \ test (/tmp/tmp2zvhduws.js:28:22)\n    at Object.<anonymous> (/tmp/tmp2zvhduws.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n <= fib_numbers.length) {\n        return fib_numbers[n\
    \ - 1];\n    }\n    let i: number = fib_numbers.length;\n    let fib_number: number\
    \ = fib_numbers[i - 1];\n    while (i < n) {\n        fib_number = fib_number\
    \ + fib_numbers[i - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i = i + 1;\n        }\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqoj1rg6w.js:22\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpqoj1rg6w.js:22:9)\n\
    \    at test (/tmp/tmpqoj1rg6w.js:37:22)\n    at Object.<anonymous> (/tmp/tmpqoj1rg6w.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    let fib_num: number = 0;\n    while (i < n)\
    \ {\n        fib_num = fib_nums[i - 1] + fib_nums[i - 2];\n        if (is_prime(fib_num))\
    \ {\n            fib_nums.push(fib_num);\n            i += 1;\n        }\n   \
    \ }\n    return fib_nums[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplkw0t7lh.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmplkw0t7lh.js:19:9)\n\
    \    at test (/tmp/tmplkw0t7lh.js:31:22)\n    at Object.<anonymous> (/tmp/tmplkw0t7lh.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fib(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i = 0; i\
    \ < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i])) {\n    \
    \        prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpsjlfd_ue.js:14\n    var fib_numbers = fib(n);\n               \
    \       ^\n\nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpsjlfd_ue.js:14:23)\n\
    \    at test (/tmp/tmpsjlfd_ue.js:26:22)\n    at Object.<anonymous> (/tmp/tmpsjlfd_ue.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 2
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_prev: number = 0;\n\
    \    let prime_fib_num_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev: number = 0;\n    let\
    \ prime_fib_num_prev_prev_prev_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpc2rquej2.ts(53,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (i < fib.length) {\n        if (is_prime(fib[i])) {\n\
    \            return fib[i];\n        }\n        i++;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpt_2tg11s.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpt_2tg11s.js:14:15)\n\
    \    at test (/tmp/tmpt_2tg11s.js:27:22)\n    at Object.<anonymous> (/tmp/tmpt_2tg11s.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp95douwg4.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp95douwg4.js:19:9)\n\
    \    at test (/tmp/tmp95douwg4.js:31:22)\n    at Object.<anonymous> (/tmp/tmp95douwg4.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    while (i < n) {\n        fib_num = fib_num_prev +\
    \ fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            i++;\n   \
    \     }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpat_h178c.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpat_h178c.js:20:9)\n\
    \    at test (/tmp/tmpat_h178c.js:31:22)\n    at Object.<anonymous> (/tmp/tmpat_h178c.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 0;\n    while (fib_nums.length < n) {\n        fib_nums.push(fib_nums[i]\
    \ + fib_nums[i + 1]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpjm0c_gk2.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjm0c_gk2.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let prime_fib_list: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n <= prime_fib_list.length) {\n        return\
    \ prime_fib_list[n - 1];\n    }\n    let i: number = prime_fib_list.length;\n\
    \    let fib_n_1: number = prime_fib_list[i - 1];\n    let fib_n_2: number = prime_fib_list[i\
    \ - 2];\n    let fib_n: number = fib_n_1 + fib_n_2;\n    while (i < n) {\n   \
    \     if (is_prime(fib_n)) {\n            prime_fib_list.push(fib_n);\n      \
    \      i += 1;\n        }\n        fib_n_2 = fib_n_1;\n        fib_n_1 = fib_n;\n\
    \        fib_n = fib_n_1 + fib_n_2;\n    }\n    return fib_n;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpon_h75dy.js:23\n        if (is_prime(fib_n)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpon_h75dy.js:23:9)\n    at\
    \ test (/tmp/tmpon_h75dy.js:41:22)\n    at Object.<anonymous> (/tmp/tmpon_h75dy.js:47:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpopz07bkv.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpopz07bkv.js:14:15)\n\
    \    at test (/tmp/tmpopz07bkv.js:21:22)\n    at Object.<anonymous> (/tmp/tmpopz07bkv.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 2;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpqc2ofd21.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqc2ofd21.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzrymi3g6.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpzrymi3g6.js:22:9)\n    at\
    \ test (/tmp/tmpzrymi3g6.js:31:22)\n    at Object.<anonymous> (/tmp/tmpzrymi3g6.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibonacci = [2, 3];\n\
    \    let prime_fibonacci = [2, 3];\n    let i = 2;\n    while (prime_fibonacci.length\
    \ < n) {\n        fibonacci.push(fibonacci[i - 1] + fibonacci[i - 2]);\n     \
    \   if (is_prime(fibonacci[i])) {\n            prime_fibonacci.push(fibonacci[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fibonacci[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpgmtt92l3.js:19\n        if (is_prime(fibonacci[i])) {\n       \
    \ ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpgmtt92l3.js:19:9)\n\
    \    at test (/tmp/tmpgmtt92l3.js:31:22)\n    at Object.<anonymous> (/tmp/tmpgmtt92l3.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[prime.length - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2k4v88_a.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp2k4v88_a.js:14:15)\n\
    \    at test (/tmp/tmp2k4v88_a.js:21:22)\n    at Object.<anonymous> (/tmp/tmp2k4v88_a.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib_list: number[] = [2,\
    \ 3];\n  let i: number = 2;\n  while (i < n) {\n    fib_list.push(fib_list[i -\
    \ 1] + fib_list[i - 2]);\n    i++;\n  }\n  return fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpfdprsldw.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfdprsldw.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3,\
    \ 5, 13, 89];\n    if (n <= fib.length) {\n        return fib[n - 1];\n    } else\
    \ {\n        let i: number = fib.length;\n        while (i < n) {\n          \
    \  let next: number = fib[i - 1] + fib[i - 2];\n            if (is_prime(next))\
    \ {\n                fib.push(next);\n                i++;\n            }\n  \
    \      }\n        return fib[n - 1];\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4xb1scmy.js:22\n            if (is_prime(next)) {\n           \
    \ ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp4xb1scmy.js:22:13)\n\
    \    at test (/tmp/tmp4xb1scmy.js:38:22)\n    at Object.<anonymous> (/tmp/tmp4xb1scmy.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let count: number = 0;\n    while (count < n)\
    \ {\n        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev\
    \ = temp;\n        if (is_prime(fib)) {\n            count++;\n        }\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4onqr5tl.js:21\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp4onqr5tl.js:21:9)\n    at\
    \ test (/tmp/tmp4onqr5tl.js:30:22)\n    at Object.<anonymous> (/tmp/tmp4onqr5tl.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let result: number = 0;\n    while (i\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        i++;\n    }\n    for (let j: number = 0; j < fib_numbers.length; j++)\
    \ {\n        if (is_prime(fib_numbers[j])) {\n            result = fib_numbers[j];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpd9yaawzf.js:22\n        if (is_prime(fib_numbers[j])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpd9yaawzf.js:22:9)\n\
    \    at test (/tmp/tmpd9yaawzf.js:31:22)\n    at Object.<anonymous> (/tmp/tmpd9yaawzf.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpr9mfh7xl.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr9mfh7xl.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < n; i++) {\n        if (fib[i] === prime[i]) {\n            result = fib[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfepwg5m7.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpfepwg5m7.js:14:15)\n\
    \    at test (/tmp/tmpfepwg5m7.js:27:22)\n    at Object.<anonymous> (/tmp/tmpfepwg5m7.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcqizk78v.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpcqizk78v.js:19:9)\n    at\
    \ test (/tmp/tmpcqizk78v.js:31:22)\n    at Object.<anonymous> (/tmp/tmpcqizk78v.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib = fibonacci(n);\n  let\
    \ prime = prime_nth(n);\n  if (fib === prime) {\n    return fib;\n  } else {\n\
    \    return prime_fib(n + 1);\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp99ap5eow.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp99ap5eow.js:14:15)\n\
    \    at test (/tmp/tmp99ap5eow.js:26:22)\n    at Object.<anonymous> (/tmp/tmp99ap5eow.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 2;\n    let b = 3;\n\
    \    let c = 5;\n    let i = 3;\n    while (i < n) {\n        a = b;\n       \
    \ b = c;\n        c = a + b;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n2\n    at test (/tmp/tmpga78qjdw.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpga78qjdw.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nkw48yp.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp7nkw48yp.js:14:15)\n\
    \    at test (/tmp/tmp7nkw48yp.js:34:22)\n    at Object.<anonymous> (/tmp/tmp7nkw48yp.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpumagr1vp.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumagr1vp.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzrymi3g6.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpzrymi3g6.js:22:9)\n    at\
    \ test (/tmp/tmpzrymi3g6.js:31:22)\n    at Object.<anonymous> (/tmp/tmpzrymi3g6.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmk20u2f8.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpmk20u2f8.js:19:9)\n\
    \    at test (/tmp/tmpmk20u2f8.js:31:22)\n    at Object.<anonymous> (/tmp/tmpmk20u2f8.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9_0vvh36.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp9_0vvh36.js:14:15)\n\
    \    at test (/tmp/tmp9_0vvh36.js:23:22)\n    at Object.<anonymous> (/tmp/tmp9_0vvh36.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqf4nksec.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpqf4nksec.js:19:9)\n\
    \    at test (/tmp/tmpqf4nksec.js:31:22)\n    at Object.<anonymous> (/tmp/tmpqf4nksec.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let prime_fib = 2;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (is_prime(fib)) {\n            prime_fib = fib;\n            i++;\n\
    \        }\n    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4vkajkij.js:18\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmp4vkajkij.js:18:9)\n    at\
    \ test (/tmp/tmp4vkajkij.js:30:22)\n    at Object.<anonymous> (/tmp/tmp4vkajkij.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9_0vvh36.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp9_0vvh36.js:14:15)\n\
    \    at test (/tmp/tmp9_0vvh36.js:23:22)\n    at Object.<anonymous> (/tmp/tmp9_0vvh36.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268155
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp95douwg4.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp95douwg4.js:19:9)\n\
    \    at test (/tmp/tmp95douwg4.js:31:22)\n    at Object.<anonymous> (/tmp/tmp95douwg4.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fib(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i = 0; i\
    \ < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i])) {\n    \
    \        prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpsjlfd_ue.js:14\n    var fib_numbers = fib(n);\n               \
    \       ^\n\nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpsjlfd_ue.js:14:23)\n\
    \    at test (/tmp/tmpsjlfd_ue.js:26:22)\n    at Object.<anonymous> (/tmp/tmpsjlfd_ue.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fibonacci(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i:\
    \ number = 0; i < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i]))\
    \ {\n            prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n \
    \   return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1_07idpt.js:14\n    var fib_numbers = fibonacci(n);\n         \
    \             ^\n\nReferenceError: fibonacci is not defined\n    at prime_fib\
    \ (/tmp/tmp1_07idpt.js:14:23)\n    at test (/tmp/tmp1_07idpt.js:26:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp1_07idpt.js:37:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpztpmwbd2.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpztpmwbd2.js:22:9)\n    at\
    \ test (/tmp/tmpztpmwbd2.js:31:22)\n    at Object.<anonymous> (/tmp/tmpztpmwbd2.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let j: number = 0;\n    while (i < n) {\n       \
    \ fib.push(fib[j] + fib[j + 1]);\n        if (is_prime(fib[i])) {\n          \
    \  i++;\n        }\n        j++;\n    }\n    return fib[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfao3ik2b.js:19\n        if (is_prime(fib[i])) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpfao3ik2b.js:19:9)\n\
    \    at test (/tmp/tmpfao3ik2b.js:31:22)\n    at Object.<anonymous> (/tmp/tmpfao3ik2b.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5, 13, 89];\n    let i: number = 0;\n    while (i < n) {\n        fibs.push(fibs[i]\
    \ + fibs[i + 1]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n233\n    at test (/tmp/tmpoe9kxvyx.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoe9kxvyx.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 233,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp95douwg4.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp95douwg4.js:19:9)\n\
    \    at test (/tmp/tmp95douwg4.js:31:22)\n    at Object.<anonymous> (/tmp/tmp95douwg4.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    while (i < n) {\n        let fib_next = fib +\
    \ fib_prev;\n        fib_prev = fib;\n        fib = fib_next;\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpeer_kb_8.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpeer_kb_8.js:41:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    let fib_num: number = 0;\n    while (i <= n)\
    \ {\n        fib_num = fib_list[i - 1] + fib_list[i - 2];\n        if (is_prime(fib_num))\
    \ {\n            fib_list.push(fib_num);\n            i += 1;\n        }\n   \
    \ }\n    return fib_list[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuljsr4qj.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpuljsr4qj.js:19:9)\n\
    \    at test (/tmp/tmpuljsr4qj.js:30:22)\n    at Object.<anonymous> (/tmp/tmpuljsr4qj.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n) {\n        if (fib[i] === prime[j]) {\n            result\
    \ = fib[i];\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpp0kwku1e.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpp0kwku1e.js:14:15)\n\
    \    at test (/tmp/tmpp0kwku1e.js:37:22)\n    at Object.<anonymous> (/tmp/tmpp0kwku1e.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let prime_fib_nums: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1]\
    \ + fib_nums[i - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpci_qa4_x.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpci_qa4_x.js:19:9)\n\
    \    at test (/tmp/tmpci_qa4_x.js:31:22)\n    at Object.<anonymous> (/tmp/tmpci_qa4_x.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    let prime_fib_nums: number[]\
    \ = [];\n    for (let num of fib_nums) {\n        if (is_prime(num)) {\n     \
    \       prime_fib_nums.push(num);\n        }\n    }\n    return prime_fib_nums[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo001nad8.js:23\n        if (is_prime(num)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpo001nad8.js:23:9)\n    at\
    \ test (/tmp/tmpo001nad8.js:32:22)\n    at Object.<anonymous> (/tmp/tmpo001nad8.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let count = 0;\n    while (count < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n           \
    \ count++;\n        }\n    }\n    return c;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqglx4bf2.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpqglx4bf2.js:22:9)\n    at\
    \ test (/tmp/tmpqglx4bf2.js:31:22)\n    at Object.<anonymous> (/tmp/tmpqglx4bf2.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 2;\n    let fib_prev = 1;\n    while (i < n) {\n        let temp = fib;\n  \
    \      fib = fib + fib_prev;\n        fib_prev = temp;\n        if (is_prime(fib))\
    \ {\n            i = i + 1;\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw2s1_leb.js:21\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpw2s1_leb.js:21:9)\n    at\
    \ test (/tmp/tmpw2s1_leb.js:31:22)\n    at Object.<anonymous> (/tmp/tmpw2s1_leb.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let prime_fib = 0;\n    while (i <= n) {\n        if (is_prime(fib))\
    \ {\n            prime_fib = fib;\n            i++;\n        }\n        fib =\
    \ fibonacci(fib);\n    }\n    return prime_fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvnplhfvl.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpvnplhfvl.js:18:9)\n    at\
    \ test (/tmp/tmpvnplhfvl.js:29:22)\n    at Object.<anonymous> (/tmp/tmpvnplhfvl.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 1;\n    while (i < n) {\n        fibs.push(fibs[i] + fibs[i\
    \ - 1]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpjpq74huz.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjpq74huz.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    while (i < n) {\n        fib_num = fib_num_prev +\
    \ fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            i++;\n   \
    \     }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpat_h178c.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpat_h178c.js:20:9)\n\
    \    at test (/tmp/tmpat_h178c.js:31:22)\n    at Object.<anonymous> (/tmp/tmpat_h178c.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268158
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpsgj1ka1s.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpsgj1ka1s.js:14:15)\n\
    \    at test (/tmp/tmpsgj1ka1s.js:26:22)\n    at Object.<anonymous> (/tmp/tmpsgj1ka1s.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpumagr1vp.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumagr1vp.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268157
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 2;\n    let i = 3;\n    while (i <= n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (is_prime(c)) {\n            i += 1;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmppfp9rf3m.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmppfp9rf3m.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268161
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_prime_count = 0;\n\
    \    let fib_num = 0;\n    let fib_num_prev = 1;\n    let fib_num_prev_prev =\
    \ 0;\n    while (fib_prime_count < n) {\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \        if (is_prime(fib_num)) {\n            fib_prime_count += 1;\n       \
    \ }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeomogup3.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpeomogup3.js:20:9)\n\
    \    at test (/tmp/tmpeomogup3.js:31:22)\n    at Object.<anonymous> (/tmp/tmpeomogup3.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpssyii1gb.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpssyii1gb.js:14:19)\n\
    \    at test (/tmp/tmpssyii1gb.js:24:22)\n    at Object.<anonymous> (/tmp/tmpssyii1gb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqf4nksec.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpqf4nksec.js:19:9)\n\
    \    at test (/tmp/tmpqf4nksec.js:31:22)\n    at Object.<anonymous> (/tmp/tmpqf4nksec.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    while\
    \ (i < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n \
    \       }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n\
    \        else {\n            j++;\n        }\n    }\n    return 0;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjlm4et_4.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpjlm4et_4.js:14:15)\n\
    \    at test (/tmp/tmpjlm4et_4.js:34:22)\n    at Object.<anonymous> (/tmp/tmpjlm4et_4.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpqmzfsc7g.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqmzfsc7g.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 1;\n    let count:\
    \ number = 2;\n    while (count < n) {\n        fib = fib_prev + fib_prev_prev;\n\
    \        fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        if (is_prime(fib))\
    \ {\n            count += 1;\n        }\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmplvfhx0ad.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmplvfhx0ad.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        let next: number = fib[i\
    \ - 1] + fib[i - 2];\n        if (is_prime(next)) {\n            fib.push(next);\n\
    \            i++;\n        }\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx8arsy1f.js:18\n        if (is_prime(next)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpx8arsy1f.js:18:9)\n    at\
    \ test (/tmp/tmpx8arsy1f.js:30:22)\n    at Object.<anonymous> (/tmp/tmpx8arsy1f.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuv1yy97s.js:14\n    var fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpuv1yy97s.js:14:19)\n\
    \    at test (/tmp/tmpuv1yy97s.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuv1yy97s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n && j < n) {\n        if (fib[i] === prime[j]) {\n   \
    \         result = fib[i];\n            i++;\n            j++;\n        } else\
    \ if (fib[i] < prime[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplik4vw1s.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmplik4vw1s.js:14:15)\n\
    \    at test (/tmp/tmplik4vw1s.js:37:22)\n    at Object.<anonymous> (/tmp/tmplik4vw1s.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 1;\n    let count = 1;\n    while (count < n) {\n        let temp\
    \ = i + j;\n        i = j;\n        j = temp;\n        if (is_prime(j)) {\n  \
    \          count += 1;\n        }\n    }\n    return j;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpe9g5j3es.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpe9g5j3es.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let count = 0;\n    while (count < n) {\n        if (is_prime(fib))\
    \ {\n            count += 1;\n        }\n        i += 1;\n        fib = fibonacci(i);\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpefkp39mf.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpefkp39mf.js:18:9)\n    at\
    \ test (/tmp/tmpefkp39mf.js:29:22)\n    at Object.<anonymous> (/tmp/tmpefkp39mf.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_prime_count = 0;\n\
    \    let fib_num = 0;\n    let fib_prev = 0;\n    let fib_prev_prev = 0;\n   \
    \ while (fib_prime_count < n) {\n        if (fib_num === 0) {\n            fib_num\
    \ = 1;\n        } else {\n            fib_prev_prev = fib_prev;\n            fib_prev\
    \ = fib_num;\n            fib_num = fib_prev + fib_prev_prev;\n        }\n   \
    \     if (is_prime(fib_num)) {\n            fib_prime_count += 1;\n        }\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpydwxd7kn.js:27\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpydwxd7kn.js:27:9)\n\
    \    at test (/tmp/tmpydwxd7kn.js:36:22)\n    at Object.<anonymous> (/tmp/tmpydwxd7kn.js:47:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpm0_ujqn3.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm0_ujqn3.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzrymi3g6.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpzrymi3g6.js:22:9)\n    at\
    \ test (/tmp/tmpzrymi3g6.js:31:22)\n    at Object.<anonymous> (/tmp/tmpzrymi3g6.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcqizk78v.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpcqizk78v.js:19:9)\n    at\
    \ test (/tmp/tmpcqizk78v.js:31:22)\n    at Object.<anonymous> (/tmp/tmpcqizk78v.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[prime.length - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2k4v88_a.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp2k4v88_a.js:14:15)\n\
    \    at test (/tmp/tmp2k4v88_a.js:21:22)\n    at Object.<anonymous> (/tmp/tmp2k4v88_a.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268160
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_nth(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwuki8yhq.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpwuki8yhq.js:14:15)\n\
    \    at test (/tmp/tmpwuki8yhq.js:26:22)\n    at Object.<anonymous> (/tmp/tmpwuki8yhq.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let i: number\
    \ = 0;\n    while (i < n) {\n        fib = fib_prev + fib_prev_prev;\n       \
    \ if (is_prime(fib)) {\n            i += 1;\n        }\n        fib_prev_prev\
    \ = fib_prev;\n        fib_prev = fib;\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyiq4mlnj.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyiq4mlnj.js:20:9)\n    at\
    \ test (/tmp/tmpyiq4mlnj.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyiq4mlnj.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268164
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib =\
    \ 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpt15nq6fe.js:17\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmpt15nq6fe.js:17:9)\n    at\
    \ test (/tmp/tmpt15nq6fe.js:27:22)\n    at Object.<anonymous> (/tmp/tmpt15nq6fe.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 1;\n    let count = 0;\n    while (count < n) {\n        if (is_prime(j))\
    \ {\n            count++;\n            k = j;\n        }\n        let temp = i;\n\
    \        i = j;\n        j = temp + j;\n    }\n    return k;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdsmjzt_h.js:19\n        if (is_prime(j)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpdsmjzt_h.js:19:9)\n    at\
    \ test (/tmp/tmpdsmjzt_h.js:32:22)\n    at Object.<anonymous> (/tmp/tmpdsmjzt_h.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let fib: number = 0;\n    while (i < n) {\n     \
    \   fib = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n         \
    \   fibs.push(fib);\n            i += 1;\n        }\n    }\n    return fibs[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_bsapl7d.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp_bsapl7d.js:19:9)\n    at\
    \ test (/tmp/tmp_bsapl7d.js:31:22)\n    at Object.<anonymous> (/tmp/tmp_bsapl7d.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpqbm64di4.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqbm64di4.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268164
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 0;\n    let count = 0;\n    while (count < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n           \
    \ count++;\n        }\n    }\n    return c;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpocrlrwqj.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpocrlrwqj.js:22:9)\n    at\
    \ test (/tmp/tmpocrlrwqj.js:31:22)\n    at Object.<anonymous> (/tmp/tmpocrlrwqj.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268164
- exit_code: 2
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_prev: number = 0;\n\
    \    let prime_fib_num_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev:\
    \ number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n\
    \    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let\
    \ r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number\
    \ = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n\
    \    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n   \
    \ let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let\
    \ ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh:\
    \ number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number\
    \ = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number =\
    \ 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n\
    \    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n \
    \   let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n  \
    \  let xx: number = 0;\n    let yy: number = 0;\n   \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpeuwy5zxb.ts(84,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcqizk78v.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpcqizk78v.js:19:9)\n    at\
    \ test (/tmp/tmpcqizk78v.js:31:22)\n    at Object.<anonymous> (/tmp/tmpcqizk78v.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nkw48yp.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp7nkw48yp.js:14:15)\n\
    \    at test (/tmp/tmp7nkw48yp.js:34:22)\n    at Object.<anonymous> (/tmp/tmp7nkw48yp.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268151
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3, 5, 13, 89];\n    if (n <= 5) {\n        return fib_list[n - 1];\n    }\n\
    \    let i: number = 5;\n    let fib: number = fib_list[4];\n    while (i < n)\
    \ {\n        let fib_next: number = fib_list[i - 1] + fib_list[i - 2];\n     \
    \   if (is_prime(fib_next)) {\n            fib_list.push(fib_next);\n        \
    \    i += 1;\n        }\n        fib = fib_next;\n    }\n    return fib;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzxfs4584.js:22\n        if (is_prime(fib_next)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpzxfs4584.js:22:9)\n\
    \    at test (/tmp/tmpzxfs4584.js:38:22)\n    at Object.<anonymous> (/tmp/tmpzxfs4584.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib_nums: number[] = [2,\
    \ 3, 5, 13, 89];\n  if (n > fib_nums.length) {\n    let i: number = fib_nums.length;\n\
    \    while (i < n) {\n      let next_fib: number = fib_nums[i - 1] + fib_nums[i\
    \ - 2];\n      if (is_prime(next_fib)) {\n        fib_nums.push(next_fib);\n \
    \       i += 1;\n      }\n    }\n  }\n  return fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpab3_4jjc.js:19\n            if (is_prime(next_fib)) {\n       \
    \     ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpab3_4jjc.js:19:13)\n\
    \    at test (/tmp/tmpab3_4jjc.js:35:22)\n    at Object.<anonymous> (/tmp/tmpab3_4jjc.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268163
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmpxekisk57.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxekisk57.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptk9tj257.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmptk9tj257.js:14:15)\n\
    \    at test (/tmp/tmptk9tj257.js:24:22)\n    at Object.<anonymous> (/tmp/tmptk9tj257.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268149
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n13\n    at test (/tmp/tmprz3ce9jn.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmprz3ce9jn.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 13,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268148
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let count = 0;\n    let i = 0;\n    while (count < n) {\n        if (is_prime(fib[i]))\
    \ {\n            count++;\n        }\n        i++;\n    }\n    return fib[i -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpz7kxmenk.js:14\n    var fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpz7kxmenk.js:14:15)\n\
    \    at test (/tmp/tmpz7kxmenk.js:28:22)\n    at Object.<anonymous> (/tmp/tmpz7kxmenk.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1660268164
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let fib_prime: number = 0;\n    while (i < n) {\n\
    \        fib.push(fib[i - 1] + fib[i - 2]);\n        if (is_prime(fib[i])) {\n\
    \            fib_prime = fib[i];\n            i++;\n        }\n    }\n    return\
    \ fib_prime;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpieorn1fd.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmpieorn1fd.js:40:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268164
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpwr22_563.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwr22_563.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  stdout: ''
  timestamp: 1660268164

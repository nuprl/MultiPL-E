name: HumanEval_101_words_string
language: pl
prompt: "# You will be given a string of words separated by commas or spaces. Your\
  \ task is\n# to split the string into words and return an array of the words.\n\
  # For example:\n# >>> words_string(\"Hi, my name is John\")\n# [\"Hi\", \"my\",\
  \ \"name\", \"is\", \"John\"]\n# >>> words_string(\"One, two, three, four, five,\
  \ six\")\n# [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nsub words_string\
  \ {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&words_string;\n\
  \        if(eq_deeply($candidate->(\"Hi, my name is John\"),[\"Hi\", \"my\", \"\
  name\", \"is\", \"John\"])) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->(\"One, two, three, four, five, six\"\
  ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Hi, my name\"),[\"Hi\", \"my\", \"name\"])) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"One,, two, three,\
  \ four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
  ])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \"),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  ahmed     , gamal\"),[\"ahmed\", \"gamal\"])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my ($string) = @_;\n    my @words = split(/[\\s,]+/, $string);\n  \
    \  return @words;\n}", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my ($string) = @_;\n    my @words = split /[\\s,]+/, $string;\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split /[\\s,]+/,\
    \ $string;\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my ($string) = @_;\n\
    \    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    return split(/[\\s,]+/, $string);\n\
    }", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split /[\\s,]+/, $string;\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $str\
    \ = shift;\n    my @words = split(/[\\s,]+/, $str);\n    return @words;\n}", "my\
    \ $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/\\s|,/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my ($string) = @_;\n    my @words =\
    \ split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split /[\\s,]+/, $string;\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[, ]+/,\
    \ $string);\n    return @words;\n}", "my ($string) = @_;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split /[\\s,]+/, $string;\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split /[\\s,]+/,\
    \ $string;\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/\\s|,/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split /[\\s,]+/, $string;\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/\\s|,/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my ($str) = @_;\n    my @words = split(/[, ]+/, $str);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split /[\\s,]+/, $string;\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/\\s|,/, $string);\n    return @words;\n}",
  "my ($string) = @_;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split\
    \ /[\\s,]+/, $string;\n    return @words;\n}", "my ($string) = @_;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/\\s|,/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[, ]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my ($string)\
    \ = @_;\n    my @words = split /[\\s,]+/, $string;\n    return @words;\n}", "my\
    \ $string = shift;\n    my @words = split /[, ]+/, $string;\n    return @words;\n\
    }", "my $string = shift;\n    my @array = split(/[\\s,]+/, $string);\n    return\
    \ @array;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my ($string) = @_;\n    my @words =\
    \ split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my ($string)\
    \ = @_;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n}", "my\
    \ $string = shift;\n    my @words = split(/\\s|,/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split /[\\s,]+/, $string;\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split /[\\s,]+/, $string;\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my ($string) = @_;\n    my @words = split /[\\s,]+/, $string;\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split /[\\s,]+/,\
    \ $string;\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my ($string) = @_;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[, ]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my ($string) = @_;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/\\s|,/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $str = shift;\n    my @words = split(/[, ]+/, $str);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my ($string) = @_;\n    my @words = split\
    \ /[\\s,]+/, $string;\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split /[\\s,]+/, $string;\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/\\s|,/, $string);\n    return @words;\n\
    }", "my ($string) = @_;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split /[\\s,]+/, $string;\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[,\
    \ ]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split /[, ]+/, $string;\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[, ]+/, $string);\n    return @words;\n}", "my $string = shift;\n \
    \   my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split /[\\s,]+/, $string;\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my ($string) = @_;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/,\
    \ $string);\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my ($string) = @_;\n    my @words =\
    \ split /[, ]+/, $string;\n    return @words;\n}", "my $string = shift;\n    my\
    \ @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[, ]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[, ]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n\
    \    return @words;\n}", "my ($string) = @_;\n    my @words = split /[\\s,]+/,\
    \ $string;\n    return @words;\n}", "my $string = shift;\n    my @words = split(/[\\\
    s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n    my @words\
    \ = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string = shift;\n\
    \    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}", "my $string\
    \ = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n}",
  "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return @words;\n\
    }", "my $string = shift;\n    my @words = split(/[\\s,]+/, $string);\n    return\
    \ @words;\n}", "my $string = shift;\n    my @words = split(/\\s|,/, $string);\n\
    \    return @words;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

language: pl
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array_ref) = @_;\n   \
    \ my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3sv9lr1s.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / @$array;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp36xbcgv2.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array) = @_;\n    my $mean\
    \ = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / @$array;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpl03zfqip.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    foreach my $x (@$input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpg2fog7ga.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array_ref) = @_;\n   \
    \ my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3sv9lr1s.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array) = @_;\n    my $mean\
    \ = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp4e5z9fuk.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($data) = @_;\n    my $mean\
    \ = mean($data);\n    my $sum = 0;\n    foreach my $x (@$data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$data);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpij74gioy.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($self, $data) = @_;\n \
    \   my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach my $x (@$data)\
    \ {\n        $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$data);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpjzm5pu7w.pl
    line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $deviations = [];\n   \
    \ foreach my $x (@$data) {\n        push @$deviations, abs($x - $mean);\n    }\n\
    \    return $self->mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpxz7ib3ja.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($numbers) = @_;\n    my\
    \ $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpv17j2xvq.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($numbers) = @_;\n    my\
    \ $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpv17j2xvq.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ @$data;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpzf5x4er_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array_ref\
    \ = shift;\n    my $mean = $self->mean($array_ref);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array_ref) {\n        $sum += abs($element - $mean);\n    }\n\
    \    return $sum / scalar(@$array_ref);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpzx1i7fly.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @data = @_;\n    my $mean\
    \ = mean(@data);\n    my $deviation = 0;\n    foreach my $x (@data) {\n      \
    \  $deviation += abs($x - $mean);\n    }\n    return $deviation / scalar(@data);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa15nyuli.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my @input\
    \ = @_;\n    my $mean = $self->mean(@input);\n    my $sum = 0;\n    foreach my\
    \ $x (@input) {\n        $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpkdc897as.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    foreach my $x (@$input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpg2fog7ga.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $deviations = [];\n    foreach my $element\
    \ (@$array_ref) {\n        push @$deviations, abs($element - $mean);\n    }\n\
    \    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpas_h45nl.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $x (@$array) {\n        $sum += abs($x - $mean);\n    }\n    return $sum\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp7jixu_0v.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / @input;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n     \
    \   if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp_q_7da1p.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $value (@$data) {\n        $sum += abs($value - $mean);\n    }\n    return\
    \ $sum / scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp5_aob8ss.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array) = @_;\n    my $mean\
    \ = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n   \
    \     $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpwb6felv3.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($self, $data) = @_;\n \
    \   my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach my $x (@$data)\
    \ {\n        $sum += abs($x - $mean);\n    }\n    return $sum / @$data;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp6rvct7if.pl
    line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $numbers = shift;\n    my\
    \ $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpxd3aghyz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $value (@$data) {\n        $sum += abs($value - $mean);\n    }\n    return\
    \ $sum / scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp5_aob8ss.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @data = @_;\n    my $mean\
    \ = mean(@data);\n    my $sum = 0;\n    foreach my $x (@data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@data);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp9fxva9pd.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $val (@$data) {\n        $sum += abs($val - $mean);\n    }\n    return $sum\
    \ / scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp8qu07eoe.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array_ref) = @_;\n   \
    \ my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3sv9lr1s.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    foreach my $x (@$input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpg2fog7ga.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $deviation = 0;\n    foreach\
    \ my $element (@$data) {\n        $deviation += abs($element - $mean);\n    }\n\
    \    return $deviation / scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpku91i6ju.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $value (@$array) {\n\
    \        $sum += abs($value - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmph2j5di8a.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @data = @_;\n    my $mean\
    \ = mean(@data);\n    my $sum = 0;\n    foreach my $x (@data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / @data;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n     \
    \   if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpgxdy9vkc.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @array = @_;\n    my $mean\
    \ = mean(@array);\n    my $sum = 0;\n    foreach my $element (@array) {\n    \
    \    $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1kp5segr.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($data) = @_;\n    my $mean\
    \ = mean($data);\n    my $sum = 0;\n    foreach my $x (@$data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$data);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpij74gioy.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array_ref\
    \ = shift;\n    my $mean = $self->mean($array_ref);\n    my $sum = 0;\n    foreach\
    \ my $value (@$array_ref) {\n        $sum += abs($value - $mean);\n    }\n   \
    \ return $sum / scalar(@$array_ref);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmppu629d2k.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    for my $n (@numbers) {\n        $sum\
    \ += abs($n - $mean);\n    }\n    return $sum / scalar(@numbers);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpwtkpkz4i.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array_ref\
    \ = shift;\n    my $mean = $self->mean($array_ref);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array_ref) {\n        $sum += abs($element - $mean);\n    }\n\
    \    return $sum / scalar(@$array_ref);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpzx1i7fly.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $n (@numbers) {\n      \
    \  $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@numbers);\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp5ik_1a8j.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($data) = @_;\n    my $mean\
    \ = mean($data);\n    my $sum = 0;\n    foreach my $x (@$data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$data);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpij74gioy.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($data) = @_;\n    my $mean\
    \ = mean($data);\n    my $sum = 0;\n    foreach my $x (@$data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / @$data;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n     \
    \   if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp_um7066v.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $x (@$array) {\n        $sum += abs($x - $mean);\n    }\n    return $sum\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp7jixu_0v.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($self, $input) = @_;\n\
    \    my $mean = $self->mean($input);\n    my $sum = 0;\n    foreach my $x (@$input)\
    \ {\n        $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpeknb9t8a.pl
    line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array) = @_;\n    my $mean\
    \ = mean($array);\n    my $sum = 0;\n    foreach my $value (@$array) {\n     \
    \   $sum += abs($value - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0xc4eyz7.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @array = @_;\n    my $mean\
    \ = mean(@array);\n    my $sum = 0;\n    foreach my $element (@array) {\n    \
    \    $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1kp5segr.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    foreach my $x (@$input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpg2fog7ga.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($self, $data) = @_;\n \
    \   my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach my $x (@$data)\
    \ {\n        $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$data);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpjzm5pu7w.pl
    line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @array = @_;\n    my $mean\
    \ = mean(@array);\n    my $sum = 0;\n    foreach my $element (@array) {\n    \
    \    $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1kp5segr.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $num (@$array) {\n        $sum += abs($num - $mean);\n    }\n    return $sum\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp6zt963xz.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array_ref = shift;\n  \
    \  my $mean = mean($array_ref);\n    my $sum = 0;\n    foreach my $element (@$array_ref)\
    \ {\n        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array_ref);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpnmpw7dwz.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @data = @_;\n    my $mean\
    \ = mean(@data);\n    my $sum = 0;\n    foreach my $x (@data) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@data);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp9fxva9pd.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    for my $x (@$input) {\n        $sum +=\
    \ abs($x - $mean);\n    }\n    return $sum / @$input;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n       \
    \ if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpinxzro97.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array_ref) = @_;\n   \
    \ my $mean = mean($array_ref);\n    my $deviation = 0;\n    foreach my $element\
    \ (@$array_ref) {\n        $deviation += abs($element - $mean);\n    }\n    return\
    \ $deviation / scalar(@$array_ref);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpsh00buty.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $mad = 0;\n    foreach\
    \ my $x (@$data) {\n        $mad += abs($x - $mean);\n    }\n    return $mad /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp_o9r_av6.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($self, $input) = @_;\n\
    \    my $mean = $self->mean($input);\n    my $sum = 0;\n    foreach my $element\
    \ (@$input) {\n        $sum += abs($element - $mean);\n    }\n    return $sum\
    \ / scalar(@$input);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpoi1gn8lc.pl
    line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $element (@$array) {\n        $sum += abs($element - $mean);\n    }\n   \
    \ return $sum / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpvbauvl9b.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my @data\
    \ = @_;\n    my $mean = $self->mean(@data);\n    my $sum = 0;\n    foreach my\
    \ $x (@data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@data);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpayi7_hq8.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($array) = @_;\n    my $mean\
    \ = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n   \
    \     $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpwb6felv3.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $x (@$array) {\n        $sum += abs($x - $mean);\n    }\n    return $sum\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp7jixu_0v.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input_array) = @_;\n \
    \   my $mean = mean($input_array);\n    my $sum = 0;\n    foreach my $element\
    \ (@$input_array) {\n        $sum += abs($element - $mean);\n    }\n    return\
    \ $sum / scalar(@$input_array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpdvexu57h.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $value (@$array) {\n\
    \        $sum += abs($value - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmph2j5di8a.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my ($input) = @_;\n    my $mean\
    \ = mean($input);\n    my $sum = 0;\n    foreach my $x (@$input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@$input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpg2fog7ga.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $array\
    \ = shift;\n    my $mean = $self->mean($array);\n    my $sum = 0;\n    foreach\
    \ my $x (@$array) {\n        $sum += abs($x - $mean);\n    }\n    return $sum\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmp7jixu_0v.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $deviation = 0;\n    foreach\
    \ my $element (@$data) {\n        $deviation += abs($element - $mean);\n    }\n\
    \    return $deviation / scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpku91i6ju.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @array = @_;\n    my $mean\
    \ = mean(@array);\n    my $sum = 0;\n    foreach my $element (@array) {\n    \
    \    $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1kp5segr.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $value (@input) {\n      \
    \  $sum += abs($value - $mean);\n    }\n    return $sum / scalar(@input);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp37ffl2j0.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $x (@$array) {\n   \
    \     $sum += abs($x - $mean);\n    }\n    return $sum / scalar(@$array);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpyfl2novw.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @array = @_;\n    my $mean\
    \ = mean(@array);\n    my $sum = 0;\n    foreach my $x (@array) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@array);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpr1zxmskl.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum  = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpftj5hyms.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $sum = 0;\n    foreach my $element (@$array) {\n\
    \        $sum += abs($element - $mean);\n    }\n    return $sum / scalar(@$array);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbaejutm0.pl line 10.

    '
  stdout: ''
  timestamp: 1660227702
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $array = shift;\n    my\
    \ $mean = mean($array);\n    my $deviation = 0;\n    foreach my $element (@$array)\
    \ {\n        $deviation += abs($element - $mean);\n    }\n    return $deviation\
    \ / scalar(@$array);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0nom2smg.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $sum = 0;\n    foreach my $number (@numbers) {\n \
    \       $sum += abs($number - $mean);\n    }\n    return $sum / scalar(@numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpevvt4zgk.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @numbers = @_;\n    my $mean\
    \ = mean(@numbers);\n    my $deviation = 0;\n    foreach my $number (@numbers)\
    \ {\n        $deviation += abs($number - $mean);\n    }\n    return $deviation\
    \ / scalar(@numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpwfvi72mp.pl line 10.

    '
  stdout: ''
  timestamp: 1660232650
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my $self = shift;\n    my $data\
    \ = shift;\n    my $mean = $self->mean($data);\n    my $sum = 0;\n    foreach\
    \ my $x (@$data) {\n        $sum += abs($x - $mean);\n    }\n    return $sum /\
    \ scalar(@$data);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "mean" on unblessed reference at /tmp/tmpsg6kwqx_.pl
    line 11.

    '
  stdout: ''
  timestamp: 1660227701
- exit_code: 255
  program: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0, 2.0, 3.0,\
    \ 4.0])\n# 1.0\nsub mean_absolute_deviation {\n    my @input = @_;\n    my $mean\
    \ = mean(@input);\n    my $sum = 0;\n    foreach my $x (@input) {\n        $sum\
    \ += abs($x - $mean);\n    }\n    return $sum / scalar(@input);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjs69v05x.pl line 10.

    '
  stdout: ''
  timestamp: 1660227701

language: pl
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 2;\n        $n = int($n\
    \ / 2);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 255
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = dec2bin($N);\n    my $sum = 0;\n    for my $digit (split //, $binary)\
    \ {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::dec2bin called at /tmp/tmplhio2a0m.pl line
    16.

    '
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $i (split //, $bin)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $digit (split\
    \ //, $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    while ($bin =~ /(\\d)/g)\
    \ {\n        $sum += $1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $i (0..length($bin)-1)\
    \ {\n        $sum += substr($bin, $i, 1);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($bin)-1)\
    \ {\n        $sum += substr($bin, $i, 1);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split(//, $bin)) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $bin)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $i (0..length($bin)-1)\
    \ {\n        $sum += substr($bin, $i, 1);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $result = \"\";\n    while ($N > 0) {\n        $result = ($N % 2) . $result;\n\
    \        $N = int($N / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $N);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $d (split //, $bin)\
    \ {\n        $sum += $d;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($binary)-1)\
    \ {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n \
    \       exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    return\
    \ unpack(\"B*\", pack(\"N\", $n));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $result = '';\n    while ($n) {\n        $result = ($n % 2) . $result;\n   \
    \     $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split(//, $binary))\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (split //, $binary)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    return\
    \ sprintf(\"%b\", $n);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    return\
    \ unpack(\"B*\", pack(\"N\", $n));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($binary)-1)\
    \ {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n \
    \       exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split(//, $binary))\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    return\
    \ unpack(\"B*\", pack(\"N\", $n));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $c (split //, $bin)\
    \ {\n        $sum += $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($bin)-1)\
    \ {\n        $sum += substr($bin, $i, 1);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $d (@digits) {\n        $sum += $d;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
    \        if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    return\
    \ sprintf(\"%b\", $N);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $bin)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = '';\n    while ($n > 0) {\n        $sum += $n %\
    \ 2;\n        $n = int($n / 2);\n        $binary = $sum . $binary;\n    }\n  \
    \  return $binary;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    return\
    \ sprintf(\"%b\", $n);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($binary)-1)\
    \ {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n \
    \       exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0 .. length($binary)\
    \ - 1) {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n    \
    \    if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $c (split //, $bin)\
    \ {\n        $sum += $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    my @array = split(//,\
    \ $binary);\n    foreach my $i (@array) {\n        $sum += $i;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
    \        if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    return\
    \ sprintf(\"%b\", $n);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $char (split\
    \ //, $binary) {\n        $sum += $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (split //, $bin)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (split //, $bin)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $i (0..length($bin)-1)\
    \ {\n        $sum += substr($bin, $i, 1);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($binary)-1)\
    \ {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n \
    \       exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    while ($binary =~ /(\\\
    d)/g) {\n        $sum += $1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split(//, $bin)) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $sum = 0;\n    my $binary = '';\n    while ($N > 0) {\n        $sum += $N %\
    \ 2;\n        $N = int($N / 2);\n        $binary = $sum . $binary;\n    }\n  \
    \  return $binary;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (0..length($binary)-1)\
    \ {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n \
    \       exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    return\
    \ unpack(\"B*\", pack(\"N\", $n));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $s = \"\";\n    while ($n > 0) {\n        $s = ($n % 2) . $s;\n        $n =\
    \ int($n / 2);\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $n);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 2;\n        $n = int($n\
    \ / 2);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 2;\n        $n = int($n\
    \ / 2);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    while ($binary) {\n  \
    \      $sum += chop($binary);\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for (split(//, $binary))\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $c (split //, $bin)\
    \ {\n        $sum += $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $bin);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    return $binary;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    foreach my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $N);\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for (my $i = 0; $i < length($binary);\
    \ $i++) {\n        $sum += substr($binary, $i, 1);\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n \
    \       if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    return $binary;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $c (split //, $bin)\
    \ {\n        $sum += $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $sum = 0;\n    my $binary = sprintf(\"%b\", $N);\n    for (split(//, $binary))\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    my @digits = split(//,\
    \ $binary);\n    foreach my $digit (@digits) {\n        $sum += $digit;\n    }\n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($n) = @_;\n    my\
    \ $result = '';\n    while ($n > 0) {\n        $result = ($n % 2) . $result;\n\
    \        $n = int($n / 2);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my ($N) = @_;\n    return\
    \ unpack(\"B*\", pack(\"N\", $N));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $binary);\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $binary) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $bin;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $binary = sprintf(\"%b\", $n);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf \"%b\", $N;\n    my $sum = 0;\n    for my $c (split //, $bin)\
    \ {\n        $sum += $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $bin) {\n\
    \        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $n = shift;\n    my\
    \ $bin = sprintf(\"%b\", $n);\n    my $sum = 0;\n    for my $digit (split //,\
    \ $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split //,\
    \ $binary;\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"1\"))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //, $binary)\
    \ {\n        $sum += $_;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660227847
- exit_code: 1
  program: "# Given a positive integer N, return the total sum of its digits in binary.\n\
    # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
    # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\nsub solve {\n    my $N = shift;\n    my\
    \ $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $digit (split(//,\
    \ $binary)) {\n        $sum += $digit;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(1000),\"\
    1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"\
    110\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
    1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(333),\"1001\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"10010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660236030

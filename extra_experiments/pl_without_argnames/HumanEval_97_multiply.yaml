name: HumanEval_97_multiply
language: pl
prompt: "# Complete the function that takes two integers and returns \n# the product\
  \ of their unit digits.\n# Assume the input is always valid.\n# Examples:\n# >>>\
  \ multiply(148, 412)\n# 16\n# >>> multiply(19, 28)\n# 72\n# >>> multiply(2020, 1851)\n\
  # 0\n# >>> multiply(14, -15)\n# 20\nsub multiply {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&multiply;\n\
  \        if(eq_deeply($candidate->(148, 412),16)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(19, 28),72)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2020,\
  \ 1851),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(14, -15),20)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(76, 67),42)) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(17,\
  \ 27),49)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(0, 1),0)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(0, 0),0)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a,\
    \ $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n    return\
    \ ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n    return ($a % 10) * ($b %\
    \ 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    my $product = $a * $b;\n    my $unit_digit\
    \ = $product % 10;\n    return $unit_digit;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return (abs($a) %\
    \ 10) * (abs($b) % 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($n1, $n2) = @_;\n    my $m1 = $n1 % 10;\n    my $m2 = $n2 %\
    \ 10;\n    return $m1 * $m2;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($n1, $n2) = @_;\n    return abs($n1) % 10 * abs($n2) % 10;\n}",
  "my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return ($a % 10) *\
    \ ($b % 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n\
    }", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($num1, $num2) = @_;\n    my\
    \ $product = ($num1 % 10) * ($num2 % 10);\n    return $product;\n}", "my ($a,\
    \ $b) = @_;\n    my $p = $a * $b;\n    return $p % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    my $product = $a * $b;\n    my $unit_digit\
    \ = $product % 10;\n    return $unit_digit;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($num1, $num2) = @_;\n    my $product\
    \ = $num1 * $num2;\n    my $unit_digit = $product % 10;\n    return $unit_digit;\n\
    }", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a,\
    \ $b) = @_;\n    my $c = $a * $b;\n    my $d = abs($c);\n    my $e = $d % 10;\n\
    \    return $e;\n}", "my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}",
  "my ($a, $b) = @_;\n    return abs($a % 10) * abs($b % 10);\n}", "my ($a, $b) =\
    \ @_;\n    my $c = $a * $b;\n    $c =~ /\\d$/;\n    return $&;\n}", "my ($a, $b)\
    \ = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($num1, $num2) = @_;\n\
    \    return abs($num1) % 10 * abs($num2) % 10;\n}", "my ($x, $y) = @_;\n    return\
    \ abs($x) % 10 * abs($y) % 10;\n}", "my ($x, $y) = @_;\n    return abs($x) % 10\
    \ * abs($y) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    my $c = $a * $b;\n    my @arr = split //, $c;\n    my $d\
    \ = $arr[-1] * $arr[-2];\n    return $d;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($n1, $n2) = @_;\n    return abs($n1) % 10 * abs($n2)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    my $product = $a * $b;\n    return $product % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    my\
    \ $c = $a * $b;\n    my $d = $c % 10;\n    return $d;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    my $c = $a * $b;\n    my $d = $c\
    \ % 10;\n    return $d;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    my\
    \ $c = $a * $b;\n    my $d = $c % 10;\n    return $d;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    my $c = $a * $b;\n    my $d = $c % 10;\n    return $d;\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return (abs($a) % 10) * (abs($b) % 10);\n\
    }", "my ($num1, $num2) = @_;\n    my $res = $num1 * $num2;\n    return $res %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return (abs($a)\
    \ % 10) * (abs($b) % 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    my $c = $a * $b;\n    $c =~ s/\\D//g;\n    return $c;\n}",
  "my ($a, $b) = @_;\n    return abs($a % 10) * abs($b % 10);\n}", "my ($x, $y) =\
    \ @_;\n    return 0 if $x == 0 || $y == 0;\n    return $x * $y % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return ($a % 10) *\
    \ ($b % 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n\
    }", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a,\
    \ $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    my $c = $a * $b;\n    my $d = $c\
    \ % 10;\n    return $d;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    my\
    \ $product = $a * $b;\n    my $unit_digit = $product % 10;\n    return $unit_digit;\n\
    }", "my ($a, $b) = @_;\n    return ($a % 10) * ($b % 10);\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    my $c = $a * $b;\n    my $d = $c % 10;\n    return $d;\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    my $c = $a * $b;\n    my $d = $c % 10;\n    return $d;\n}", "my ($a, $b)\
    \ = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n   \
    \ return ($a % 10) * ($b % 10);\n}", "my ($a, $b) = @_;\n    return ($a % 10)\
    \ * ($b % 10);\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n\
    }", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a,\
    \ $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return\
    \ abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10\
    \ * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) %\
    \ 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my\
    \ ($a, $b) = @_;\n    return (abs($a) % 10) * (abs($b) % 10);\n}", "my ($a, $b)\
    \ = @_;\n    return (abs($a) % 10) * (abs($b) % 10);\n}", "my ($a, $b) = @_;\n\
    \    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a)\
    \ % 10 * abs($b) % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}",
  "my ($a, $b) = @_;\n    return abs($a) % 10 * abs($b) % 10;\n}", "my ($a, $b) =\
    \ @_;\n    return abs($a) % 10 * abs($b) % 10;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

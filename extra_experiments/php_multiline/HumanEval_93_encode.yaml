name: HumanEval_93_encode
language: php
prompt: "<?php\n/* Write a function that takes a message, and encodes in such a \n\
  way that it swaps case of all letters, replaces all vowels in \nthe message with\
  \ the letter that appears 2 places ahead of that \nvowel in the english alphabet.\
  \ \nAssume only letters. \nExamples:\n>>> encode(\"test\")\n\"TGST\"\n>>> encode(\"\
  This is a message\")\n\"tHKS KS C MGSSCGG\"*/\nfunction encode($message) {\n"
tests: "function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\") !==\
  \ \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char =\
    \ strtolower($message[$i]);\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$new_message\
    \ .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message\
    \ .= $char;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n\n/* Write\
    \ a function that takes a message and decodes it. \nThe encoding is the same as\
    \ above. \nExamples:\n>>> decode(\"TGST\")\n\"test\"\n>>> decode(\"tHKS KS C MGSSCGG\"\
    )\n\"This is a message\"*/", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"\
    u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";\n", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$newMessage .= nextLetter($letter);\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\
    \t\t}\n\t}\n\treturn $newMessage;\n}\n", "\t$message = strtolower($message);\n\
    \t$vowels = array('a','e','i','o','u');\n\t$new_message = '';\n\tfor ($i=0; $i\
    \ < strlen($message); $i++) { \n\t\tif (in_array($message[$i], $vowels)) {\n\t\
    \t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\
    \t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "\t$message = strtolower($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$newMessage = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels) + 2];\n\t\
    \t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message\
    \ = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($newMessage);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index +=\
    \ 2;\n\t\t\tif ($index > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\t\t$letter =\
    \ $vowels[$index];\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\treturn $encoded;\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message .=\
    \ $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message\
    \ .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");", "\t$alphabet =\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t$vowels = \"AEIOU\";\n\t$newMessage = \"\"\
    ;\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$newMessage .= strtolower($letter);\n\t\
    \t} else if (ctype_lower($letter)) {\n\t\t\t$newMessage .= strtoupper($letter);\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n\t\t$letter = $newMessage[$i];\n\t\tif (strpos($vowels, $letter) !==\
    \ false) {\n\t\t\t$newMessage[$i] = $alphabet[(strpos($alphabet, $letter) + 2)\
    \ % 26];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter = $vowels[array_search($letter, $vowels) + 2];\n\t\
    \t}\n\t\t$new_message[] = $letter;\n\t}\n\treturn strtoupper(implode($new_message));\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (ctype_upper($message[$i]))\
    \ {\n\t\t\t$new_message .= strtolower($message[$i]);\n\t\t} elseif (ctype_lower($message[$i]))\
    \ {\n\t\t\t$new_message .= strtoupper($message[$i]);\n\t\t} else {\n\t\t\t$new_message\
    \ .= $message[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($new_message); $i++)\
    \ {\n\t\tif (in_array($new_message[$i], $vowels)) {\n\t\t\t$new_message[$i] =\
    \ $vowels[array_search($new_message[$i], $vowels) + 2];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$new_message .= $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\
    \t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded = \"\
    \";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = strtolower($message[$i]);\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    return $encoded;\n}\necho encode(\"This is a message\");", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$newMessage[] = $vowels[0];\n\t\t\t} else {\n\t\t\t\t$newMessage[]\
    \ = $vowels[$key + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\
    \t\t}\n\t}\n\t$newMessage = strtoupper(implode($newMessage));\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char\
    \ = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\
    \t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$char = $vowels[array_search($char,\
    \ $vowels) + 2];\n\t\t\t}\n\t\t}\n\t\t$newMessage .= $char;\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$message = array_map(function($letter)\
    \ use ($vowels) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\treturn $vowels[0];\n\t\t\t} else\
    \ {\n\t\t\t\treturn $vowels[$index + 1];\n\t\t\t}\n\t\t} else {\n\t\t\treturn\
    \ $letter;\n\t\t}\n\t}, $message);\n\t$message = implode($message);\n\t$message\
    \ = strtoupper($message);\n\treturn $message;\n}\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$message[$key] = $vowels[(array_search($letter, $vowels) + 2) % 5];\n\
    \t\t} else {\n\t\t\t$message[$key] = strtoupper($letter);\n\t\t}\n\t}\n\treturn\
    \ implode($message);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\",\
    \ \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$new_message = \"\
    \";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$new_message .= $vowels[array_search($letter, $vowels) + 2];\n\t\t} else\
    \ {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message =\
    \ strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is\
    \ a message\") . PHP_EOL;", "\t$message = strtolower($message);\n\t$message =\
    \ str_split($message);\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$newMessage = \"\";\n\tforeach\
    \ ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index\
    \ = array_search($letter, $alphabet);\n\t\t\t$newMessage .= $alphabet[$index +\
    \ 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t$newMessage\
    \ = strtoupper($newMessage);\n\treturn $newMessage;\n}\necho encode(\"test\");\n\
    echo \"<br>\";\necho encode(\"This is a message\");", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$vowels2 = array(\"c\", \"f\", \"j\", \"n\"\
    , \"r\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = \"\";\n\tfor ($i = 0; $i < count($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels2[array_search($message[$i], $vowels)];\n\
    \t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"This is a message\");", "\t$alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n\t$vowels = \"AEIOU\";\n\t$encoded = \"\";\n\t$message = strtoupper($message);\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\
    \tif (strpos($alphabet, $letter) !== false) {\n\t\t\tif (strpos($vowels, $letter)\
    \ !== false) {\n\t\t\t\t$letter = $vowels[(strpos($vowels, $letter) + 2) % 5];\n\
    \t\t\t}\n\t\t\t$encoded .= $letter;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$vowels2 = array('c', 'f', 'j',\
    \ 'n', 'r');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage[] = $vowels2[array_search($letter, $vowels)];\n\
    \t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($newMessage));\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_letter = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t\tarray_push($new_message, $new_letter);\n\t\t} else {\n\
    \t\t\tarray_push($new_message, $letter);\n\t\t}\n\t}\n\t$new_message = implode($new_message);\n\
    \t$new_message = strtoupper($new_message);\n\treturn $new_message;\n}\n\necho\
    \ encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho\
    \ \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_letter = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t\tarray_push($new_message, $new_letter);\n\t\t} else {\n\
    \t\t\tarray_push($new_message, $letter);\n\t\t}\n\t}\n\t$new_message = implode($new_message);\n\
    \t$new_message = strtoupper($new_message);\n\treturn $new_message;\n}\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$vowels_encoded = array(\"c\", \"g\", \"k\"\
    , \"o\", \"s\");\n\t$message = str_replace($vowels, $vowels_encoded, $message);\n\
    \t$message = strtoupper($message);\n\treturn $message;\n}\necho encode(\"test\"\
    );\necho \"<br>\";\necho encode(\"This is a message\");", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$index = array_search($value, $vowels);\n\t\t\t$index = $index + 2;\n\t\t\
    \tif ($index > 4) {\n\t\t\t\t$index = $index - 5;\n\t\t\t}\n\t\t\t$message[$key]\
    \ = $vowels[$index];\n\t\t} else {\n\t\t\t$message[$key] = strtoupper($value);\n\
    \t\t}\n\t}\n\t$message = implode('', $message);\n\treturn $message;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $encoded = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n     \
    \   if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_encoded = array(\"c\", \"g\", \"\
    k\", \"o\", \"s\");\n\t$message = str_replace($vowels, $vowels_encoded, $message);\n\
    \t$message = strtoupper($message);\n\treturn $message;\n}\necho encode(\"test\"\
    );\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_after = array(\"c\",\
    \ \"g\", \"k\", \"o\", \"s\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$new_message = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[] = $vowels_after[array_search($letter,\
    \ $vowels)];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode(\"\", $new_message));\n}\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$new_message .= strtolower($char);\n\t\t\
    } else if (ctype_lower($char)) {\n\t\t\t$new_message .= strtoupper($char);\n\t\
    \t} else {\n\t\t\t$new_message .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($new_message);\
    \ $i++) {\n\t\t$char = $new_message[$i];\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$new_message[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t}\
    \ else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$alphabet = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\necho encode(\"test\") . PHP_EOL;\necho\
    \ encode(\"This is a message\") . PHP_EOL;", "\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\t$message = implode(\"\", $message);\n\t$message = strtoupper($message);\n\
    \treturn $message;\n}\necho encode(\"This is a message\");", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\t\
    return strtoupper(implode(\"\", $newMessage));\n}\necho encode(\"test\");\necho\
    \ \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i],\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t\
    }\n\treturn $new_message;\n}\n\necho encode(\"test\");\necho \"<br>\";\necho encode(\"\
    This is a message\");", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage\
    \ = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\t\t}\
    \ else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message .=\
    \ $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message\
    \ .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"\
    This is a message\");", "\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\");\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$new_message\
    \ = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\
    \t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message\
    \ = \"\";\n\t$message = strtolower($message);\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\necho encode(\"test\");\necho encode(\"This\
    \ is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$new_message =\
    \ array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$new_message[] = $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('',\
    \ $new_message));\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$message = strtolower($message);\n\t$vowels = array('a','e','i','o','u');\n\
    \t$new_message = '';\n\tfor ($i=0; $i < strlen($message); $i++) { \n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels)+2];\n\
    \t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\
    \t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = implode($encoded);\n\
    \t$encoded = strtoupper($encoded);\n\treturn $encoded;\n}\necho encode(\"test\"\
    );\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z');\n\t$newMessage = array();\n\tforeach ($message as $letter) {\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter, $alphabet);\n\
    \t\t\t$newMessage[] = $alphabet[$key + 2];\n\t\t} else {\n\t\t\t$newMessage[]\
    \ = $letter;\n\t\t}\n\t}\n\t$newMessage = strtoupper(implode($newMessage));\n\t\
    return $newMessage;\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\tforeach ($message\
    \ as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$index = array_search($value,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$message[$key] = $vowels[0];\n\t\
    \t\t} else {\n\t\t\t\t$message[$key] = $vowels[$index + 1];\n\t\t\t}\n\t\t}\n\t\
    }\n\t$message = implode($message);\n\t$message = strtoupper($message);\n\treturn\
    \ $message;\n}\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is\
    \ a message\");\necho \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$vowels = \"aeiou\";\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (ctype_alpha($letter)) {\n\t\t\t\
    $index = strpos($alphabet, strtolower($letter));\n\t\t\tif (strpos($vowels, strtolower($letter))\
    \ !== false) {\n\t\t\t\t$index += 2;\n\t\t\t\t$index = $index % 26;\n\t\t\t}\n\
    \t\t\tif (ctype_upper($letter)) {\n\t\t\t\t$newMessage .= strtoupper($alphabet[$index]);\n\
    \t\t\t} else {\n\t\t\t\t$newMessage .= $alphabet[$index];\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n",
  "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$vowels_encoded = array('c',\
    \ 'g', 'k', 'o', 's');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded_message = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter = str_replace($vowels, $vowels_encoded, $letter);\n\
    \t\t}\n\t\t$encoded_message .= $letter;\n\t}\n\treturn strtoupper($encoded_message);\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$alphabet\
    \ = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $alphabet);\n\t\t\t$key += 2;\n\
    \t\t\tif ($key > 25) {\n\t\t\t\t$key -= 26;\n\t\t\t}\n\t\t\t$encoded[] = $alphabet[$key];\n\
    \t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = implode($encoded);\n\
    \t$encoded = strtoupper($encoded);\n\treturn $encoded;\n}\necho encode(\"test\"\
    );\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_encoded = array(\"c\"\
    , \"g\", \"k\", \"o\", \"s\");\n\t$message_encoded = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$current_letter = $message[$i];\n\t\tif (in_array($current_letter,\
    \ $vowels)) {\n\t\t\t$message_encoded .= $vowels_encoded[array_search($current_letter,\
    \ $vowels)];\n\t\t} else if (ctype_upper($current_letter)) {\n\t\t\t$message_encoded\
    \ .= strtolower($current_letter);\n\t\t} else if (ctype_lower($current_letter))\
    \ {\n\t\t\t$message_encoded .= strtoupper($current_letter);\n\t\t} else {\n\t\t\
    \t$message_encoded .= $current_letter;\n\t\t}\n\t}\n\treturn $message_encoded;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$new_message .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t} else\
    \ {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\tforeach ($message\
    \ as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$index = array_search($value,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$message[$key] = $vowels[0];\n\t\
    \t\t} else {\n\t\t\t\t$message[$key] = $vowels[$index + 1];\n\t\t\t}\n\t\t}\n\t\
    }\n\t$message = implode($message);\n\t$message = strtoupper($message);\n\treturn\
    \ $message;\n}\n\necho encode(\"test\");\necho \"<br>\";\necho encode(\"This is\
    \ a message\");", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage =\
    \ \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\t\t}\
    \ else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\
    echo encode(\"test\");\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode('', $message));\n}\necho encode(\"test\");\necho\
    \ encode(\"This is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char\
    \ = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t} else {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \t\t}\n\t\t$new_message .= $char;\n\t}\n\treturn $new_message;\n}\necho encode('test')\
    \ . \"\\n\";\necho encode('This is a message') . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";", "\t$message = strtolower($message);\n\t\
    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($newMessage);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\
    \t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char\
    \ = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$new_message .= strtolower($char);\n\
    \t\t} elseif (ctype_lower($char)) {\n\t\t\t$new_message .= strtoupper($char);\n\
    \t\t} else {\n\t\t\t$new_message .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($new_message);\
    \ $i++) {\n\t\t$char = $new_message[$i];\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$new_message[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$result = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter, $vowels) + 2) %\
    \ 5];\n\t\t}\n\t\t$result .= strtoupper($letter);\n\t}\n\treturn $result;\n}\n\
    echo encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");", "\t\
    $message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($new_message);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = strtolower($message[$i]);\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\n\necho encode(\"test\");\necho \"\\n\"\
    ;\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif\
    \ (ctype_upper($char)) {\n\t\t\t\t$char = strtolower($char);\n\t\t\t} else {\n\
    \t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t\t$key = array_search($char, $vowels);\n\t\t\t\t$key += 2;\n\t\t\t\t\
    if ($key >= count($vowels)) {\n\t\t\t\t\t$key -= count($vowels);\n\t\t\t\t}\n\t\
    \t\t\t$char = $vowels[$key];\n\t\t\t}\n\t\t}\n\t\t$new_message .= $char;\n\t}\n\
    \treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n    \
    \    $letter = $message[$i];\n        if (ctype_upper($letter)) {\n          \
    \  $letter = strtolower($letter);\n        } else {\n            $letter = strtoupper($letter);\n\
    \        }\n        if (in_array($letter, $vowels)) {\n            $index = array_search($letter,\
    \ $vowels);\n            $index += 2;\n            if ($index > 4) {\n       \
    \         $index -= 5;\n            }\n            $letter = $vowels[$index];\n\
    \        }\n        $newMessage .= $letter;\n    }\n    return $newMessage;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$index = array_search($char, $vowels);\n\t\t\t$index = ($index + 2) % 5;\n\
    \t\t\t$char = $vowels[$index];\n\t\t}\n\t\t$new_message .= $char;\n\t}\n\treturn\
    \ $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array('a','e','i','o','u');\n\
    \t$newMessage = '';\n\tfor ($i=0; $i < strlen($message); $i++) { \n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels)+2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message =\
    \ strtolower($message);\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($newMessage);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$letter =\
    \ strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\t\
    \t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\treturn $encoded;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\tif ($key == 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$encoded[]\
    \ = $vowels[$key + 2];\n\t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\
    \treturn strtoupper(implode($encoded));\n}\n\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";\n", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\");\necho \"\
    <br>\";\necho encode(\"This is a message\");", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$alphabet = range('a', 'z');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\
    \tif (in_array($value, $vowels)) {\n\t\t\t$index = array_search($value, $alphabet);\n\
    \t\t\t$index += 2;\n\t\t\tif ($index > 25) {\n\t\t\t\t$index -= 26;\n\t\t\t}\n\
    \t\t\t$message[$key] = $alphabet[$index];\n\t\t}\n\t}\n\treturn implode($message);\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"\
    aeiou\";\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t\t$index = strpos($alphabet, $char);\n\t\t\tif (strpos($vowels, $char) !==\
    \ false) {\n\t\t\t\t$index += 2;\n\t\t\t\tif ($index > 25) {\n\t\t\t\t\t$index\
    \ -= 26;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$char = $alphabet[$index];\n\t\t\tif (ctype_upper($message[$i]))\
    \ {\n\t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t}\n\t\t$encoded .= $char;\n\
    \t}\n\treturn $encoded;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\",\
    \ \"u\");\n\t$vowels_encoded = array(\"c\", \"g\", \"k\", \"o\", \"s\");\n\t$message_encoded\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$char = $vowels_encoded[array_search($char, $vowels)];\n\t\t}\n\t\t$message_encoded\
    \ .= $char;\n\t}\n\treturn $message_encoded;\n}\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\n\necho encode(\"This is a message\");", "\t\
    $message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$newMessage = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[] =\
    \ $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage[]\
    \ = $letter;\n\t\t}\n\t}\n\treturn implode($newMessage);\n}\necho encode(\"test\"\
    );\necho \"<br>\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$new_message = array();\n\tforeach ($message as $letter) {\n\t\t\
    if (in_array($letter, $vowels)) {\n\t\t\t$new_message[] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\t\
    $new_message = implode(\"\", $new_message);\n\t$new_message = strtoupper($new_message);\n\
    \treturn $new_message;\n}\necho encode(\"test\");\necho \"<br>\";\necho encode(\"\
    This is a message\");", "\t$message = strtolower($message);\n\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t$encoded = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif\
    \ (strpos($vowels, $char) !== false) {\n\t\t\t$index = strpos($alphabet, $char);\n\
    \t\t\t$index += 2;\n\t\t\t$index = $index % 26;\n\t\t\t$encoded .= $alphabet[$index];\n\
    \t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$newMessage = array();\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$key = array_search($letter, $vowels);\n\t\t\t$newMessage[] = $vowels[($key\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode($newMessage));\n}\n\necho encode(\"test\") . PHP_EOL;\necho\
    \ encode(\"This is a message\") . PHP_EOL;", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\t$newMessage\
    \ .= $vowels[$key + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\necho encode(\"test\");\necho encode(\"\
    This is a message\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels\
    \ = \"aeiou\";\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\t$pos = strpos($alphabet, $letter);\n\t\t\
    if ($pos !== false) {\n\t\t\tif (strpos($vowels, $letter) !== false) {\n\t\t\t\
    \t$pos += 2;\n\t\t\t\tif ($pos > 25) {\n\t\t\t\t\t$pos -= 26;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t\t$encoded .= $alphabet[$pos];\n\t\t} else {\n\t\t\t$encoded .= $letter;\n\
    \t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"\
    u\");\n\t$vowels2 = array(\"c\",\"g\",\"k\",\"o\",\"s\");\n\t$message = strtolower($message);\n\
    \t$message = str_replace($vowels, $vowels2, $message);\n\t$message = strtoupper($message);\n\
    \treturn $message;\n}\necho encode(\"test\");\necho \"<br>\";\necho encode(\"\
    This is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$new_message =\
    \ array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$new_message[] = $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($new_message));\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message =\
    \ strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message\
    \ = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value, $vowels) +\
    \ 2];\n\t\t}\n\t}\n\treturn strtoupper(implode($message));\n}\n\necho encode(\"\
    test\");\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$alphabet = range('a', 'z');\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $alphabet);\n\t\t\t$new_message[] = $alphabet[$index + 2];\n\t\t} else {\n\t\
    \t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($new_message));\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage =\
    \ \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\t\t}\
    \ else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message =\
    \ strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($new_message);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\t\
    return $encoded;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage =\
    \ [];\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage[] = $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('',\
    \ $newMessage));\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\necho encode(\"test\");\necho \"\\n\";\necho\
    \ encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\
    \t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t\
    } else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\
    }\n\treturn $encoded;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This\
    \ is a message\") . PHP_EOL;", "    $message = strtolower($message);\n    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $new_message = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels))\
    \ {\n            $new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n        } else {\n            $new_message .= $message[$i];\n  \
    \      }\n    }\n    return $new_message;\n}\necho encode(\"test\");\necho encode(\"\
    This is a message\");", "\t$message = strtolower($message);\n\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\necho encode(\"test\");\necho \"\\n\";\necho\
    \ encode(\"This is a message\");\necho \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = array();\n\tforeach\
    \ ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index\
    \ = array_search($letter, $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index\
    \ = -1;\n\t\t\t}\n\t\t\t$new_message[] = $vowels[$index + 2];\n\t\t} else {\n\t\
    \t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($new_message));\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i],\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t\
    }\n\treturn $new_message;\n}\necho encode(\"test\");\necho encode(\"This is a\
    \ message\");", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$alphabet\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$message = strtolower($message);\n\t\
    $message = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as\
    \ $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $alphabet[array_search($letter,\
    \ $alphabet) + 2];\n\t\t}\n\t\t$newMessage .= $letter;\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$newMessage .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$newMessage .= strtoupper($char);\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t\
    $char = $newMessage[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\necho encode(\"test\");\necho \"\\n\";\n\
    echo encode(\"This is a message\");\necho \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$alphabet = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\
    \t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\");\necho \"\\\
    n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($message));\n}\necho encode(\"test\");\necho \"\
    \\n\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$newMessage[] = $vowels[0];\n\t\t\t} else {\n\t\t\t\t$newMessage[]\
    \ = $vowels[$key + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\
    \t\t}\n\t}\n\t$newMessage = strtoupper(implode($newMessage));\n\treturn $newMessage;\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % count($vowels)];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels2 = array(\"c\"\
    , \"f\", \"j\", \"n\", \"r\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels2[array_search($letter,\
    \ $vowels)];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t$newMessage\
    \ = strtoupper($newMessage);\n\treturn $newMessage;\n}\necho encode(\"test\")\
    \ . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$vowels_2 = array('c',\
    \ 'f', 'j', 'n', 'r');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$result = '';\n\tfor ($i = 0; $i < count($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$result .= $vowels_2[array_search($message[$i], $vowels)];\n\
    \t\t} else {\n\t\t\t$result .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($result);\n\
    }\n\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$newMessage = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\t\
    return strtoupper(implode($newMessage));\n}\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char))\
    \ {\n\t\t\t\t$char = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\
    \t\t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$vowels_upper\
    \ = array('A', 'E', 'I', 'O', 'U');\n\t$message_array = str_split($message);\n\
    \t$new_message = '';\n\tforeach ($message_array as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($letter, $vowels) +\
    \ 2) % 5];\n\t\t} elseif (in_array($letter, $vowels_upper)) {\n\t\t\t$new_message\
    \ .= $vowels_upper[(array_search($letter, $vowels_upper) + 2) % 5];\n\t\t} else\
    \ {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn $new_message;\n}\necho\
    \ encode(\"This is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encoded = \"\";\n\t$message = strtolower($message);\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index = ($index + 2) %\
    \ 5;\n\t\t\t$letter = $vowels[$index];\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\
    \treturn $encoded;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $new_message = array();\n    foreach ($message as $letter) {\n        if\
    \ (in_array($letter, $vowels)) {\n            $index = array_search($letter, $vowels);\n\
    \            if ($index == 4) {\n                $index = -1;\n            }\n\
    \            $new_message[] = $vowels[$index + 2];\n        } else {\n       \
    \     $new_message[] = $letter;\n        }\n    }\n    return implode($new_message);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = '';\n\tforeach ($message as\
    \ $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$new_message .= $vowels[0];\n\t\
    \t\t} else {\n\t\t\t\t$new_message .= $vowels[$index + 1];\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\t$new_message = strtoupper($new_message);\n\
    \treturn $new_message;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $vowels = \"aeiou\";\n    $new_message = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $letter = $message[$i];\n        $new_letter = \"\";\n    \
    \    if (strpos($vowels, $letter) !== false) {\n            $new_letter = $alphabet[(strpos($alphabet,\
    \ $letter) + 2) % 26];\n        } else {\n            $new_letter = $letter;\n\
    \        }\n        if (strtoupper($letter) == $letter) {\n            $new_letter\
    \ = strtoupper($new_letter);\n        }\n        $new_message .= $new_letter;\n\
    \    }\n    return $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$new_message = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\tif ($index\
    \ == 4) {\n\t\t\t\t$new_message .= $vowels[0];\n\t\t\t} else {\n\t\t\t\t$new_message\
    \ .= $vowels[$index + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$new_message .= $letter;\n\
    \t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\");\necho\
    \ \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$message =\
    \ strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($new_message);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\t$new_message\
    \ = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = array();\n\tforeach\
    \ ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[]\
    \ = $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message[]\
    \ = $letter;\n\t\t}\n\t}\n\t$new_message = implode($new_message);\n\t$new_message\
    \ = strtoupper($new_message);\n\treturn $new_message;\n}\necho encode(\"test\"\
    );\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";\n\n/* Write\
    \ a function that takes a message, and decodes in such a \nway that it swaps case\
    \ of all letters, replaces all letters in \nthe message with the letter that appears\
    \ 2 places behind that \nletter in the english alphabet. \nAssume only letters.\
    \ \nExamples:\n>>> decode(\"TGST\")\n\"test\"\n>>> decode(\"tHKS KS C MGSSCGG\"\
    )\n\"THIS IS A MESSAGE\"*/", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage[] = $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\t$newMessage = implode($newMessage);\n\
    \t$newMessage = strtoupper($newMessage);\n\treturn $newMessage;\n}\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t$new_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t}\n\
    \t\tif (strpos($vowels, $letter) !== false) {\n\t\t\t$letter = $vowels[(strpos($vowels,\
    \ $letter) + 2) % 5];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn $new_message;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$new_message[]\
    \ = $vowels[$index + 2];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t\
    }\n\t}\n\t$new_message = implode($new_message);\n\t$new_message = strtoupper($new_message);\n\
    \treturn $new_message;\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t$message\
    \ = strtolower($message);\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t\
    if (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"test\");\necho \"\
    \\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$index = array_search($value, $vowels);\n\t\t\tif ($index\
    \ == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$message[$key] = $vowels[$index\
    \ + 2];\n\t\t}\n\t}\n\treturn strtoupper(implode($message));\n}\necho encode(\"\
    This is a message\");", "\t$message = strtolower($message);\n\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'];\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\n\necho encode(\"test\") . PHP_EOL;\n\
    echo encode(\"This is a message\") . PHP_EOL;", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\"\
    , \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage =\
    \ \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$letter = array_search($letter, $alphabet);\n\t\t\t$letter += 2;\n\t\
    \t\tif ($letter > 25) {\n\t\t\t\t$letter -= 26;\n\t\t\t}\n\t\t\t$letter = $alphabet[$letter];\n\
    \t\t}\n\t\t$newMessage .= $letter;\n\t}\n\t$newMessage = strtoupper($newMessage);\n\
    \treturn $newMessage;\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t} else\
    \ {\n\t\t\t$letter = strtoupper($letter);\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$letter = $vowels[array_search($letter, $vowels) + 2];\n\t\t}\n\t\t\
    $new_message .= $letter;\n\t}\n\treturn $new_message;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "\t$message =\
    \ strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n   \
    \ $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $newMessage .= $vowels[array_search($message[$i],\
    \ $vowels) + 2];\n        } else {\n            $newMessage .= $message[$i];\n\
    \        }\n    }\n    return $newMessage;\n}\n\necho encode(\"test\");\necho\
    \ encode(\"This is a message\");", "\t$vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$new_message = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($letter, $vowels) +\
    \ 2];\n\t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t$message = strtolower($message);\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return $new_message;\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";", "\t$message = strtolower($message);\n\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\
    \t$index = array_search($message[$i], $vowels);\n\t\t\t$encoded .= $vowels[($index\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $new_message = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n      \
    \      $char = strtolower($char);\n        } else {\n            $char = strtoupper($char);\n\
    \        }\n        if (in_array($char, $vowels)) {\n            $char = $vowels[array_search($char,\
    \ $vowels) + 2];\n        }\n        $new_message .= $char;\n    }\n    return\
    \ $new_message;\n}\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This\
    \ is a message\");\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\tfor ($i\
    \ = 0; $i < count($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$message[$i] = $vowels[array_search($message[$i], $vowels) + 2];\n\t\
    \t}\n\t}\n\t$message = implode($message);\n\t$message = strtoupper($message);\n\
    \treturn $message;\n}\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t} elseif (ctype_lower($char)) {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$char = nextVowel($char);\n\t\t}\n\t\
    \t$newMessage .= $char;\n\t}\n\treturn $newMessage;\n}\n", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$alphabet = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"\
    z\");\n\t$message = strtolower($message);\n\t$newMessage = \"\";\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $alphabet[array_search($message[$i], $alphabet) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "\t$alphabet = array(\"a\",\"b\",\"c\",\"\
    d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"\
    q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$vowels = array(\"\
    a\",\"e\",\"i\",\"o\",\"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $alphabet[array_search($letter,\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t\
    return strtoupper($newMessage);\n}\necho encode(\"This is a message\");", "\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tfor ($i = 0; $i < count($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$message[$i] = $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn strtoupper(implode($message));\n}",
  "\t$message = strtolower($message);\n\t$message = str_split($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$alphabet = array('a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z');\n\t$newMessage = array();\n\tforeach ($message as\
    \ $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $alphabet);\n\t\t\t$newMessage[] = $alphabet[$index + 2];\n\t\t} else {\n\t\t\
    \t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($newMessage));\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message .=\
    \ $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message\
    \ .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[] =\
    \ $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message[]\
    \ = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($new_message));\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\t$message = strtolower($message);\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t\
    if (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char, $vowels)\
    \ + 2) % 5];\n\t\t}\n\t\t$encoded .= strtoupper($char);\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$newMessage = array();\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$letter = $vowels[array_search($letter, $vowels) + 2];\n\t\t}\n\t\t$newMessage[]\
    \ = $letter;\n\t}\n\treturn strtoupper(implode(\"\", $newMessage));\n}\necho encode(\"\
    test\");\necho encode(\"This is a message\");", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$newMessage\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$newMessage\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t\
    }\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t$char = $newMessage[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\t$newMessage .= $vowels[($key + 2) % 5];\n\t\t} else {\n\t\t\
    \t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n}\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encodedMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\tif ($index\
    \ == 4) {\n\t\t\t\t$encodedMessage .= $vowels[0];\n\t\t\t} else {\n\t\t\t\t$encodedMessage\
    \ .= $vowels[$index + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$encodedMessage .= $letter;\n\
    \t\t}\n\t}\n\treturn strtoupper($encodedMessage);\n}\necho encode(\"test\") .\
    \ PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$alphabet = array('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$new_message = \"\";\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\
    \t\t\t$new_message .= $alphabet[array_search($message[$i], $alphabet) + 2];\n\t\
    \t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_2 = array(\"\
    c\", \"g\", \"k\", \"o\", \"s\");\n\t$message = str_replace($vowels, $vowels_2,\
    \ $message);\n\t$message = strtoupper($message);\n\treturn $message;\n}\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$message = strtolower($message);\n\t$message = str_split($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$alphabet = array('a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z');\n\tforeach ($message as $key => $value) {\n\t\tif\
    \ (in_array($value, $vowels)) {\n\t\t\t$message[$key] = $alphabet[array_search($value,\
    \ $alphabet) + 2];\n\t\t}\n\t}\n\t$message = implode($message);\n\t$message =\
    \ strtoupper($message);\n\treturn $message;\n}\necho encode(\"test\");\necho \"\
    <br>\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return $new_message;\n}\n\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels) + 2];\n\t\
    \t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode(\"This is a message\");", "\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t\
    $letter = strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn $new_message;\n\
    }\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\");\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels)+2];\n\t\t}\n\t}\n\t$message\
    \ = implode($message);\n\t$message = strtoupper($message);\n\treturn $message;\n\
    }\necho encode(\"test\");\necho encode(\"This is a message\");", "\t$vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message .=\
    \ $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message\
    \ .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\tif ($key == 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$encoded[]\
    \ = $vowels[$key + 2];\n\t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\
    \t$encoded = strtoupper(implode($encoded));\n\treturn $encoded;\n}\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels2 = array(\"c\", \"f\"\
    , \"j\", \"n\", \"r\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$result = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$result[] = $vowels2[array_search($letter, $vowels)];\n\t\
    \t} else {\n\t\t\t$result[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode(\"\
    \", $result));\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\
    \tif (in_array($value, $vowels)) {\n\t\t\t$index = array_search($value, $vowels);\n\
    \t\t\t$index = ($index + 2) % 5;\n\t\t\t$message[$key] = $vowels[$index];\n\t\t\
    }\n\t}\n\t$message = implode('', $message);\n\t$message = strtoupper($message);\n\
    \treturn $message;\n}\necho encode(\"This is a message\");", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t} else {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\
    \tif (in_array($value, $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$message[$key] = strtoupper($value);\n\t\
    \t}\n\t}\n\treturn implode($message);\n}\n\necho encode(\"test\");\necho \"\\\
    n\";\necho encode(\"This is a message\");\necho \"\\n\";\n", "\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$alphabet = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = \"\";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($newMessage);\n}\necho encode(\"test\");\necho \"\\\
    n\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$new_message\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$key = array_search($letter, $alphabet);\n\t\t\t$new_message[] = $alphabet[$key\
    \ + 2];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\t$new_message\
    \ = strtoupper(implode($new_message));\n\treturn $new_message;\n}\necho encode(\"\
    test\");\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\t$key += 2;\n\
    \t\t\tif ($key > 4) {\n\t\t\t\t$key -= 5;\n\t\t\t}\n\t\t\t$letter = $vowels[$key];\n\
    \t\t}\n\t\t$encoded[] = $letter;\n\t}\n\t$encoded = strtoupper(implode($encoded));\n\
    \treturn $encoded;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This\
    \ is a message\") . PHP_EOL;", "\t$message = strtolower($message);\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";", "\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\
    \tforeach ($message as $char) {\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage\
    \ .= $vowels[array_search($char, $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $char;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n}\n\necho encode(\"\
    test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$message\
    \ = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return $new_message;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\",\
    \ \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$new_message\
    \ .= strtolower($letter);\n\t\t} else if (ctype_lower($letter)) {\n\t\t\t$new_message\
    \ .= strtoupper($letter);\n\t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t\
    }\n\t}\n\tfor ($i = 0; $i < strlen($new_message); $i++) {\n\t\t$letter = $new_message[$i];\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[$i] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t}\n\t}\n\treturn $new_message;\n}\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value, $vowels) +\
    \ 2];\n\t\t}\n\t}\n\treturn implode($message);\n}\necho encode(\"This is a message\"\
    );", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char = strtolower($char);\n\t\t\
    \t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \t\t\t}\n\t\t}\n\t\t$new_message .= $char;\n\t}\n\treturn $new_message;\n}\n\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$vowels2 = array(\"c\", \"f\", \"j\", \"n\"\
    , \"r\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tarray_push($newMessage,\
    \ $vowels2[$key]);\n\t\t} else {\n\t\t\tarray_push($newMessage, $letter);\n\t\t\
    }\n\t}\n\t$newMessage = implode($newMessage);\n\t$newMessage = strtoupper($newMessage);\n\
    \treturn $newMessage;\n}\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\
    \tif (in_array($value, $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value,\
    \ $vowels) + 2];\n\t\t}\n\t}\n\t$message = implode(\"\", $message);\n\t$message\
    \ = strtoupper($message);\n\treturn $message;\n}\necho encode(\"test\");\necho\
    \ \"<br>\";\necho encode(\"This is a message\");", "\t$message = strtolower($message);\n\
    \t$vowels = array('a','e','i','o','u');\n\t$newMessage = '';\n\tfor ($i=0; $i\
    \ < strlen($message); $i++) { \n\t\tif (in_array($message[$i], $vowels)) {\n\t\
    \t\t$newMessage .= $vowels[array_search($message[$i], $vowels)+2];\n\t\t} else\
    \ {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\
    echo encode(\"test\");\necho \"<br>\";\necho encode(\"This is a message\");",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t\
    return strtoupper($newMessage);\n}\necho encode(\"test\");\necho encode(\"This\
    \ is a message\");", "\t$message = strtolower($message);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

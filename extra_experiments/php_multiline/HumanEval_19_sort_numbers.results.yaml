language: php
name: HumanEval_19_sort_numbers
results:
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'number' => $number,\n\
    \            'value' => array_search($number, ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34sp4jm6.php:28\n\
    Stack trace:\n#0 /tmp/tmp34sp4jm6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp34sp4jm6.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array_search($number, ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    return ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words separated by spaces.\nReturn the string with words in reverse sequence.\n\
    >>> reverse_words(\"This is an example!\")\n\"sihT si na !elpmaxe\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdiwu0zr.php:28\n\
    Stack trace:\n#0 /tmp/tmpjdiwu0zr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjdiwu0zr.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [$number, array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])];\n\
    \    }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a[1]\
    \ - $b[1];\n    });\n    $numbers = array_map(function($number) {\n        return\
    \ $number[0];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n\
    /* Input is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        $number = str_replace(\"zero\", \"\
    0\", $number);\n        $number = str_replace(\"one\", \"1\", $number);\n    \
    \    $number = str_replace(\"two\", \"2\", $number);\n        $number = str_replace(\"\
    three\", \"3\", $number);\n        $number = str_replace(\"four\", \"4\", $number);\n\
    \        $number = str_replace(\"five\", \"5\", $number);\n        $number = str_replace(\"\
    six\", \"6\", $number);\n        $number = str_replace(\"seven\", \"7\", $number);\n\
    \        $number = str_replace(\"eight\", \"8\", $number);\n        $number =\
    \ str_replace(\"nine\", \"9\", $number);\n        return $number;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        $number\
    \ = str_replace(\"0\", \"zero\", $number);\n        $number = str_replace(\"1\"\
    , \"one\", $number);\n        $number = str_replace(\"2\", \"two\", $number);\n\
    \        $number = str_replace(\"3\", \"three\", $number);\n        $number =\
    \ str_replace(\"4\", \"four\", $number);\n        $number = str_replace(\"5\"\
    , \"five\", $number);\n        $number = str_replace(\"6\", \"six\", $number);\n\
    \        $number = str_replace(\"7\", \"seven\", $number);\n        $number =\
    \ str_replace(\"8\", \"eight\", $number);\n        $number = str_replace(\"9\"\
    , \"nine\", $number);\n        return $number;\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with the words sorted from shortest to longest.\n>>> sort_words(\"\
    the quick brown fox jumps over the lazy dog\")\n\"the dog fox the lazy over quick\
    \ brown jumps\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps over the\
    \ lazy dog\")\n\"the dog fox the lazy over quick brown jumps\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidpad975.php:70\n\
    Stack trace:\n#0 /tmp/tmpidpad975.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpidpad975.php\
    \ on line 70\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $number_map\
    \ = array(\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n \
    \       'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n \
    \   );\n    $numbers = array_map(function($number) use ($number_map) {\n     \
    \   return $number_map[$number];\n    }, $numbers);\n    sort($numbers);\n   \
    \ $numbers = array_map(function($number) use ($number_map) {\n        return array_search($number,\
    \ $number_map);\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n\
    /* Input is a string of words separated by spaces.\nReturn the string with words\
    \ sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps\
    \ over the lazy dog\")\n\"the dog fox the lazy over jumps quick brown\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmphcjdjeqn.php on line 22\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcjdjeqn.php:40\nStack\
    \ trace:\n#0 /tmp/tmphcjdjeqn.php(47): test()\n#1 {main}\n  thrown in /tmp/tmphcjdjeqn.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with\
    \ the words sorted from shortest to longest.\n>>> sort_words(\"one two three four\"\
    )\n\"one two three four\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tq85q3o.php:28\n\
    Stack trace:\n#0 /tmp/tmp4tq85q3o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4tq85q3o.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'number' => $number,\n\
    \            'value' => array_search($number, ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers, separated by spaces.\nReturn the string with the numbers sorted\
    \ from largest to smallest.\n>>> sort_numbers_desc(\"3 1 5\")\n\"5 3 1\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of letters.\nReturn the string with the letters sorted\
    \ alphabetically, with uppercase letters before lowercase letters.\n>>> sort_letters(\"\
    Hello World\")\n\"deHllloorW\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsppebesd.php:28\n\
    Stack trace:\n#0 /tmp/tmpsppebesd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsppebesd.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/*\nInput is a string of words separated\
    \ by spaces.\nReturn the string with the words reversed.\n>>> reverse_words(\"\
    hello world\")\n\"world hello\"\n*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($n) {\n        return $n == 'zero' ? 0 : $n == 'one' ?\
    \ 1 : $n == 'two' ? 2 : $n == 'three' ? 3 : $n == 'four' ? 4 : $n == 'five' ?\
    \ 5 : $n == 'six' ? 6 : $n == 'seven' ? 7 : $n == 'eight' ? 8 : $n == 'nine' ?\
    \ 9 : $n;\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($n)\
    \ {\n        return $n == 0 ? 'zero' : $n == 1 ? 'one' : $n == 2 ? 'two' : $n\
    \ == 3 ? 'three' : $n == 4 ? 'four' : $n == 5 ? 'five' : $n == 6 ? 'six' : $n\
    \ == 7 ? 'seven' : $n == 8 ? 'eight' : $n == 9 ? 'nine' : $n;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpsu71f939.php on line
    10

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpzh5sqk5j.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpzh5sqk5j.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpzh5sqk5j.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpzh5sqk5j.php(24): candidate('')\n#4 /tmp/tmpzh5sqk5j.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpzh5sqk5j.php on line 10\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z007bee.php:28\n\
    Stack trace:\n#0 /tmp/tmp2z007bee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2z007bee.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox\")\n\"fox the quick brown\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiw0l2l11.php:28\n\
    Stack trace:\n#0 /tmp/tmpiw0l2l11.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiw0l2l11.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words sorted from shortest to longest.\n>>> sort_words(\"\
    one two three four\")\n\"one two three four\"\n>>> sort_words(\"one two three\
    \ four five\")\n\"one two three four five\"\n>>> sort_words(\"one two three four\
    \ five six\")\n\"one two three four five six\"\n>>> sort_words(\"one two three\
    \ four five six seven\")\n\"one two three four five six seven\"\n>>> sort_words(\"\
    one two three four five six seven eight\")\n\"one two three four five six seven\
    \ eight\"\n>>> sort_words(\"one two three four five six seven eight nine\")\n\"\
    one two three four five six seven eight nine\"\n>>> sort_words(\"one two three\
    \ four five six seven eight nine ten\")\n\"one two three four five six seven eight\
    \ nine ten\"\n>>> sort_words(\"one two three four five six seven eight nine ten\
    \ eleven\")\n\"one two three four five six seven eight nine ten eleven\"\n>>>\
    \ sort_words(\"one two three four five six seven eight nine ten eleven twelve\"\
    )\n\"one two three four five six seven eight nine ten eleven twelve\"\n>>> sort_words(\"\
    one two three four five six seven eight nine ten eleven twelve thirteen\")\n\"\
    one two three four five six seven eight nine ten eleven twelve thirteen\"\n>>>\
    \ sort_words(\"one two three four five six seven eight nine ten eleven twelve\
    \ thirteen fourteen\")\n\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen\"\n>>> sort_words(\"one two three four five six seven\
    \ eight nine ten eleven twelve thirteen fourteen fifteen\")\n\"one\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp8x6gjmzy.php on
    line 19

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from 'zero'\
    \ to 'nine'.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha83rrod.php:28\n\
    Stack trace:\n#0 /tmp/tmpha83rrod.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpha83rrod.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4v6jv5oy.php:28\n\
    Stack trace:\n#0 /tmp/tmp4v6jv5oy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4v6jv5oy.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers_array = explode(\" \", $numbers);\n \
    \   $numbers_array = array_map(function($number) {\n        switch ($number) {\n\
    \            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers_array);\n\
    \    sort($numbers_array);\n    $numbers_array = array_map(function($number) {\n\
    \        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers_array);\n    return implode(\" \", $numbers_array);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"one two three four\
    \ five\")\n\"one two three four five\"\n>>> sort_words(\"one two three four five\
    \ six seven eight nine ten\")\n\"one two three four five six seven eight nine\
    \ ten\"\n>>> sort_words(\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\"\
    )\n\"one two three four five six seven eight nine ten eleven twelve thirteen fourteen\
    \ fifteen sixteen seventeen eighteen nineteen twenty\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjawop15v.php:74\n\
    Stack trace:\n#0 /tmp/tmpjawop15v.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpjawop15v.php\
    \ on line 74\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpzh5sqk5j.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpzh5sqk5j.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpzh5sqk5j.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpzh5sqk5j.php(24): candidate('')\n#4 /tmp/tmpzh5sqk5j.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpzh5sqk5j.php on line 10\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'zero' => 0,\n\
    \            'one' => 1,\n            'two' => 2,\n            'three' => 3,\n\
    \            'four' => 4,\n            'five' => 5,\n            'six' => 6,\n\
    \            'seven' => 7,\n            'eight' => 8,\n            'nine' => 9,\n\
    \        ][$number];\n    }, $numbers);\n    sort($numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"fox the quick brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpwl15ly04.php on line 21\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl15ly04.php:37\nStack\
    \ trace:\n#0 /tmp/tmpwl15ly04.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwl15ly04.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec_ik5ur.php:70\n\
    Stack trace:\n#0 /tmp/tmpec_ik5ur.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpec_ik5ur.php\
    \ on line 70\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return strlen($number);\n    }, $numbers);\n\
    \    sort($numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with the words sorted\
    \ by length.\n>>> sort_words(\"one two three four\")\n\"one two four three\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxql4ufd.php:25\n\
    Stack trace:\n#0 /tmp/tmpgxql4ufd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgxql4ufd.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated by\
    \ a comma.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3,1,5\")\n\"1,3,5\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkfojl0k.php:28\n\
    Stack trace:\n#0 /tmp/tmpgkfojl0k.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgkfojl0k.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated by\
    \ spaces.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1kh0xlk.php:28\n\
    Stack trace:\n#0 /tmp/tmpu1kh0xlk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu1kh0xlk.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"I am\
    \ a cat\")\n\"I a am cat\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcxcqy4y.php:28\n\
    Stack trace:\n#0 /tmp/tmplcxcqy4y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplcxcqy4y.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $number == 'zero' ? 0 : $number\
    \ == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 : $number == 'four'\
    \ ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number == 'seven' ? 7\
    \ : $number == 'eight' ? 8 : $number == 'nine' ? 9 : null;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ $number == 0 ? 'zero' : $number == 1 ? 'one' : $number == 2 ? 'two' : $number\
    \ == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ? 'five' : $number ==\
    \ 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight' : $number == 9 ?\
    \ 'nine' : null;\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\
    \n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpyxycr4j0.php on line
    10

    '
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\t$number = str_replace(\"zero\", \"0\",\
    \ $number);\n\t\t$number = str_replace(\"one\", \"1\", $number);\n\t\t$number\
    \ = str_replace(\"two\", \"2\", $number);\n\t\t$number = str_replace(\"three\"\
    , \"3\", $number);\n\t\t$number = str_replace(\"four\", \"4\", $number);\n\t\t\
    $number = str_replace(\"five\", \"5\", $number);\n\t\t$number = str_replace(\"\
    six\", \"6\", $number);\n\t\t$number = str_replace(\"seven\", \"7\", $number);\n\
    \t\t$number = str_replace(\"eight\", \"8\", $number);\n\t\t$number = str_replace(\"\
    nine\", \"9\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\t$number = str_replace(\"0\", \"\
    zero\", $number);\n\t\t$number = str_replace(\"1\", \"one\", $number);\n\t\t$number\
    \ = str_replace(\"2\", \"two\", $number);\n\t\t$number = str_replace(\"3\", \"\
    three\", $number);\n\t\t$number = str_replace(\"4\", \"four\", $number);\n\t\t\
    $number = str_replace(\"5\", \"five\", $number);\n\t\t$number = str_replace(\"\
    6\", \"six\", $number);\n\t\t$number = str_replace(\"7\", \"seven\", $number);\n\
    \t\t$number = str_replace(\"8\", \"eight\", $number);\n\t\t$number = str_replace(\"\
    9\", \"nine\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated by\
    \ spaces.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1kh0xlk.php:28\n\
    Stack trace:\n#0 /tmp/tmpu1kh0xlk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu1kh0xlk.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_by_length(\"I am a dog\")\n\"I a am dog\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj7yonqu.php:70\n\
    Stack trace:\n#0 /tmp/tmpwj7yonqu.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpwj7yonqu.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"one two three four\
    \ five\")\n\"one two three four five\"\n>>> sort_words(\"one two three four five\
    \ six seven eight nine ten\")\n\"one two three four five six seven eight nine\
    \ ten\"\n>>> sort_words(\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\"\
    )\n\"one two three four five six seven eight nine ten eleven twelve thirteen fourteen\
    \ fifteen sixteen seventeen eighteen nineteen twenty\"\n>>> sort_words(\"one two\
    \ three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen\
    \ sixteen seventeen eighteen nineteen twenty twentyone twentytwo twentythree twentyfour\
    \ twentyfive twentysix twentyseven twentyeight twentynine thirty\")\n\"one two\
    \ three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen\
    \ sixteen seventeen eighteen nineteen twenty twentyone twentytwo twentythree twentyfour\
    \ twentyfive twentysix twentyseven twentyeight twentynine thirty\"\n>>> sort_words(\"\
    one two three four five six seven eight nine ten eleven twelve thirteen fourteen\
    \ fifteen sixteen seventeen eighteen nineteen twenty twentyone twentytwo twentythree\
    \ twentyfour twentyfive twentysix twentyseven twentyeight twentynine thirty thirtyone\
    \ thirtytwo thirtythree thirtyfour thirtyfive thirtysix thirtyseven thirtyeight\
    \ thirtynine forty\")\n\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\
    \ twentyone twentytwo twentythree twentyfour twentyfive twentysix twentyseven\
    \ twentyeight twentynine thirty thirtyone thirtytwo thirtythree thirtyfour thirtyfive\
    \ thirtysix thirtyseven thirtyeight thirtynine forty\"\n>>> sort_words(\"one two\
    \ three four five six\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp442bj2w8.php on
    line 19

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return convert_number($number);\n \
    \   }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmpzcwwcibu.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpzcwwcibu.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpzcwwcibu.php(19):\
    \ sort_numbers(Array)\n#3 /tmp/tmpzcwwcibu.php(23): candidate('')\n#4 /tmp/tmpzcwwcibu.php(30):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpzcwwcibu.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string\
    \ with words sorted from smallest to largest.\n>>> sort_words(\"one two three\"\
    )\n\"one three two\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxilfx9m.php:28\n\
    Stack trace:\n#0 /tmp/tmpoxilfx9m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoxilfx9m.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmrbmvmb.php:28\n\
    Stack trace:\n#0 /tmp/tmprmrbmvmb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprmrbmvmb.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"the fox quick brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nohxh80.php:28\n\
    Stack trace:\n#0 /tmp/tmp9nohxh80.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9nohxh80.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps over the\
    \ lazy dog\")\n\"the dog fox the lazy over jumps quick brown\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeucks0bc.php:70\n\
    Stack trace:\n#0 /tmp/tmpeucks0bc.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpeucks0bc.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers and operators.\n\
    Return the result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>> calculate(\"\
    1 + 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5\")\n-3.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6\")\n-2.5\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7\")\n12.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7\
    \ / 8\")\n12.625\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9\")\n3.625\n\
    >>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10\")\n13.625\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11\")\n143.625\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12\")\n119.6875\n>>> calculate(\"1 +\
    \ 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13\")\n106.6875\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13 + 14\")\n120.6875\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpc72ncfhn.php on
    line 19

    '
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of characters.\n\
    Return the string with the characters sorted from smallest to largest.\n>>> sort_characters(\"\
    cba\")\n\"abc\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'zero' => 0,\n\
    \            'one' => 1,\n            'two' => 2,\n            'three' => 3,\n\
    \            'four' => 4,\n            'five' => 5,\n            'six' => 6,\n\
    \            'seven' => 7,\n            'eight' => 8,\n            'nine' => 9,\n\
    \        ][$number];\n    }, $numbers);\n    sort($numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmprkbh1hu8.php on line 21\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkbh1hu8.php:37\nStack\
    \ trace:\n#0 /tmp/tmprkbh1hu8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprkbh1hu8.php\
    \ on line 37\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $num_array\
    \ = array();\n    foreach ($numbers as $number) {\n        switch ($number) {\n\
    \            case \"zero\":\n                $num_array[] = 0;\n             \
    \   break;\n            case \"one\":\n                $num_array[] = 1;\n   \
    \             break;\n            case \"two\":\n                $num_array[]\
    \ = 2;\n                break;\n            case \"three\":\n                $num_array[]\
    \ = 3;\n                break;\n            case \"four\":\n                $num_array[]\
    \ = 4;\n                break;\n            case \"five\":\n                $num_array[]\
    \ = 5;\n                break;\n            case \"six\":\n                $num_array[]\
    \ = 6;\n                break;\n            case \"seven\":\n                $num_array[]\
    \ = 7;\n                break;\n            case \"eight\":\n                $num_array[]\
    \ = 8;\n                break;\n            case \"nine\":\n                $num_array[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($num_array);\n    $sorted_numbers\
    \ = array();\n    foreach ($num_array as $num) {\n        switch ($num) {\n  \
    \          case 0:\n                $sorted_numbers[] = \"zero\";\n          \
    \      break;\n            case 1:\n                $sorted_numbers[] = \"one\"\
    ;\n                break;\n            case 2:\n                $sorted_numbers[]\
    \ = \"two\";\n                break;\n            case 3:\n                $sorted_numbers[]\
    \ = \"three\";\n                break;\n            case 4:\n                $sorted_numbers[]\
    \ = \"four\";\n                break;\n            case 5:\n                $sorted_numbers[]\
    \ = \"five\";\n                break;\n            case 6:\n                $sorted_numbers[]\
    \ = \"six\";\n                break;\n            case 7:\n                $sorted_numbers[]\
    \ = \"seven\";\n                break;\n            case 8:\n                $sorted_numbers[]\
    \ = \"eight\";\n                break;\n            case 9:\n                $sorted_numbers[]\
    \ = \"nine\";\n                break;\n        }\n    }\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 7 in /tmp/tmp4kd694jp.php on line 92

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return strlen($number);\n    }, $numbers);\n\
    \    sort($numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with the words sorted\
    \ from shortest to longest.\n>>> sort_words(\"banana apple pear\")\n\"pear apple\
    \ banana\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcly36_eb.php:25\n\
    Stack trace:\n#0 /tmp/tmpcly36_eb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcly36_eb.php\
    \ on line 25\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with words sorted from\
    \ longest to shortest\n>>> sort_by_length(\"the quick brown fox\")\n\"quick the\
    \ brown fox\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20bgjv4s.php:70\n\
    Stack trace:\n#0 /tmp/tmp20bgjv4s.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp20bgjv4s.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_words(\"I am a cat\")\n\"I a am cat\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8kc47kz.php:28\n\
    Stack trace:\n#0 /tmp/tmpz8kc47kz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz8kc47kz.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"fox the quick brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cr05kmv.php:28\n\
    Stack trace:\n#0 /tmp/tmp2cr05kmv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2cr05kmv.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"one two three four five\")\n\"one two three four\
    \ five\"\n>>> sort_words(\"one two three four five six seven eight nine\")\n\"\
    one two three four five six seven eight nine\"\n>>> sort_words(\"one two three\
    \ four five six seven eight nine ten\")\n\"one two three four five six seven eight\
    \ nine ten\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap7zinfs.php:74\n\
    Stack trace:\n#0 /tmp/tmpap7zinfs.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpap7zinfs.php\
    \ on line 74\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\t$number = str_replace(\"zero\", \"0\",\
    \ $number);\n\t\t$number = str_replace(\"one\", \"1\", $number);\n\t\t$number\
    \ = str_replace(\"two\", \"2\", $number);\n\t\t$number = str_replace(\"three\"\
    , \"3\", $number);\n\t\t$number = str_replace(\"four\", \"4\", $number);\n\t\t\
    $number = str_replace(\"five\", \"5\", $number);\n\t\t$number = str_replace(\"\
    six\", \"6\", $number);\n\t\t$number = str_replace(\"seven\", \"7\", $number);\n\
    \t\t$number = str_replace(\"eight\", \"8\", $number);\n\t\t$number = str_replace(\"\
    nine\", \"9\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\t$number = str_replace(\"0\", \"\
    zero\", $number);\n\t\t$number = str_replace(\"1\", \"one\", $number);\n\t\t$number\
    \ = str_replace(\"2\", \"two\", $number);\n\t\t$number = str_replace(\"3\", \"\
    three\", $number);\n\t\t$number = str_replace(\"4\", \"four\", $number);\n\t\t\
    $number = str_replace(\"5\", \"five\", $number);\n\t\t$number = str_replace(\"\
    6\", \"six\", $number);\n\t\t$number = str_replace(\"7\", \"seven\", $number);\n\
    \t\t$number = str_replace(\"8\", \"eight\", $number);\n\t\t$number = str_replace(\"\
    9\", \"nine\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers from 'zero' to 'nine' and\
    \ 'plus' and 'minus' signs.\nReturn the sum of the numbers.\n>>> calculate(\"\
    three plus five minus one\")\n7*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with the words sorted by length.\n>>> sort_words(\"the quick\
    \ brown fox\")\n\"fox the brown quick\"*/\nfunction candidate(...$args) {\n  \
    \  return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakq_x5w3.php:28\n\
    Stack trace:\n#0 /tmp/tmpakq_x5w3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpakq_x5w3.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_words(\"the quick brown fox\")\n\"fox quick the\
    \ brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni267xea.php:70\n\
    Stack trace:\n#0 /tmp/tmpni267xea.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpni267xea.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphzk3pki.php:28\n\
    Stack trace:\n#0 /tmp/tmpphzk3pki.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpphzk3pki.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string\
    \ with the words sorted from shortest to longest.\n>>> sort_words(\"the quick\
    \ brown fox\")\n\"fox the quick brown\"*/\nfunction candidate(...$args) {\n  \
    \  return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnb0ztfhm.php:28\n\
    Stack trace:\n#0 /tmp/tmpnb0ztfhm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnb0ztfhm.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [$number, array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"])];\n    }, $numbers);\n    usort($numbers, function($a,\
    \ $b) {\n        return $a[1] - $b[1];\n    });\n    $numbers = array_map(function($number)\
    \ {\n        return $number[0];\n    }, $numbers);\n    return implode(\" \",\
    \ $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers_2(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$num_array\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tswitch ($number) {\n\t\t\t\
    case 'zero':\n\t\t\t\t$num_array[] = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'one':\n\t\
    \t\t\t$num_array[] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\t\t\t\t$num_array[]\
    \ = 2;\n\t\t\t\tbreak;\n\t\t\tcase 'three':\n\t\t\t\t$num_array[] = 3;\n\t\t\t\
    \tbreak;\n\t\t\tcase 'four':\n\t\t\t\t$num_array[] = 4;\n\t\t\t\tbreak;\n\t\t\t\
    case 'five':\n\t\t\t\t$num_array[] = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'six':\n\t\
    \t\t\t$num_array[] = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'seven':\n\t\t\t\t$num_array[]\
    \ = 7;\n\t\t\t\tbreak;\n\t\t\tcase 'eight':\n\t\t\t\t$num_array[] = 8;\n\t\t\t\
    \tbreak;\n\t\t\tcase 'nine':\n\t\t\t\t$num_array[] = 9;\n\t\t\t\tbreak;\n\t\t\
    }\n\t}\n\tsort($num_array);\n\t$sorted_numbers = array();\n\tforeach ($num_array\
    \ as $number) {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\t$sorted_numbers[]\
    \ = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$sorted_numbers[] = 'one';\n\
    \t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$sorted_numbers[] = 'two';\n\t\t\t\tbreak;\n\
    \t\t\tcase 3:\n\t\t\t\t$sorted_numbers[] = 'three';\n\t\t\t\tbreak;\n\t\t\tcase\
    \ 4:\n\t\t\t\t$sorted_numbers[] = 'four';\nfunction candidate(...$args) {\n  \
    \  return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 47 in /tmp/tmp9f6khdp5.php on line 74

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words in reverse sequence.\n>>> reverse_words(\"Hello World\"\
    )\n\"World Hello\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5i1_81k.php:28\n\
    Stack trace:\n#0 /tmp/tmpw5i1_81k.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw5i1_81k.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5fkgklz.php:24\n\
    Stack trace:\n#0 /tmp/tmph5fkgklz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph5fkgklz.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcok3ea4.php:28\n\
    Stack trace:\n#0 /tmp/tmpdcok3ea4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdcok3ea4.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($num) {\n\t\treturn array_search($num, array(\"zero\",\
    \ \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($num)\
    \ {\n\t\treturn array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$num];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0911_i8.php:28\n\
    Stack trace:\n#0 /tmp/tmpv0911_i8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv0911_i8.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47yd9lvq.php:70\n\
    Stack trace:\n#0 /tmp/tmp47yd9lvq.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp47yd9lvq.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z007bee.php:28\n\
    Stack trace:\n#0 /tmp/tmp2z007bee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2z007bee.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers and operators.\nReturn\
    \ the result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>> calculate(\"\
    1 - 2\")\n-1\n>>> calculate(\"1 * 2\")\n2\n>>> calculate(\"1 / 2\")\n0.5\n>>>\
    \ calculate(\"1 / 0\")\n\"Can't divide by zero!\"\n>>> calculate(\"1 + 2 * 3\"\
    )\n7\n>>> calculate(\"1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5\"\
    )\n-2.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6\")\n1.5\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5 + 6 * 7\")\n14.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8\"\
    )\n14.625\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9\")\n5.625\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10\")\n15.625\n>>> calculate(\"1 + 2 * 3 /\
    \ 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11\")\n165.625\n>>> calculate(\"1 + 2 * 3 / 4 -\
    \ 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12\")\n138.85416666666667\n>>> calculate(\"1 +\
    \ 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13\")\n125.85416666666667\n>>>\
    \ calculate(\"1 +\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpxhdyecoq.php on
    line 19

    '
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers. Return the\
    \ string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4e247uy.php:27\n\
    Stack trace:\n#0 /tmp/tmpy4e247uy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy4e247uy.php\
    \ on line 27\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmrbmvmb.php:28\n\
    Stack trace:\n#0 /tmp/tmprmrbmvmb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprmrbmvmb.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words, separated by\
    \ spaces.\nReturn the string with the words sorted by length, from shortest to\
    \ longest.\n>>> sort_by_length(\"one two three four\")\n\"one two four three\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ew0kg7d.php:28\n\
    Stack trace:\n#0 /tmp/tmp5ew0kg7d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5ew0kg7d.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b6ykb5f.php:28\n\
    Stack trace:\n#0 /tmp/tmp2b6ykb5f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2b6ykb5f.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp80k0919l.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp80k0919l.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp80k0919l.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp80k0919l.php(24): candidate('')\n#4 /tmp/tmp80k0919l.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp80k0919l.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\t$number = strtolower($number);\n\t\tswitch\
    \ ($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\
    \treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\
    \treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\
    \treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\
    \treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\
    \treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjxce0bm.php:71\n\
    Stack trace:\n#0 /tmp/tmprjxce0bm.php(78): test()\n#1 {main}\n  thrown in /tmp/tmprjxce0bm.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ the numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"\
    1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp950qyyb8.php:28\n\
    Stack trace:\n#0 /tmp/tmp950qyyb8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp950qyyb8.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 0:\n        return 'zero';\n      case 1:\n        return 'one';\n\
    \      case 2:\n        return 'two';\n      case 3:\n        return 'three';\n\
    \      case 4:\n        return 'four';\n      case 5:\n        return 'five';\n\
    \      case 6:\n        return 'six';\n      case 7:\n        return 'seven';\n\
    \      case 8:\n        return 'eight';\n      case 9:\n        return 'nine';\n\
    \    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\n/* Input is\
    \ a string of numbers, separated by spaces.\nReturn the string with numbers sorted\
    \ from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicpxpm3f.php:70\n\
    Stack trace:\n#0 /tmp/tmpicpxpm3f.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpicpxpm3f.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $GLOBALS['numbers'][$number];\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, $GLOBALS['numbers']);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n$numbers = [\n    'zero' => 0,\n \
    \   'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9\n];\n\necho sort_numbers(\"three one five\");\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "one three five\nWarning: Undefined array key \"\" in /tmp/tmpgwdjwskg.php\
    \ on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgwdjwskg.php:38\n\
    Stack trace:\n#0 /tmp/tmpgwdjwskg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgwdjwskg.php\
    \ on line 38\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_numeral($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numeral_to_number()\
    \ in /tmp/tmpgcx90v14.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpgcx90v14.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpgcx90v14.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpgcx90v14.php(24): candidate('')\n#4 /tmp/tmpgcx90v14.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpgcx90v14.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx38dmg1q.php:70\n\
    Stack trace:\n#0 /tmp/tmpx38dmg1q.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpx38dmg1q.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words sorted from shortest to longest.\n>>> sort_words(\"\
    one two three four\")\n\"one two three four\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pvks760.php:28\n\
    Stack trace:\n#0 /tmp/tmp2pvks760.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2pvks760.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers and operators.\nReturn\
    \ the result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>> calculate(\"\
    1 + 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 - 4 / 2\")\n5\n>>> calculate(\"1 +\
    \ 2 * 3 - 4 / 2 + 8\")\n13\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4\")\n41\n\
    >>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2\")\n21\n>>> calculate(\"1 + 2 *\
    \ 3 - 4 / 2 + 8 * 4 / 2 - 16\")\n5\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4\
    \ / 2 - 16 / 2\")\n-5\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2\
    \ + 32\")\n27\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2\"\
    )\n15\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 - 64\"\
    )\n-49\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 - 64 /\
    \ 2\")\n-33\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 -\
    \ 64 / 2 + 128\")\n95\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2\
    \ + 32\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp_l7yceej.php on
    line 19

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ the words reversed.\n>>> reverse_words(\"This is a test\")\n\"sihT si a tset\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tutyyh7.php:28\n\
    Stack trace:\n#0 /tmp/tmp_tutyyh7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_tutyyh7.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of letters.\nReturn the\
    \ string with letters sorted from smallest to largest.\n>>> sort_letters(\"cba\"\
    )\n\"abc\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dmxwlr8.php:28\n\
    Stack trace:\n#0 /tmp/tmp2dmxwlr8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2dmxwlr8.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ '0' to '9'.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e3rw3lk.php:28\n\
    Stack trace:\n#0 /tmp/tmp2e3rw3lk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2e3rw3lk.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ the words in reverse order.\n>>> reverse_words(\"hello world\")\n\"world hello\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwl2zs2b.php:28\n\
    Stack trace:\n#0 /tmp/tmphwl2zs2b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphwl2zs2b.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b6ykb5f.php:28\n\
    Stack trace:\n#0 /tmp/tmp2b6ykb5f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2b6ykb5f.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 0 to 9.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mrm1dp6.php:28\n\
    Stack trace:\n#0 /tmp/tmp8mrm1dp6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8mrm1dp6.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpzh5sqk5j.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpzh5sqk5j.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpzh5sqk5j.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpzh5sqk5j.php(24): candidate('')\n#4 /tmp/tmpzh5sqk5j.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpzh5sqk5j.php on line 10\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp80k0919l.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp80k0919l.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp80k0919l.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp80k0919l.php(24): candidate('')\n#4 /tmp/tmp80k0919l.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp80k0919l.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($num) {\n        return array_search($num, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$num];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox\")\n\"fox the quick brown\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjswk5ezw.php:28\n\
    Stack trace:\n#0 /tmp/tmpjswk5ezw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjswk5ezw.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of characters.\nReturn the string with all vowels removed.\n>>> remove_vowels(\"\
    hello\")\n\"hll\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzbos5sv.php:70\n\
    Stack trace:\n#0 /tmp/tmpuzbos5sv.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpuzbos5sv.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp80k0919l.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp80k0919l.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp80k0919l.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp80k0919l.php(24): candidate('')\n#4 /tmp/tmp80k0919l.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp80k0919l.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_word($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_number()\
    \ in /tmp/tmp53edfrc5.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp53edfrc5.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp53edfrc5.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp53edfrc5.php(24): candidate('')\n#4 /tmp/tmp53edfrc5.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp53edfrc5.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_numeral($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numeral_to_number()\
    \ in /tmp/tmpgcx90v14.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpgcx90v14.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpgcx90v14.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpgcx90v14.php(24): candidate('')\n#4 /tmp/tmpgcx90v14.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpgcx90v14.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with the numbers sorted from smallest to largest.\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kvllse5.php:28\n\
    Stack trace:\n#0 /tmp/tmp6kvllse5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6kvllse5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"the fox quick brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nohxh80.php:28\n\
    Stack trace:\n#0 /tmp/tmp9nohxh80.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9nohxh80.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map('strval', $numbers);\n    $numbers = array_map('intval', $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map('strval', $numbers);\n    $numbers\
    \ = implode(\" \", $numbers);\n    return $numbers;\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest.\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3neyacxk.php:26\n\
    Stack trace:\n#0 /tmp/tmp3neyacxk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3neyacxk.php\
    \ on line 26\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec_ik5ur.php:70\n\
    Stack trace:\n#0 /tmp/tmpec_ik5ur.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpec_ik5ur.php\
    \ on line 70\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return strlen($number);\n    }, $numbers);\n\
    \    sort($numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_words(\"banana apple pear\")\n\"pear apple banana\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu6mnqng.php:25\n\
    Stack trace:\n#0 /tmp/tmpgu6mnqng.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgu6mnqng.php\
    \ on line 25\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphzk3pki.php:28\n\
    Stack trace:\n#0 /tmp/tmpphzk3pki.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpphzk3pki.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z007bee.php:28\n\
    Stack trace:\n#0 /tmp/tmp2z007bee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2z007bee.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 0:\n        return 'zero';\n      case 1:\n        return 'one';\n\
    \      case 2:\n        return 'two';\n      case 3:\n        return 'three';\n\
    \      case 4:\n        return 'four';\n      case 5:\n        return 'five';\n\
    \      case 6:\n        return 'six';\n      case 7:\n        return 'seven';\n\
    \      case 8:\n        return 'eight';\n      case 9:\n        return 'nine';\n\
    \    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\n/* Input is\
    \ a string of words.\nReturn the string with all words capitalized.\n>>> capitalize_words(\"\
    hello world\")\n\"Hello World\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ym4g6vs.php:70\n\
    Stack trace:\n#0 /tmp/tmp5ym4g6vs.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp5ym4g6vs.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpot6edac1.php:70\n\
    Stack trace:\n#0 /tmp/tmpot6edac1.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpot6edac1.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers from 'zero' to 'nine'.\nValid choices are\
    \ 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    three one five\")\n\"one three five\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmproghem7b.php:29\n\
    Stack trace:\n#0 /tmp/tmproghem7b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmproghem7b.php\
    \ on line 29\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ '0' to '9'.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3510\")\n\"0135\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9gqt9q_.php:28\n\
    Stack trace:\n#0 /tmp/tmpi9gqt9q_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi9gqt9q_.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn number_to_int($number);\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn int_to_number($number);\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpkx311qi8.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpkx311qi8.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpkx311qi8.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpkx311qi8.php(24): candidate('')\n#4 /tmp/tmpkx311qi8.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpkx311qi8.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    $number = strtolower($number);\n    switch\
    \ ($number) {\n      case 'zero':\n        return 0;\n      case 'one':\n    \
    \    return 1;\n      case 'two':\n        return 2;\n      case 'three':\n  \
    \      return 3;\n      case 'four':\n        return 4;\n      case 'five':\n\
    \        return 5;\n      case 'six':\n        return 6;\n      case 'seven':\n\
    \        return 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n\
    \        return 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with words\
    \ sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps\
    \ over the lazy dog\")\n\"the dog fox the lazy over quick brown jumps\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca6pvk5b.php:71\n\
    Stack trace:\n#0 /tmp/tmpca6pvk5b.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpca6pvk5b.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47yd9lvq.php:70\n\
    Stack trace:\n#0 /tmp/tmp47yd9lvq.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp47yd9lvq.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\t$number = strtolower($number);\n\t\t$number\
    \ = str_replace(\"zero\", \"0\", $number);\n\t\t$number = str_replace(\"one\"\
    , \"1\", $number);\n\t\t$number = str_replace(\"two\", \"2\", $number);\n\t\t\
    $number = str_replace(\"three\", \"3\", $number);\n\t\t$number = str_replace(\"\
    four\", \"4\", $number);\n\t\t$number = str_replace(\"five\", \"5\", $number);\n\
    \t\t$number = str_replace(\"six\", \"6\", $number);\n\t\t$number = str_replace(\"\
    seven\", \"7\", $number);\n\t\t$number = str_replace(\"eight\", \"8\", $number);\n\
    \t\t$number = str_replace(\"nine\", \"9\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\t$number = str_replace(\"0\", \"zero\", $number);\n\t\t$number = str_replace(\"\
    1\", \"one\", $number);\n\t\t$number = str_replace(\"2\", \"two\", $number);\n\
    \t\t$number = str_replace(\"3\", \"three\", $number);\n\t\t$number = str_replace(\"\
    4\", \"four\", $number);\n\t\t$number = str_replace(\"5\", \"five\", $number);\n\
    \t\t$number = str_replace(\"6\", \"six\", $number);\n\t\t$number = str_replace(\"\
    7\", \"seven\", $number);\n\t\t$number = str_replace(\"8\", \"eight\", $number);\n\
    \t\t$number = str_replace(\"9\", \"nine\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of\
    \ numbers separated by spaces.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"I am\
    \ a sentence\")\n\"I a am sentence\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn number_to_int($number);\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn int_to_number($number);\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpkx311qi8.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpkx311qi8.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpkx311qi8.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpkx311qi8.php(24): candidate('')\n#4 /tmp/tmpkx311qi8.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpkx311qi8.php on line 10\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\t$number = str_replace(['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9], $number);\n\t\treturn $number;\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\t$number = str_replace([0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'], $number);\n\t\treturn $number;\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_int($number);\n  \
    \  }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp81v8nx8_.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp81v8nx8_.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp81v8nx8_.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp81v8nx8_.php(24): candidate('')\n#4 /tmp/tmp81v8nx8_.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp81v8nx8_.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers, separated by spaces.\n\
    Return the sum of the numbers.\n>>> sum_numbers(\"one two three\")\n6*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1g8emqex.php:28\n\
    Stack trace:\n#0 /tmp/tmp1g8emqex.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1g8emqex.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from 'zero'\
    \ to 'nine'.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha83rrod.php:28\n\
    Stack trace:\n#0 /tmp/tmpha83rrod.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpha83rrod.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers and letters.\nReturn the string with all numbers removed.\n\
    >>> remove_numbers(\"abc123\")\n\"abc\"\n>>> remove_numbers(\"abc123def456\")\n\
    \"abcdef\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5e56l98.php:72\n\
    Stack trace:\n#0 /tmp/tmpo5e56l98.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpo5e56l98.php\
    \ on line 72\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $nums = explode(\" \", $numbers);\n    $num_map\
    \ = array(\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n \
    \       'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n \
    \   );\n    $nums_int = array();\n    foreach ($nums as $num) {\n        $nums_int[]\
    \ = $num_map[$num];\n    }\n    sort($nums_int);\n    $nums_str = array();\n \
    \   foreach ($nums_int as $num) {\n        $nums_str[] = array_search($num, $num_map);\n\
    \    }\n    return implode(\" \", $nums_str);\n}\n\n/* Input is a string of text.\n\
    Return the string with all vowels removed.\n>>> remove_vowels(\"Hello world!\"\
    )\n\"Hll wrld!\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from 0 to 9.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l4tsq7a.php:28\n\
    Stack trace:\n#0 /tmp/tmp3l4tsq7a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3l4tsq7a.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_int($number);\n  \
    \  }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp81v8nx8_.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp81v8nx8_.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp81v8nx8_.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp81v8nx8_.php(24): candidate('')\n#4 /tmp/tmp81v8nx8_.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp81v8nx8_.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z007bee.php:28\n\
    Stack trace:\n#0 /tmp/tmp2z007bee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2z007bee.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmrxkugi.php:28\n\
    Stack trace:\n#0 /tmp/tmplmrxkugi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplmrxkugi.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers from 'zero' to 'nine'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"three one five\")\n\"one\
    \ three five\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmd88j8x.php:70\n\
    Stack trace:\n#0 /tmp/tmpbmd88j8x.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpbmd88j8x.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $number_array = explode(\" \", $numbers);\n  \
    \  $number_array = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $number_array);\n    sort($number_array);\n    $number_array\
    \ = array_map(function($number) {\n        return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n    },\
    \ $number_array);\n    return implode(\" \", $number_array);\n}\n\n/* Input is\
    \ a string of numbers and operators.\nValid operators are '+', '-', '*', '/' and\
    \ '^'.\nReturn the result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>>\
    \ calculate(\"1 + 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"\
    1 + 2 * 3 / 4 ^ 5\")\n1.0009765625\n>>> calculate(\"1 + 2 * 3 / 4 ^ 5 + 6\")\n\
    7.0009765625*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_tyo4so.php:37\n\
    Stack trace:\n#0 /tmp/tmpm_tyo4so.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm_tyo4so.php\
    \ on line 37\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47yd9lvq.php:70\n\
    Stack trace:\n#0 /tmp/tmp47yd9lvq.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp47yd9lvq.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words in reverse sequence.\n>>> reverse_words(\"hello world\"\
    )\n\"world hello\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tdnmwlw.php:28\n\
    Stack trace:\n#0 /tmp/tmp6tdnmwlw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6tdnmwlw.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4v6jv5oy.php:28\n\
    Stack trace:\n#0 /tmp/tmp4v6jv5oy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4v6jv5oy.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with the numbers\
    \ sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlxfoces.php:70\n\
    Stack trace:\n#0 /tmp/tmpqlxfoces.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpqlxfoces.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 0:\n        return 'zero';\n      case 1:\n        return 'one';\n\
    \      case 2:\n        return 'two';\n      case 3:\n        return 'three';\n\
    \      case 4:\n        return 'four';\n      case 5:\n        return 'five';\n\
    \      case 6:\n        return 'six';\n      case 7:\n        return 'seven';\n\
    \      case 8:\n        return 'eight';\n      case 9:\n        return 'nine';\n\
    \    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\n/* Input is\
    \ a string of numbers from 0 to 9.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3578\")\n\"2357\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ctd8oh.php:70\n\
    Stack trace:\n#0 /tmp/tmp30ctd8oh.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp30ctd8oh.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from largest to smallest.\n>>> sort_numbers_desc(\"\
    three one five\")\n\"five three one\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdmmluxt.php:28\n\
    Stack trace:\n#0 /tmp/tmpfdmmluxt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfdmmluxt.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"I am a sentence\")\n\"I a am sentence\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uhny7jn.php:70\n\
    Stack trace:\n#0 /tmp/tmp3uhny7jn.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp3uhny7jn.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($num) {\n        return strlen($num);\n    }, $numbers);\n\
    \    sort($numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of characters.\nReturn the string with the characters in reverse order.\n\
    >>> reverse_string(\"Hello World\")\n\"dlroW olleH\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1k943cxm.php:25\n\
    Stack trace:\n#0 /tmp/tmp1k943cxm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1k943cxm.php\
    \ on line 25\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z007bee.php:28\n\
    Stack trace:\n#0 /tmp/tmp2z007bee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2z007bee.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($num) {\n        $num = strtolower($num);\n        switch\
    \ ($num) {\n            case 'zero':\n                return 0;\n            case\
    \ 'one':\n                return 1;\n            case 'two':\n               \
    \ return 2;\n            case 'three':\n                return 3;\n          \
    \  case 'four':\n                return 4;\n            case 'five':\n       \
    \         return 5;\n            case 'six':\n                return 6;\n    \
    \        case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        switch ($num) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzh1cs6s.php:71\n\
    Stack trace:\n#0 /tmp/tmphzh1cs6s.php(78): test()\n#1 {main}\n  thrown in /tmp/tmphzh1cs6s.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return strlen($number);\n    }, $numbers);\n\
    \    sort($numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers separated by spaces.\nReturn the string with numbers sorted\
    \ from largest to smallest.\n>>> sort_numbers_desc(\"three one five\")\n\"five\
    \ three one\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvcxxyq5.php:25\n\
    Stack trace:\n#0 /tmp/tmpgvcxxyq5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgvcxxyq5.php\
    \ on line 25\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        $number = strtolower($number);\n  \
    \      switch ($number) {\n            case 'zero':\n                return 0;\n\
    \            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmjdh_gm.php:71\n\
    Stack trace:\n#0 /tmp/tmpnmjdh_gm.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpnmjdh_gm.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmrxkugi.php:28\n\
    Stack trace:\n#0 /tmp/tmplmrxkugi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplmrxkugi.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4zxlggg.php:28\n\
    Stack trace:\n#0 /tmp/tmpt4zxlggg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt4zxlggg.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"banana apple pear\")\n\"apple pear\
    \ banana\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh9al4al.php:70\n\
    Stack trace:\n#0 /tmp/tmpnh9al4al.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpnh9al4al.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map('word_to_number', $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map('number_to_word', $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"word_to_number\" not found or invalid\
    \ function name in /tmp/tmpx740gar8.php:9\nStack trace:\n#0 /tmp/tmpx740gar8.php(9):\
    \ array_map('word_to_number', Array)\n#1 /tmp/tmpx740gar8.php(16): sort_numbers(Array)\n\
    #2 /tmp/tmpx740gar8.php(20): candidate('')\n#3 /tmp/tmpx740gar8.php(27): test()\n\
    #4 {main}\n  thrown in /tmp/tmpx740gar8.php on line 9\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47yd9lvq.php:70\n\
    Stack trace:\n#0 /tmp/tmp47yd9lvq.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp47yd9lvq.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        $number = str_replace(\"zero\", \"\
    0\", $number);\n        $number = str_replace(\"one\", \"1\", $number);\n    \
    \    $number = str_replace(\"two\", \"2\", $number);\n        $number = str_replace(\"\
    three\", \"3\", $number);\n        $number = str_replace(\"four\", \"4\", $number);\n\
    \        $number = str_replace(\"five\", \"5\", $number);\n        $number = str_replace(\"\
    six\", \"6\", $number);\n        $number = str_replace(\"seven\", \"7\", $number);\n\
    \        $number = str_replace(\"eight\", \"8\", $number);\n        $number =\
    \ str_replace(\"nine\", \"9\", $number);\n        return $number;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        $number\
    \ = str_replace(\"0\", \"zero\", $number);\n        $number = str_replace(\"1\"\
    , \"one\", $number);\n        $number = str_replace(\"2\", \"two\", $number);\n\
    \        $number = str_replace(\"3\", \"three\", $number);\n        $number =\
    \ str_replace(\"4\", \"four\", $number);\n        $number = str_replace(\"5\"\
    , \"five\", $number);\n        $number = str_replace(\"6\", \"six\", $number);\n\
    \        $number = str_replace(\"7\", \"seven\", $number);\n        $number =\
    \ str_replace(\"8\", \"eight\", $number);\n        $number = str_replace(\"9\"\
    , \"nine\", $number);\n        return $number;\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string\
    \ with words sorted from shortest to longest.\n>>> sort_words(\"the quick brown\
    \ fox jumps over the lazy dog\")\n\"the dog fox the lazy over jumps quick brown\"\
    */\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array_search($number, array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$number];\n  }, $numbers);\n  return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp530nz4jr.php:28\n\
    Stack trace:\n#0 /tmp/tmp530nz4jr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp530nz4jr.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of words separated by spaces.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_words(\"the quick brown fox\")\n\"fox the quick\
    \ brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwt5c9jcj.php:70\n\
    Stack trace:\n#0 /tmp/tmpwt5c9jcj.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpwt5c9jcj.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words sorted from shortest to longest.\n>>> sort_words(\"\
    the quick brown fox jumps over the lazy dog\")\n\"the dog fox the lazy over quick\
    \ brown jumps\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6ywx6ff.php:28\n\
    Stack trace:\n#0 /tmp/tmpz6ywx6ff.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz6ywx6ff.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn str_replace([\"zero\", \"one\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn str_replace([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"], $number);\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace(['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n  \
    \  $numbers = array_map(function($number) {\n        return str_replace([0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of characters.\nReturn the string with all vowels removed.\n\
    >>> remove_vowels(\"hello\")\n\"hll\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbykjt864.php:28\n\
    Stack trace:\n#0 /tmp/tmpbykjt864.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbykjt864.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmrxkugi.php:28\n\
    Stack trace:\n#0 /tmp/tmplmrxkugi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplmrxkugi.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp041iwlto.php:28\n\
    Stack trace:\n#0 /tmp/tmp041iwlto.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp041iwlto.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp311y0opr.php:28\n\
    Stack trace:\n#0 /tmp/tmp311y0opr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp311y0opr.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn str_replace(array(\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ), array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), $number);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn str_replace(array(0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9), array(\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"), $number);\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with the numbers sorted from smallest to largest.\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec_ik5ur.php:70\n\
    Stack trace:\n#0 /tmp/tmpec_ik5ur.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpec_ik5ur.php\
    \ on line 70\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4zxlggg.php:28\n\
    Stack trace:\n#0 /tmp/tmpt4zxlggg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt4zxlggg.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($num) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $num);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($num) {\n        return str_replace([0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"], $num);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers, separated\
    \ by spaces.\nReturn the sum of the numbers.\n>>> sum_numbers(\"one two three\"\
    )\n6\n>>> sum_numbers(\"one two three four\")\n10\n>>> sum_numbers(\"one one\"\
    )\n2\n>>> sum_numbers(\"one zero one\")\n2*/\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukzqwe_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpukzqwe_p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukzqwe_p.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec_ik5ur.php:70\n\
    Stack trace:\n#0 /tmp/tmpec_ik5ur.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpec_ik5ur.php\
    \ on line 70\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of letters.\nReturn the string with\
    \ the letters sorted from smallest to largest.\n>>> sort_letters(\"cba\")\n\"\
    abc\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjjpgonq.php:28\n\
    Stack trace:\n#0 /tmp/tmpdjjpgonq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdjjpgonq.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        $number = str_replace(\"zero\", \"\
    0\", $number);\n        $number = str_replace(\"one\", \"1\", $number);\n    \
    \    $number = str_replace(\"two\", \"2\", $number);\n        $number = str_replace(\"\
    three\", \"3\", $number);\n        $number = str_replace(\"four\", \"4\", $number);\n\
    \        $number = str_replace(\"five\", \"5\", $number);\n        $number = str_replace(\"\
    six\", \"6\", $number);\n        $number = str_replace(\"seven\", \"7\", $number);\n\
    \        $number = str_replace(\"eight\", \"8\", $number);\n        $number =\
    \ str_replace(\"nine\", \"9\", $number);\n        return $number;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        $number\
    \ = str_replace(\"0\", \"zero\", $number);\n        $number = str_replace(\"1\"\
    , \"one\", $number);\n        $number = str_replace(\"2\", \"two\", $number);\n\
    \        $number = str_replace(\"3\", \"three\", $number);\n        $number =\
    \ str_replace(\"4\", \"four\", $number);\n        $number = str_replace(\"5\"\
    , \"five\", $number);\n        $number = str_replace(\"6\", \"six\", $number);\n\
    \        $number = str_replace(\"7\", \"seven\", $number);\n        $number =\
    \ str_replace(\"8\", \"eight\", $number);\n        $number = str_replace(\"9\"\
    , \"nine\", $number);\n        return $number;\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string\
    \ with words sorted from shortest to longest.\n>>> sort_words(\"I am a sentence\"\
    )\n\"I a am sentence\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'number' => $number,\n\
    \            'value' => array_search($number, ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by a space.\nReturn the string with the numbers sorted\
    \ from largest to smallest.\n>>> sort_numbers_desc(\"3 1 5\")\n\"5 3 1\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"hello world\")\n\"world hello\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3swphii2.php:70\n\
    Stack trace:\n#0 /tmp/tmp3swphii2.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp3swphii2.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $number === 'zero' ? 0 :\n \
    \           $number === 'one' ? 1 :\n            $number === 'two' ? 2 :\n   \
    \         $number === 'three' ? 3 :\n            $number === 'four' ? 4 :\n  \
    \          $number === 'five' ? 5 :\n            $number === 'six' ? 6 :\n   \
    \         $number === 'seven' ? 7 :\n            $number === 'eight' ? 8 :\n \
    \           $number === 'nine' ? 9 :\n            $number;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ $number === 0 ? 'zero' :\n            $number === 1 ? 'one' :\n            $number\
    \ === 2 ? 'two' :\n            $number === 3 ? 'three' :\n            $number\
    \ === 4 ? 'four' :\n            $number === 5 ? 'five' :\n            $number\
    \ === 6 ? 'six' :\n            $number === 7 ? 'seven' :\n            $number\
    \ === 8 ? 'eight' :\n            $number === 9 ? 'nine' :\n            $number;\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpt67bojh6.php on line
    10

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoyv68m.php:28\n\
    Stack trace:\n#0 /tmp/tmpbeoyv68m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeoyv68m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"hello\
    \ world\")\n\"world hello\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa01udw5y.php:28\n\
    Stack trace:\n#0 /tmp/tmpa01udw5y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa01udw5y.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpot6edac1.php:70\n\
    Stack trace:\n#0 /tmp/tmpot6edac1.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpot6edac1.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"one two three four five\")\n\"one\
    \ two three four five\"\n>>> sort_words(\"one two three four five six seven eight\
    \ nine ten\")\n\"one two three four five six seven eight nine ten\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3mwjdg0.php:72\n\
    Stack trace:\n#0 /tmp/tmpa3mwjdg0.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpa3mwjdg0.php\
    \ on line 72\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words reversed.\n>>> reverse_words(\"\
    hello world\")\n\"world hello\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3d7q1zmb.php:28\n\
    Stack trace:\n#0 /tmp/tmp3d7q1zmb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3d7q1zmb.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7enblxzv.php:28\n\
    Stack trace:\n#0 /tmp/tmp7enblxzv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7enblxzv.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshofpm16.php:28\n\
    Stack trace:\n#0 /tmp/tmpshofpm16.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpshofpm16.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp80k0919l.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp80k0919l.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp80k0919l.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp80k0919l.php(24): candidate('')\n#4 /tmp/tmp80k0919l.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp80k0919l.php on line 10\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace(['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n  \
    \  $numbers = array_map(function($number) {\n        return str_replace([0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers, separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'number' => $number,\n\
    \            'value' => [\n                'zero' => 0,\n                'one'\
    \ => 1,\n                'two' => 2,\n                'three' => 3,\n        \
    \        'four' => 4,\n                'five' => 5,\n                'six' =>\
    \ 6,\n                'seven' => 7,\n                'eight' => 8,\n         \
    \       'nine' => 9,\n            ][$number]\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    return implode(\" \", array_map(function($number) {\n        return\
    \ $number['number'];\n    }, $numbers));\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words sorted by length, alphabetically\
    \ if they are the same length.\n>>> sort_words(\"the quick brown fox\")\n\"fox\
    \ quick the brown\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key "" in /tmp/tmphtu7p2hg.php on line 23

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphzk3pki.php:28\n\
    Stack trace:\n#0 /tmp/tmpphzk3pki.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpphzk3pki.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"the quick brown fox jumps over the lazy dog\")\n\"\
    the dog fox the lazy over jumps quick brown\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm_k005j.php:70\n\
    Stack trace:\n#0 /tmp/tmpjm_k005j.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpjm_k005j.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers from 'zero' to 'nine' and 'plus' and 'minus'\
    \ signs.\nReturn the sum of the numbers.\n>>> calculate(\"one plus one\")\n2\n\
    >>> calculate(\"one plus one minus one\")\n1\n>>> calculate(\"two plus two minus\
    \ one\")\n3\n>>> calculate(\"zero plus eight\")\n8\n>>> calculate(\"nine minus\
    \ nine\")\n0\n>>> calculate(\"one plus four minus two\")\n3\n>>> calculate(\"\
    nine minus three plus two\")\n8\n>>> calculate(\"one plus four times two minus\
    \ two\")\n6\n>>> calculate(\"nine minus one times two plus two\")\n8\n>>> calculate(\"\
    zero plus eight divi\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpxo0fnvl0.php on
    line 19

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from largest to smallest.\n>>> sort_numbers_desc(\"\
    3 1 5\")\n\"5 3 1\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($num) {\n\t\tswitch ($num) {\n\t\t\tcase 'zero':\n\t\t\t\
    \treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\t\
    return 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\t\
    return 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\t\
    return 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\
    \treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\t\
    sort($numbers);\n\t$numbers = array_map(function($num) {\n\t\tswitch ($num) {\n\
    \t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\
    \t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\
    \t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\
    \t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\
    \t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\
    \t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers from 'zero' to 'nine'.\nValid choices are 'zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"three one five\"\
    )\n\"one three five\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi92w_0xn.php:71\n\
    Stack trace:\n#0 /tmp/tmpi92w_0xn.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpi92w_0xn.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n  $numbers_array = explode(\" \", $numbers);\n  $numbers_array\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers_array);\n\
    \  sort($numbers_array);\n  $numbers_array = array_map(function($number) {\n \
    \   switch ($number) {\n      case 0:\n        return 'zero';\n      case 1:\n\
    \        return 'one';\n      case 2:\n        return 'two';\n      case 3:\n\
    \        return 'three';\n      case 4:\n        return 'four';\n      case 5:\n\
    \        return 'five';\n      case 6:\n        return 'six';\n      case 7:\n\
    \        return 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n\
    \        return 'nine';\n    }\n  }, $numbers_array);\n  return implode(\" \"\
    , $numbers_array);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words sorted from shortest to longest.\n>>> sort_words(\"\
    one two three four five\")\n\"one two three four five\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3w9a4qjs.php:70\n\
    Stack trace:\n#0 /tmp/tmp3w9a4qjs.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp3w9a4qjs.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn str_replace([\"zero\", \"one\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn str_replace([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"], $number);\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string\
    \ with words sorted from shortest to longest.\n>>> sort_words(\"the quick brown\
    \ fox\")\n\"fox the quick brown\"*/\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words in reverse\
    \ order.\n>>> reverse_words(\"Hello world\")\n\"world Hello\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m88d7p8.php:70\n\
    Stack trace:\n#0 /tmp/tmp7m88d7p8.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp7m88d7p8.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4zxlggg.php:28\n\
    Stack trace:\n#0 /tmp/tmpt4zxlggg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt4zxlggg.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivx_p5e5.php:28\n\
    Stack trace:\n#0 /tmp/tmpivx_p5e5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpivx_p5e5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map('strtolower', $numbers);\n\t$numbers = array_map('number_to_digit',\
    \ $numbers);\n\tsort($numbers);\n\t$numbers = array_map('digit_to_number', $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"number_to_digit\" not found or\
    \ invalid function name in /tmp/tmp5kt1ute6.php:10\nStack trace:\n#0 /tmp/tmp5kt1ute6.php(10):\
    \ array_map('number_to_digit', Array)\n#1 /tmp/tmp5kt1ute6.php(17): sort_numbers(Array)\n\
    #2 /tmp/tmp5kt1ute6.php(21): candidate('')\n#3 /tmp/tmp5kt1ute6.php(28): test()\n\
    #4 {main}\n  thrown in /tmp/tmp5kt1ute6.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4zxlggg.php:28\n\
    Stack trace:\n#0 /tmp/tmpt4zxlggg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt4zxlggg.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphzk3pki.php:28\n\
    Stack trace:\n#0 /tmp/tmpphzk3pki.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpphzk3pki.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of lowercase letters.\nReturn the string with letters\
    \ sorted from smallest to largest.\n>>> sort_letters(\"cba\")\n\"abc\"*/\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63_lapp3.php:28\n\
    Stack trace:\n#0 /tmp/tmp63_lapp3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp63_lapp3.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words sorted by length, shortest first.\n>>> sort_by_length(\"\
    the quick brown fox\")\n\"fox the brown quick\"*/\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_d079wa.php:28\n\
    Stack trace:\n#0 /tmp/tmpd_d079wa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd_d079wa.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers from 'zero' to 'nine'.\nValid choices are 'zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\nReturn the string\
    \ with numbers sorted from smallest to largest\n>>> sort_numbers(\"three one five\"\
    )\n\"one three five\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey6r58n0.php:71\n\
    Stack trace:\n#0 /tmp/tmpey6r58n0.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpey6r58n0.php\
    \ on line 71\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_int($number);\n  \
    \  }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp81v8nx8_.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp81v8nx8_.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp81v8nx8_.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp81v8nx8_.php(24): candidate('')\n#4 /tmp/tmp81v8nx8_.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp81v8nx8_.php on line 10\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch($number)\
    \ {\n            case 0:\n                return 'zero';\n            case 1:\n\
    \                return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n        }\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09v_162t.php:70\n\
    Stack trace:\n#0 /tmp/tmp09v_162t.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp09v_162t.php\
    \ on line 70\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with the numbers sorted from smallest to largest.\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kvllse5.php:28\n\
    Stack trace:\n#0 /tmp/tmp6kvllse5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6kvllse5.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction\
    \ sort_numbers($numbers) {\n    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34sp4jm6.php:28\n\
    Stack trace:\n#0 /tmp/tmp34sp4jm6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp34sp4jm6.php\
    \ on line 28\n"
  timestamp: 1660220717

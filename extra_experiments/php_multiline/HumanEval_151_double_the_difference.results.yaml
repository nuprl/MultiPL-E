language: php
name: HumanEval_151_double_the_difference
results:
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are\nodd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4if_p2y.php:40\n\
    Stack trace:\n#0 /tmp/tmpq4if_p2y.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpq4if_p2y.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the two largest numbers.\n>>> sum_of_two_largest(array(1,\
    \ 2, 3))\n5\n>>> sum_of_two_largest(array(1, 2, 3, 4))\n7\n>>> sum_of_two_largest(array(1,\
    \ 2))\n3\n>>> sum_of_two_largest(array(1))\n0\nIf the input array is empty, return\
    \ 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += pow($value, 2);\n        }\n    }\n  \
    \  return $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0z1tups.php:40\n\
    Stack trace:\n#0 /tmp/tmps0z1tups.php(48): test()\n#1 {main}\n  thrown in /tmp/tmps0z1tups.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgex3h55k.php:40\n\
    Stack trace:\n#0 /tmp/tmpgex3h55k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgex3h55k.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqv06eah.php:40\n\
    Stack trace:\n#0 /tmp/tmpeqv06eah.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpeqv06eah.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num >=\
    \ 0) {\n      $sum += $num ** 2;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrumymtg.php:28\n\
    Stack trace:\n#0 /tmp/tmpdrumymtg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdrumymtg.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf46nk_j.php:28\n\
    Stack trace:\n#0 /tmp/tmpmf46nk_j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmf46nk_j.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp9g0smm.php:40\n\
    Stack trace:\n#0 /tmp/tmpjp9g0smm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjp9g0smm.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap06vtv7.php:28\n\
    Stack trace:\n#0 /tmp/tmpap06vtv7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap06vtv7.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num > 0 && is_int($num))\
    \ {\n            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprko4s760.php:28\n\
    Stack trace:\n#0 /tmp/tmprko4s760.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprko4s760.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of strings, return the sum of the lengths of the\
    \ strings\nthat are anagrams of each other. Ignore strings that are not anagrams\
    \ of\neach other.\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\"))\n\
    6\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\"))\n6\n>>>\
    \ double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"cat\"))\n\
    12\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\"))\n12\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"\
    dog\", \"cat\", \"dog\", \"cat\"))\n18\n>>> double_the_difference(array(\"cat\"\
    , \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"))\n18\n>>> double_the_difference(array(\"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    ))\n24\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"))\n24\n>>> double_the_difference(array(\"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\", \"cat\"))\n30\n>>> double_the_difference(array(\"cat\", \"dog\", \"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\"))\n30\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"\
    dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"\
    , \"cat\"))\n36\n>>> double_the_difference(array(\"cat\", \"\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpq2yl1swe.php on
    line 23

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgex3h55k.php:40\n\
    Stack trace:\n#0 /tmp/tmpgex3h55k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgex3h55k.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap06vtv7.php:28\n\
    Stack trace:\n#0 /tmp/tmpap06vtv7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap06vtv7.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_s78umb.php:40\n\
    Stack trace:\n#0 /tmp/tmpb_s78umb.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpb_s78umb.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 == 1 &&\
    \ is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n \
    \   }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7uc7qnl.php:28\n\
    Stack trace:\n#0 /tmp/tmpf7uc7qnl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf7uc7qnl.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdtulq10.php:28\n\
    Stack trace:\n#0 /tmp/tmppdtulq10.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppdtulq10.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $odd_squares = array_filter($lst, function($num) {\n        return is_int($num)\
    \ && $num > 0 && $num % 2 == 1;\n    });\n    $sum = array_reduce($odd_squares,\
    \ function($sum, $num) {\n        return $sum + $num * $num;\n    }, 0);\n   \
    \ return $sum * 2;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bm9cpu_.php:40\n\
    Stack trace:\n#0 /tmp/tmp2bm9cpu_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2bm9cpu_.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of squares of the numbers\nin the array that\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsp_meom.php:40\n\
    Stack trace:\n#0 /tmp/tmpdsp_meom.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdsp_meom.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdtulq10.php:28\n\
    Stack trace:\n#0 /tmp/tmppdtulq10.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppdtulq10.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\necho double_the_difference(array(1,\
    \ 3, 2, 0));\necho double_the_difference(array(-1, -2, 0));\necho double_the_difference(array(9,\
    \ -2));\necho double_the_difference(array(0));\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "140810\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3p8vsb2.php:33\n\
    Stack trace:\n#0 /tmp/tmpm3p8vsb2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm3p8vsb2.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1if423_t.php:40\n\
    Stack trace:\n#0 /tmp/tmp1if423_t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1if423_t.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdtulq10.php:28\n\
    Stack trace:\n#0 /tmp/tmppdtulq10.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppdtulq10.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum\
    \ * 2;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8eppp_ls.php:40\n\
    Stack trace:\n#0 /tmp/tmp8eppp_ls.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8eppp_ls.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqv06eah.php:40\n\
    Stack trace:\n#0 /tmp/tmpeqv06eah.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpeqv06eah.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjb8_t_p.php:40\n\
    Stack trace:\n#0 /tmp/tmpqjb8_t_p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqjb8_t_p.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_s78umb.php:40\n\
    Stack trace:\n#0 /tmp/tmpb_s78umb.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpb_s78umb.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gry7g0u.php:40\n\
    Stack trace:\n#0 /tmp/tmp9gry7g0u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9gry7g0u.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgex3h55k.php:40\n\
    Stack trace:\n#0 /tmp/tmpgex3h55k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgex3h55k.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers in the\
    \ list.\nIgnore all non-numeric values in the list.\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_numbers(array(1, 2, \"3\", 4, 5))\n12\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\"))\n21\n>>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\"\
    ))\n28\n>>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\", \"8\"))\n36\n>>>\
    \ sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\"))\n45\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\"))\n55\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"))\n66\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"))\n78\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"))\n91\n\
    >>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"\
    11\", \"12\", \"13\", \"14\"))\n105\n>>> sum_of_numbers(array(1, 2, 3, 4, 5, \"\
    6\", \"7\", \"8\",\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpjrgtbplb.php on
    line 23

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of squares of the numbers\n\
    in the array that are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp078cipdl.php:40\n\
    Stack trace:\n#0 /tmp/tmp078cipdl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp078cipdl.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers in the\
    \ list.\nIgnore numbers that are negative or not integers.\n>>> sum_of_positive_numbers(array(1,\
    \ 3, 2, 0))\n6\n>>> sum_of_positive_numbers(array(-1, -2, 0))\n0\n>>> sum_of_positive_numbers(array(9,\
    \ -2))\n9\n>>> sum_of_positive_numbers(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdemeuwx.php:40\n\
    Stack trace:\n#0 /tmp/tmpmdemeuwx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmdemeuwx.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of squares of the numbers\n\
    in the array that are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6flnbeg.php:40\n\
    Stack trace:\n#0 /tmp/tmph6flnbeg.php(48): test()\n#1 {main}\n  thrown in /tmp/tmph6flnbeg.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item >= 0 && $item % 2 == 1) {\n            $sum += $item * $item;\n      \
    \  }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the sum\
    \ of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptepn9xo2.php:40\n\
    Stack trace:\n#0 /tmp/tmptepn9xo2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptepn9xo2.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the squares of all the numbers\n\
    in the array that are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3x5668p.php:40\n\
    Stack trace:\n#0 /tmp/tmpq3x5668p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpq3x5668p.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array that\nare odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkwmts8x.php:40\n\
    Stack trace:\n#0 /tmp/tmptkwmts8x.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptkwmts8x.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given a list\
    \ of numbers, return the sum of the numbers in the list\nthat are even. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n2\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n0\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2502cw17.php:40\n\
    Stack trace:\n#0 /tmp/tmp2502cw17.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2502cw17.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $val) {\n    if (is_int($val) && $val > 0)\
    \ {\n      $sum += $val * $val;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22q89r66.php:40\n\
    Stack trace:\n#0 /tmp/tmp22q89r66.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp22q89r66.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf46nk_j.php:28\n\
    Stack trace:\n#0 /tmp/tmpmf46nk_j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmf46nk_j.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      $sum += $item * $item;\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3m7pobqi.php:40\n\
    Stack trace:\n#0 /tmp/tmp3m7pobqi.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3m7pobqi.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gry7g0u.php:40\n\
    Stack trace:\n#0 /tmp/tmp9gry7g0u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9gry7g0u.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\necho double_the_difference(array(1, 3, 2, 0));\necho double_the_difference(array(-1,\
    \ -2, 0));\necho double_the_difference(array(9, -2));\necho double_the_difference(array(0));\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "140810\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmnixayq.php:32\n\
    Stack trace:\n#0 /tmp/tmpfmnixayq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfmnixayq.php\
    \ on line 32\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdtulq10.php:28\n\
    Stack trace:\n#0 /tmp/tmppdtulq10.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppdtulq10.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxb_n0fm.php:28\n\
    Stack trace:\n#0 /tmp/tmpyxb_n0fm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyxb_n0fm.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the two largest\
    \ numbers.\n>>> sum_of_largest_two(array(1, 2, 3))\n5\n>>> sum_of_largest_two(array(1,\
    \ 2, 3, 4))\n7\n>>> sum_of_largest_two(array(1, 2))\n3\n>>> sum_of_largest_two(array(1))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1u_7sz8s.php:39\n\
    Stack trace:\n#0 /tmp/tmp1u_7sz8s.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1u_7sz8s.php\
    \ on line 39\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += pow($value, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given\
    \ a string, return true if it is a palindrome, and false otherwise.\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"abba\")\nTrue\n\
    >>> is_palindrome(\"racecar\")\nTrue\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    aabb\")\nFalse\n>>> is_palindrome(\"aabbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\nFalse\n>>> is_palindrome(\"aabbccbbaa\"\
    )\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\n\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmph6p3_98o.php on
    line 23

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap06vtv7.php:28\n\
    Stack trace:\n#0 /tmp/tmpap06vtv7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap06vtv7.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of integers, return the sum of the integers that\
    \ are\nmultiples of 3 or 5, but not both.\n>>> sum_of_multiples(array(1, 3, 5,\
    \ 7, 9))\n8\n>>> sum_of_multiples(array(0, 3, 5, 7, 9))\n15\n>>> sum_of_multiples(array(0,\
    \ 0, 0, 0, 0))\n0\n>>> sum_of_multiples(array(1, 2, 3, 4, 5))\n0\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n33\n>>> sum_of_multiples(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n60\n>>> sum_of_multiples(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n78\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30))\n195\n>>> sum_of_multiples(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40))\n495\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmp8f8jcbos.php on
    line 23

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 != 0 &&\
    \ is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n \
    \   }\n    return $sum;\n}\n\n/* Given an array of numbers, return the sum of\
    \ the numbers in the array\nthat are odd. Ignore numbers that are negative or\
    \ not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmv62q47.php:40\n\
    Stack trace:\n#0 /tmp/tmppmv62q47.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppmv62q47.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1if423_t.php:40\n\
    Stack trace:\n#0 /tmp/tmp1if423_t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1if423_t.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers in the\
    \ list\nthat are even. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n2\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n0\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdlrwha1.php:40\n\
    Stack trace:\n#0 /tmp/tmpfdlrwha1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfdlrwha1.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a string, return the sum of the numbers appearing in the\
    \ string,\n ignoring all other characters. A number is a series of 1 or more digit\
    \ chars\n in a row. (Note: Character.isDigit(char) tests if a char is one of the\
    \ chars\n '0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)\n\
    \n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"\
    7 11\")\n18\n*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuo4338tx.php:41\n\
    Stack trace:\n#0 /tmp/tmpuo4338tx.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpuo4338tx.php\
    \ on line 41\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjb8_t_p.php:40\n\
    Stack trace:\n#0 /tmp/tmpqjb8_t_p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqjb8_t_p.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxb_n0fm.php:28\n\
    Stack trace:\n#0 /tmp/tmpyxb_n0fm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyxb_n0fm.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers that are\
    \ even.\nIgnore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n2\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n0\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi44eddex.php:40\n\
    Stack trace:\n#0 /tmp/tmpi44eddex.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi44eddex.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item >= 0 && $item % 2 == 1) {\n            $sum += $item * $item;\n      \
    \  }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt8h5_l4.php:28\n\
    Stack trace:\n#0 /tmp/tmpnt8h5_l4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnt8h5_l4.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $value) {\n    if (is_int($value) && $value\
    \ > 0) {\n      $sum += $value * $value;\n    }\n  }\n  return $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzhsiven.php:40\n\
    Stack trace:\n#0 /tmp/tmpwzhsiven.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpwzhsiven.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq_uovty.php:28\n\
    Stack trace:\n#0 /tmp/tmphq_uovty.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphq_uovty.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_s78umb.php:40\n\
    Stack trace:\n#0 /tmp/tmpb_s78umb.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpb_s78umb.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap06vtv7.php:28\n\
    Stack trace:\n#0 /tmp/tmpap06vtv7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap06vtv7.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp9g0smm.php:40\n\
    Stack trace:\n#0 /tmp/tmpjp9g0smm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjp9g0smm.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\necho double_the_difference(array(1, 3, 2, 0));\necho double_the_difference(array(-1,\
    \ -2, 0));\necho double_the_difference(array(9, -2));\necho double_the_difference(array(0));\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "140810\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmnixayq.php:32\n\
    Stack trace:\n#0 /tmp/tmpfmnixayq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfmnixayq.php\
    \ on line 32\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num >= 0 && $num % 2 == 1) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the sum of\
    \ the numbers in the array that are odd.\nIgnore numbers that are negative or\
    \ not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqwaqspc.php:40\n\
    Stack trace:\n#0 /tmp/tmpgqwaqspc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgqwaqspc.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if ($num > 0 && $num % 2 ==\
    \ 1) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a list of numbers, return the sum of the numbers in the list\nthat are between\
    \ 1 and 10, inclusive. Ignore all other numbers.\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, 0))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, 0))\n55\n>>> sum_of_numbers_between_1_and_10(array(0))\n\
    0\n>>> sum_of_numbers_between_1_and_10(array(11))\n0\n>>> sum_of_numbers_between_1_and_10(\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmp53bfvx51.php on
    line 23

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num >= 0) {\n            if ($num % 2 != 0) {\n                $sum += $num\
    \ * $num;\n            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgpxu1kf.php:30\n\
    Stack trace:\n#0 /tmp/tmppgpxu1kf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgpxu1kf.php\
    \ on line 30\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdtulq10.php:28\n\
    Stack trace:\n#0 /tmp/tmppdtulq10.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppdtulq10.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $i) {\n        if (is_int($i) && $i >\
    \ 0) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1pndclc.php:28\n\
    Stack trace:\n#0 /tmp/tmpy1pndclc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy1pndclc.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of squares of the numbers\n\
    in the array that are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pqvord6.php:40\n\
    Stack trace:\n#0 /tmp/tmp2pqvord6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2pqvord6.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppneuomhq.php:40\n\
    Stack trace:\n#0 /tmp/tmppneuomhq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppneuomhq.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa22zlu_1.php:40\n\
    Stack trace:\n#0 /tmp/tmpa22zlu_1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpa22zlu_1.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 != 0 &&\
    \ is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n        }\n\
    \    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the sum of\
    \ squares of the numbers\nin the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq787xu8h.php:40\n\
    Stack trace:\n#0 /tmp/tmpq787xu8h.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpq787xu8h.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += pow($value, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuh877xtf.php:40\n\
    Stack trace:\n#0 /tmp/tmpuh877xtf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpuh877xtf.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array that are\
    \ odd.\nIgnore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5iqu54w.php:40\n\
    Stack trace:\n#0 /tmp/tmpc5iqu54w.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpc5iqu54w.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0)\
    \ {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2eznajcs.php:28\n\
    Stack trace:\n#0 /tmp/tmp2eznajcs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2eznajcs.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap06vtv7.php:28\n\
    Stack trace:\n#0 /tmp/tmpap06vtv7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap06vtv7.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgex3h55k.php:40\n\
    Stack trace:\n#0 /tmp/tmpgex3h55k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgex3h55k.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1if423_t.php:40\n\
    Stack trace:\n#0 /tmp/tmp1if423_t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1if423_t.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5tukwkk.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5tukwkk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd5tukwkk.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4uyz1c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4uyz1c.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4uyz1c.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array that are odd.\n\
    Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqd9392x9.php:40\n\
    Stack trace:\n#0 /tmp/tmpqd9392x9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqd9392x9.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array that are odd.\n\
    Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqd9392x9.php:40\n\
    Stack trace:\n#0 /tmp/tmpqd9392x9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqd9392x9.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq8572mw.php:40\n\
    Stack trace:\n#0 /tmp/tmpvq8572mw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvq8572mw.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgijejr8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpgijejr8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgijejr8m.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num > 0 && $num\
    \ % 2 == 1) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewra3njn.php:40\n\
    Stack trace:\n#0 /tmp/tmpewra3njn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpewra3njn.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4oakbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s4oakbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9s4oakbs.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      $sum += pow($item, 2);\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx2jk8wy.php:40\n\
    Stack trace:\n#0 /tmp/tmpmx2jk8wy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmx2jk8wy.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdriuzrv1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdriuzrv1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdriuzrv1.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array that are odd.\nIgnore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz3r9uxw.php:40\n\
    Stack trace:\n#0 /tmp/tmpuz3r9uxw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpuz3r9uxw.php\
    \ on line 40\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aylc9ru.php:40\n\
    Stack trace:\n#0 /tmp/tmp1aylc9ru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1aylc9ru.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl62z4bpj.php:28\n\
    Stack trace:\n#0 /tmp/tmpl62z4bpj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl62z4bpj.php\
    \ on line 28\n"
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an array of numbers, return the sum of squares of the\
    \ numbers\nin the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgex3h55k.php:40\n\
    Stack trace:\n#0 /tmp/tmpgex3h55k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgex3h55k.php\
    \ on line 40\n"
  timestamp: 1660220717

name: HumanEval_90_next_smallest
language: php
prompt: "<?php\n/* You are given an array of integers.\nWrite a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\nReturn null if there is no\
  \ such element.\n>>> next_smallest(array(1, 2, 3, 4, 5))\n2\n>>> next_smallest(array(5,\
  \ 1, 4, 3, 2))\n2\n>>> next_smallest(array())\nnull\n>>> next_smallest(array(1,\
  \ 1))\nnull*/\nfunction next_smallest($lst) {\n"
tests: "function candidate(...$args) {\n    return next_smallest(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 4, 3, 2)) !==\
  \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1))\
  \ !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1, 1, 1, 0)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-35,\
  \ 34, 12, -45)) !== -35) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (count($lst) < 2) {\n        return null;\n    }\n    $min =\
    \ min($lst);\n    $min2 = max($lst);\n    foreach ($lst as $item) {\n        if\
    \ ($item < $min2 && $item > $min) {\n            $min2 = $item;\n        }\n \
    \   }\n    if ($min2 == max($lst)) {\n        return null;\n    }\n    return\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho '<br>';\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho '<br>';\n$lst =\
    \ array();\necho next_smallest($lst);\necho '<br>';\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho '<br>';", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $item) {\n        if ($item > $min) {\n            if ($min2 === null || $item\
    \ < $min2) {\n                $min2 = $item;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $sec_min = null;\n    foreach ($lst as $val)\
    \ {\n        if ($val < $min) {\n            $sec_min = $min;\n            $min\
    \ = $val;\n        } elseif ($val < $sec_min || $sec_min === null) {\n       \
    \     $sec_min = $val;\n        }\n    }\n    return $sec_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n   \
    \     if ($item == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = null;\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1,\
    \ 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "    if (count($lst) < 2) return null;\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n\n/* You\
    \ are given an array of integers.\nWrite a function next_largest() that returns\
    \ the 2nd largest element of the array.\nReturn null if there is no such element.\n\
    >>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3,\
    \ 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/",
  "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $i) {\n        if\
    \ ($i > $min) {\n            if ($min2 === null) {\n                $min2 = $i;\n\
    \            } else {\n                $min2 = min($min2, $i);\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n   \
    \ for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n   \
    \         $second_min = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $second_min || $second_min == null) {\n            $second_min =\
    \ $lst[$i];\n        }\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2,\
    \ 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "\t$min = min($lst);\n\t$min2 = null;\n\tforeach ($lst as $v) {\n\t\tif ($v > $min)\
    \ {\n\t\t\tif ($min2 === null || $v < $min2) {\n\t\t\t\t$min2 = $v;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $min2;\n}\n", "    $min = min($lst);\n    $min2 = $min;\n\
    \    foreach ($lst as $value) {\n        if ($value > $min && $value < $min2)\
    \ {\n            $min2 = $value;\n        }\n    }\n    if ($min2 == $min) {\n\
    \        return null;\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";",
  "\tif(count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$min = $lst[0];\n\t$min2 = $lst[1];\n\
    \tfor($i = 1; $i < count($lst); $i++) {\n\t\tif($lst[$i] < $min) {\n\t\t\t$min2\
    \ = $min;\n\t\t\t$min = $lst[$i];\n\t\t} else if($lst[$i] < $min2) {\n\t\t\t$min2\
    \ = $lst[$i];\n\t\t}\n\t}\n\tif($min2 == $min) {\n\t\treturn null;\n\t}\n\treturn\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min) {\n            if ($min2 === null\
    \ || $item < $min2) {\n                $min2 = $item;\n            }\n       \
    \ }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $next_min = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $next_min = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $next_min || $next_min == null) {\n            $next_min = $lst[$i];\n\
    \        }\n    }\n    return $next_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $next_min = null;\n   \
    \ foreach ($lst as $num) {\n        if ($num < $min) {\n            $next_min\
    \ = $min;\n            $min = $num;\n        } else if ($num < $next_min || $next_min\
    \ === null) {\n            $next_min = $num;\n        }\n    }\n    return $next_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n/* You are\
    \ given an array of integers.\nWrite a function next_largest() that returns the\
    \ 2nd largest element of the array.\nReturn null if there is no such element.\n\
    >>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3,\
    \ 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/",
  "    $lst = array_unique($lst);\n    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    sort($lst);\n    return $lst[1];\n}\n\n/*\nWrite a function that takes\
    \ a string and returns a new string with all vowels removed.\n>>> remove_vowels('hello')\n\
    'hll'\n>>> remove_vowels('why')\n'why'\n*/", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n   \
    \ for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n   \
    \         $next_min = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $next_min) {\n            $next_min = $lst[$i];\n        }\n    }\n    return\
    \ $next_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $secondMin = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $secondMin = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $secondMin || $secondMin == null) {\n            $secondMin =\
    \ $lst[$i];\n        }\n    }\n    return $secondMin;\n}\n\n$lst = array(1, 2,\
    \ 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    if (count($lst)\
    \ == 0) {\n        return null;\n    }\n    return min($lst);\n}\n\n/* You are\
    \ given an array of integers.\nWrite a function next_largest() that returns the\
    \ 2nd largest element of the array.\nReturn null if there is no such element.\n\
    >>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3,\
    \ 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $x) {\n        if ($x > $min) {\n   \
    \         if ($min2 === null || $x < $min2) {\n                $min2 = $x;\n \
    \           }\n        }\n    }\n    return $min2;\n}\n\n/* You are given an array\
    \ of integers.\nWrite a function next_largest() that returns the 2nd largest element\
    \ of the array.\nReturn null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n   \
    \ foreach ($lst as $item) {\n        if ($item < $min) {\n            $second_min\
    \ = $min;\n            $min = $item;\n        } elseif ($item < $second_min ||\
    \ $second_min === null) {\n            $second_min = $item;\n        }\n    }\n\
    \    return $second_min;\n}\n\n/* You are given an array of integers.\nWrite a\
    \ function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $elem) {\n        if ($elem > $min) {\n            if ($min2\
    \ == null) {\n                $min2 = $elem;\n            } else {\n         \
    \       $min2 = min($min2, $elem);\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n \
    \   foreach ($lst as $item) {\n        if ($item == $min) {\n            continue;\n\
    \        }\n        if ($min2 == null || $item < $min2) {\n            $min2 =\
    \ $item;\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min == null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1,\
    \ 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst\
    \ as $item) {\n        if ($item > $min && $item < $min2) {\n            $min2\
    \ = $item;\n        }\n    }\n    if ($min2 == $min) {\n        return null;\n\
    \    }\n    return $min2;\n}\n\n/* You are given an array of integers.\nWrite\
    \ a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "\tif (count($lst) < 2) {\n\t\treturn\
    \ null;\n\t}\n\t$min = min($lst);\n\t$min2 = null;\n\tforeach ($lst as $item)\
    \ {\n\t\tif ($item > $min) {\n\t\t\tif ($min2 === null || $item < $min2) {\n\t\
    \t\t\t$min2 = $item;\n\t\t\t}\n\t\t}\n\t}\n\treturn $min2;\n}\n\n/* You are given\
    \ an array of integers.\nWrite a function next_largest() that returns the 2nd\
    \ largest element of the array.\nReturn null if there is no such element.\n>>>\
    \ next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n\
    4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/", " \
    \   $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    return $lst[1];\n}\n\n/*\nYou are given an array\
    \ of integers. Write a function next_largest() that returns the 2nd largest element\
    \ of the array. Return null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull\n*/", "\t$min = min($lst);\n\t$min2\
    \ = null;\n\tforeach ($lst as $item) {\n\t\tif ($item > $min) {\n\t\t\tif ($min2\
    \ === null || $item < $min2) {\n\t\t\t\t$min2 = $item;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $min2 = $min;\n    foreach ($lst as $item) {\n        if ($item > $min && $item\
    \ < $min2) {\n            $min2 = $item;\n        }\n    }\n    if ($min2 == $min)\
    \ {\n        return null;\n    }\n    return $min2;\n}\n\n/*\nYou are given a\
    \ list of integers.\nWrite a function that returns the largest product that can\
    \ be made by multiplying any three integers in the list.\n>>> largest_product(array(1,\
    \ 2, 3, 4, 5))\n60\n>>> largest_product(array(5, 1, 4, 3, 2))\n60\n>>> largest_product(array())\n\
    null\n>>> largest_product(array(1, 1))\nnull\n*/", "    $min = min($lst);\n  \
    \  $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 == null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 == null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min &&\
    \ ($min2 === null || $item < $min2)) {\n            $min2 = $item;\n        }\n\
    \    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1, 1];\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min == null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $v) {\n        if ($v > $min) {\n            if ($min2 === null ||\
    \ $v < $min2) {\n                $min2 = $v;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $min2 =\
    \ $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n\
    \            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n    \
    \    return null;\n    }\n    return min($lst);\n}\n\necho next_smallest(array(1,\
    \ 2, 3, 4, 5)) . \"\\n\";\necho next_smallest(array(5, 1, 4, 3, 2)) . \"\\n\"\
    ;\necho next_smallest(array()) . \"\\n\";\necho next_smallest(array(1, 1)) . \"\
    \\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min =\
    \ $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ == null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n   \
    \     if ($item > $min) {\n            if ($min2 === null || $item < $min2) {\n\
    \                $min2 = $item;\n            }\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (count($lst) > 0) {\n        return min($lst);\n    }\
    \ else {\n        return null;\n    }\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as\
    \ $item) {\n        if ($item > $min && $item < $min2) {\n            $min2 =\
    \ $item;\n        }\n    }\n    if ($min2 == $min) {\n        return null;\n \
    \   }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $item)\
    \ {\n        if ($item > $min && $item < $min2) {\n            $min2 = $item;\n\
    \        }\n    }\n    if ($min2 == $min) {\n        return null;\n    }\n   \
    \ return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n\
    \    $min2 = PHP_INT_MAX;\n    foreach ($lst as $item) {\n        if ($item >\
    \ $min && $item < $min2) {\n            $min2 = $item;\n        }\n    }\n   \
    \ return $min2 == PHP_INT_MAX ? null : $min2;\n}\n\n/*\nYou are given an array\
    \ of integers.\nWrite a function next_largest() that returns the 2nd largest element\
    \ of the array.\nReturn null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull\n*/", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $sec_min = $lst[1];\n \
    \   for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n \
    \           $sec_min = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $sec_min) {\n            $sec_min = $lst[$i];\n        }\n    }\n    return\
    \ $sec_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\\
    n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst\
    \ = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "\t$min = $lst[0];\n\t$second_min = null;\n\tforeach ($lst as $value)\
    \ {\n\t\tif ($value < $min) {\n\t\t\t$second_min = $min;\n\t\t\t$min = $value;\n\
    \t\t} elseif ($value < $second_min) {\n\t\t\t$second_min = $value;\n\t\t}\n\t\
    }\n\treturn $second_min;\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (count($lst) == 0) {\n        return null;\n    }\n  \
    \  return min($lst);\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    $min = null;\n    $second_min = null;\n\
    \    foreach ($lst as $item) {\n        if ($min === null || $item < $min) {\n\
    \            $second_min = $min;\n            $min = $item;\n        } else if\
    \ ($second_min === null || $item < $second_min) {\n            $second_min = $item;\n\
    \        }\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min && ($min2 === null ||\
    \ $item < $min2)) {\n            $min2 = $item;\n        }\n    }\n    return\
    \ $min2;\n}\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as\
    \ $item) {\n        if ($item > $min && $item < $min2) {\n            $min2 =\
    \ $item;\n        }\n    }\n    if ($min2 == $min) {\n        return null;\n \
    \   }\n    return $min2;\n}\n\nprint_r(next_smallest([1, 2, 3, 4, 5]));\nprint_r(next_smallest([5,\
    \ 1, 4, 3, 2]));\nprint_r(next_smallest([]));\nprint_r(next_smallest([1, 1]));",
  "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $val) {\n      \
    \  if ($val > $min && ($min2 === null || $val < $min2)) {\n            $min2 =\
    \ $val;\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst) . PHP_EOL;\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . PHP_EOL;\n$lst = array();\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = array(1, 1);\necho next_smallest($lst) . PHP_EOL;", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n \
    \   $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n \
    \   }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (empty($lst)) {\n        return null;\n    }\n    return\
    \ min($lst);\n}\n\n/* You are given an array of integers.\nWrite a function next_largest()\
    \ that returns the 2nd largest element of the array.\nReturn null if there is\
    \ no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "\t$min = min($lst);\n\t$min_index = array_search($min, $lst);\n\
    \tunset($lst[$min_index]);\n\t$min2 = min($lst);\n\tif ($min2 == $min) {\n\t\t\
    return null;\n\t}\n\treturn $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = $lst[0];\n    $min2\
    \ = null;\n    foreach ($lst as $item) {\n        if ($item < $min) {\n      \
    \      $min2 = $min;\n            $min = $item;\n        } elseif ($item < $min2\
    \ || $min2 === null) {\n            $min2 = $item;\n        }\n    }\n    return\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\
    <br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\"\
    ;\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"<br>\";", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n\n/*\nWrite a function that takes a string and returns\
    \ true if it is a palindrome.\nA palindrome is a string that is the same whether\
    \ written backward or forward.\nAssume that there are no spaces; only lowercase\
    \ letters will be given.\n>>> is_palindrome(\"a\")\ntrue\n>>> is_palindrome(\"\
    motor\")\nfalse\n>>> is_palindrome(\"rotor\")\ntrue\n*/", "\tif (count($lst) <\
    \ 2) {\n\t\treturn null;\n\t}\n\t$min = min($lst);\n\t$min2 = null;\n\tforeach\
    \ ($lst as $v) {\n\t\tif ($v > $min) {\n\t\t\tif ($min2 === null || $v < $min2)\
    \ {\n\t\t\t\t$min2 = $v;\n\t\t\t}\n\t\t}\n\t}\n\treturn $min2;\n}\n\necho next_smallest(array(1,\
    \ 2, 3, 4, 5));\necho \"\\n\";\necho next_smallest(array(5, 1, 4, 3, 2));\necho\
    \ \"\\n\";\necho next_smallest(array());\necho \"\\n\";\necho next_smallest(array(1,\
    \ 1));\necho \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n  \
    \  }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n            $min2\
    \ = $lst[$i];\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $elem) {\n        if ($elem > $min) {\n\
    \            if ($min2 === null || $elem < $min2) {\n                $min2 = $elem;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $next_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $next_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $next_min || $next_min == null) {\n           \
    \ $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n\n/* You\
    \ are given an array of integers.\nWrite a function next_largest() that returns\
    \ the 2nd largest element of the array.\nReturn null if there is no such element.\n\
    >>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3,\
    \ 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min == null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n/*\n * Write a function that takes a string and returns an array of all the\
    \ anagrams of that string.\n * For example, given the string \"cba\", your function\
    \ should return [\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"].\n * >>>\
    \ anagrams(\"cba\")\n * [\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"\
    ]\n * >>> anagrams(\"abc\")\n * [\"abc\", \"acb\", \"bac\", \"bca\", \"cab\",\
    \ \"cba\"]\n * >>> anagrams(\"\")\n * []\n * >>> anagrams(\"a\")\n * [\"a\"]\n\
    \ * >>> anagrams(\"ab\")\n * [\"ab\", \"ba\"]\n */", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second_min = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $second_min || $second_min == null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "\tif (count($lst)\
    \ < 2) {\n\t\treturn null;\n\t}\n\t$min = $lst[0];\n\t$next_min = $lst[1];\n\t\
    for ($i = 1; $i < count($lst); $i++) {\n\t\tif ($lst[$i] < $min) {\n\t\t\t$next_min\
    \ = $min;\n\t\t\t$min = $lst[$i];\n\t\t} else if ($lst[$i] < $next_min) {\n\t\t\
    \t$next_min = $lst[$i];\n\t\t}\n\t}\n\treturn $next_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $v) {\n        if ($v > $min) {\n   \
    \         if ($min2 === null || $v < $min2) {\n                $min2 = $v;\n \
    \           }\n        }\n    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1,\
    \ 1];\necho next_smallest($lst);\necho \"\\n\";", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $num) {\n        if ($num > $min) {\n            if ($min2\
    \ === null || $num < $min2) {\n                $min2 = $num;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (empty($lst)) {\n        return null;\n    }\n    return\
    \ min($lst);\n}\n", "\t$min = min($lst);\n\t$min2 = $min;\n\tforeach ($lst as\
    \ $value) {\n\t\tif ($value > $min && $value < $min2) {\n\t\t\t$min2 = $value;\n\
    \t\t}\n\t}\n\tif ($min2 == $min) {\n\t\treturn null;\n\t}\n\treturn $min2;\n}\n\
    echo next_smallest(array(1, 2, 3, 4, 5));\necho next_smallest(array(5, 1, 4, 3,\
    \ 2));\necho next_smallest(array());\necho next_smallest(array(1, 1));", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n    \
    \    return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $value) {\n\
    \        if ($value == $min) {\n            $min_count++;\n        } elseif ($second_min\
    \ == null || $value < $second_min) {\n            $second_min = $value;\n    \
    \    }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst\
    \ as $item) {\n        if ($item > $min && $item < $min2) {\n            $min2\
    \ = $item;\n        }\n    }\n    if ($min2 == $min) {\n        return null;\n\
    \    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $min2 = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n       \
    \     $min2 = $min;\n            $min = $lst[$i];\n        } else if ($min2 ===\
    \ null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n\
    \    return $min2;\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $v) {\n        if ($v > $min) {\n            if ($min2 ==\
    \ null || $v < $min2) {\n                $min2 = $v;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = max($lst);\n\
    \    foreach ($lst as $item) {\n        if ($item < $min2 && $item > $min) {\n\
    \            $min2 = $item;\n        }\n    }\n    if ($min2 == max($lst)) {\n\
    \        return null;\n    }\n    return $min2;\n}\n\n/*\nWrite a function that\
    \ takes a string and returns the number of vowels in the string.\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\")\n0\n*/", " \
    \   $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n    \
    \    if ($item > $min) {\n            if ($min2 === null || $item < $min2) {\n\
    \                $min2 = $item;\n            }\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ [5, 1, 4, 3, 2];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [];\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = [1, 1];\necho next_smallest($lst);\n\
    echo \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    return $lst[1];\n}\n\necho next_smallest([1,\
    \ 2, 3, 4, 5]);\necho next_smallest([5, 1, 4, 3, 2]);\necho next_smallest([]);\n\
    echo next_smallest([1, 1]);", "    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $elem) {\n        if ($elem > $min) {\n            if ($min2 == null\
    \ || $elem < $min2) {\n                $min2 = $elem;\n            }\n       \
    \ }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $next_min)\
    \ {\n            $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n\
    }\n", "\t$lst = array_unique($lst);\n\tsort($lst);\n\tif (count($lst) < 2) {\n\
    \t\treturn null;\n\t}\n\treturn $lst[1];\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "\tif (count($lst) < 2) {\n\t\treturn\
    \ null;\n\t}\n\t$min = $lst[0];\n\t$next = null;\n\tforeach ($lst as $val) {\n\
    \t\tif ($val < $min) {\n\t\t\t$next = $min;\n\t\t\t$min = $val;\n\t\t} else if\
    \ ($val < $next || $next === null) {\n\t\t\t$next = $val;\n\t\t}\n\t}\n\treturn\
    \ $next;\n}\n\necho next_smallest(array(1, 2, 3, 4, 5)) . \"\\n\";\necho next_smallest(array(5,\
    \ 1, 4, 3, 2)) . \"\\n\";\necho next_smallest(array()) . \"\\n\";\necho next_smallest(array(1,\
    \ 1)) . \"\\n\";", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $val) {\n        if ($val > $min) {\n            if ($min2 === null || $val\
    \ < $min2) {\n                $min2 = $val;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = PHP_INT_MAX;\n    foreach ($lst\
    \ as $num) {\n        if ($num > $min && $num < $min2) {\n            $min2 =\
    \ $num;\n        }\n    }\n    return $min2 == PHP_INT_MAX ? null : $min2;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min == null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n    \
    \    return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach\
    \ ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $min_index = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (count($lst) == 0) {\n        return null;\n    }\n  \
    \  return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "\t$min = min($lst);\n\
    \t$lst = array_diff($lst, array($min));\n\tif (empty($lst)) {\n\t\treturn null;\n\
    \t}\n\treturn min($lst);\n}\n\n/* You are given an array of integers.\nWrite a\
    \ function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $num) {\n        if ($num == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst_left = array_slice($lst,\
    \ 0, $min_index);\n    $lst_right = array_slice($lst, $min_index + 1);\n    if\
    \ (count($lst_left) > 0) {\n        $max_left = max($lst_left);\n        if (count($lst_right)\
    \ > 0) {\n            $min_right = min($lst_right);\n            return min($max_left,\
    \ $min_right);\n        } else {\n            return $max_left;\n        }\n \
    \   } else {\n        return min($lst_right);\n    }\n}\n", "    $min = $lst[0];\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item < $min) {\n\
    \            $min2 = $min;\n            $min = $item;\n        } else if ($item\
    \ < $min2) {\n            $min2 = $item;\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst);\necho \"<br>\";", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $num) {\n        if ($num == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = null;\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $min2 = null;\n    foreach\
    \ ($lst as $elem) {\n        if ($elem < $min) {\n            $min2 = $min;\n\
    \            $min = $elem;\n        } elseif ($elem < $min2 || $min2 === null)\
    \ {\n            $min2 = $elem;\n        }\n    }\n    return $min2;\n}\n\n$lst\
    \ = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    $len = count($lst);\n    if ($len == 0) {\n        return\
    \ null;\n    }\n    if ($len == 1) {\n        return null;\n    }\n    $min =\
    \ $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < $len; $i++) {\n      \
    \  if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n\n/* You\
    \ are given an array of integers.\nWrite a function next_largest() that returns\
    \ the 2nd largest element of the array.\nReturn null if there is no such element.\n\
    >>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3,\
    \ 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n\n$lst =\
    \ array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n\n/* You are given an array of integers.\nWrite a function next_largest() that\
    \ returns the 2nd largest element of the array.\nReturn null if there is no such\
    \ element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n", "    $min = $lst[0];\n    $min2 = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $min2 || $min2 == null)\
    \ {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_idx = array_search($min, $lst);\n\
    \    unset($lst[$min_idx]);\n    return min($lst);\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho '<br>';\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho '<br>';\n$lst = array();\necho next_smallest($lst);\n\
    echo '<br>';\n$lst = array(1, 1);\necho next_smallest($lst);\necho '<br>';", " \
    \   $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = INF;\n    return min($lst);\n}\n\n$lst = [1,\
    \ 2, 3, 4, 5];\necho next_smallest($lst);\necho PHP_EOL;\n$lst = [5, 1, 4, 3,\
    \ 2];\necho next_smallest($lst);\necho PHP_EOL;\n$lst = [];\necho next_smallest($lst);\n\
    echo PHP_EOL;\n$lst = [1, 1];\necho next_smallest($lst);\necho PHP_EOL;", "\t\
    $min = min($lst);\n\t$min_key = array_search($min, $lst);\n\tunset($lst[$min_key]);\n\
    \t$min2 = min($lst);\n\treturn $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1, 1];\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min == null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $val) {\n        if ($val > $min) {\n            if ($min2 === null || $val\
    \ < $min2) {\n                $min2 = $val;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item)\
    \ {\n        if ($item > $min) {\n            if ($min2 === null || $item < $min2)\
    \ {\n                $min2 = $item;\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst, array($min));\n\
    \    if (empty($lst)) {\n        return null;\n    }\n    return min($lst);\n\
    }\n\n/* You are given an array of integers.\nWrite a function next_largest() that\
    \ returns the 2nd largest element of the array.\nReturn null if there is no such\
    \ element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $item) {\n      \
    \  if ($item > $min && $item < $min2) {\n            $min2 = $item;\n        }\n\
    \    }\n    if ($min2 == $min) {\n        return null;\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i] < $second_min\
    \ || $second_min == null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n \
    \   foreach ($lst as $value) {\n        if ($value < $min) {\n            $second_min\
    \ = $min;\n            $min = $value;\n        } elseif ($value > $min && ($second_min\
    \ === null || $value < $second_min)) {\n            $second_min = $value;\n  \
    \      }\n    }\n    return $second_min;\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "\tif (count($lst) < 2) {\n\t\treturn\
    \ null;\n\t}\n\t$min = $lst[0];\n\t$second_min = $lst[1];\n\tfor ($i = 1; $i <\
    \ count($lst); $i++) {\n\t\tif ($lst[$i] < $min) {\n\t\t\t$second_min = $min;\n\
    \t\t\t$min = $lst[$i];\n\t\t} else if ($lst[$i] < $second_min) {\n\t\t\t$second_min\
    \ = $lst[$i];\n\t\t}\n\t}\n\tif ($second_min == $min) {\n\t\treturn null;\n\t\
    }\n\treturn $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $val) {\n        if ($val > $min) {\n            if ($min2 === null\
    \ || $val < $min2) {\n                $min2 = $val;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n\n/* You are given an array of integers.\nWrite\
    \ a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    $min = null;\n    $second_min = null;\n\
    \    foreach ($lst as $num) {\n        if ($min === null || $num < $min) {\n \
    \           $second_min = $min;\n            $min = $num;\n        } else if ($second_min\
    \ === null || $num < $second_min) {\n            $second_min = $num;\n       \
    \ }\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\necho next_smallest([1,\
    \ 2, 3, 4, 5]);\necho next_smallest([5, 1, 4, 3, 2]);\necho next_smallest([]);\n\
    echo next_smallest([1, 1]);", "    $min = min($lst);\n    $min_idx = array_search($min,\
    \ $lst);\n    unset($lst[$min_idx]);\n    $min2 = min($lst);\n    if ($min2 ==\
    \ $min) {\n        return null;\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $elem) {\n        if ($elem > $min) {\n            if ($min2\
    \ === null || $elem < $min2) {\n                $min2 = $elem;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min) {\n            if ($min2 === null\
    \ || $item < $min2) {\n                $min2 = $item;\n            }\n       \
    \ }\n    }\n    return $min2;\n}\n\necho next_smallest([1, 2, 3, 4, 5]);\necho\
    \ next_smallest([5, 1, 4, 3, 2]);\necho next_smallest([]);\necho next_smallest([1,\
    \ 1]);", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = PHP_INT_MAX;\n    foreach ($lst as $val)\
    \ {\n        if ($val == $min) {\n            $min_count++;\n        } else if\
    \ ($val < $second_min) {\n            $second_min = $val;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i =\
    \ 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";\n", "    if (count($lst) < 2) {\n      \
    \  return null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min && $item < $min2) {\n          \
    \  $min2 = $item;\n        }\n    }\n    if ($min2 == $min) {\n        return\
    \ null;\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min) {\n            if ($min2 === null\
    \ || $item < $min2) {\n                $min2 = $item;\n            }\n       \
    \ }\n    }\n    return $min2;\n}\n", "    $min = min($lst);\n    $max = max($lst);\n\
    \    $count = count($lst);\n    if ($count == 0) {\n        return null;\n   \
    \ }\n    if ($count == 1) {\n        return null;\n    }\n    if ($count == 2)\
    \ {\n        if ($lst[0] == $lst[1]) {\n            return null;\n        }\n\
    \    }\n    $lst = array_unique($lst);\n    $count = count($lst);\n    if ($count\
    \ == 2) {\n        return $lst[1];\n    }\n    $lst = array_diff($lst, array($min));\n\
    \    $count = count($lst);\n    if ($count == 1) {\n        return $lst[0];\n\
    \    }\n    $lst = array_diff($lst, array($max));\n    $count = count($lst);\n\
    \    if ($count == 1) {\n        return $lst[0];\n    }\n    $lst = array_unique($lst);\n\
    \    $count = count($lst);\n    if ($count == 2) {\n        return $lst[1];\n\
    \    }\n    return null;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11);\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 2, 3, 4, 5, 6, 7,", "    $min = min($lst);\n    $min2 = $min;\n \
    \   foreach ($lst as $item) {\n        if ($item > $min && $item < $min2) {\n\
    \            $min2 = $item;\n        }\n    }\n    if ($min2 == $min) {\n    \
    \    return null;\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = [];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [1, 1];\necho next_smallest($lst);\necho \"\\n\";", "  \
    \  if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $sec_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $sec_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $sec_min) {\n            $sec_min = $lst[$i];\n\
    \        }\n    }\n    return $sec_min;\n}\n", "    if (count($lst) < 2) {\n \
    \       return null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min && $item < $min2) {\n          \
    \  $min2 = $item;\n        }\n    }\n    if ($min2 == $min) {\n        return\
    \ null;\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "\t$lst = array_unique($lst);\n\
    \tsort($lst);\n\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\treturn $lst[1];\n\
    }\n\n/*\nYou are given an array of integers.\nWrite a function next_largest()\
    \ that returns the 2nd largest element of the array.\nReturn null if there is\
    \ no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull\n*/", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $val) {\n        if ($val > $min && ($min2 === null || $val < $min2)) {\n\
    \            $min2 = $val;\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n      \
    \  if ($lst[$i] < $min) {\n            $next_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $next_min) {\n            $next_min = $lst[$i];\n\
    \        }\n    }\n    return $next_min;\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $sec_min = null;\n    for ($i = 1; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $sec_min\
    \ = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i] < $sec_min\
    \ || $sec_min == null) {\n            $sec_min = $lst[$i];\n        }\n    }\n\
    \    return $sec_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = INF;\n    $min = min($lst);\n    return $min;\n}\n\n/* You are given an array\
    \ of integers.\nWrite a function next_largest() that returns the 2nd largest element\
    \ of the array.\nReturn null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2\
    \ = null;\n    foreach ($lst as $v) {\n        if ($v > $min && ($min2 === null\
    \ || $v < $min2)) {\n            $min2 = $v;\n        }\n    }\n    return $min2;\n\
    }\n\necho next_smallest([1, 2, 3, 4, 5]);\necho next_smallest([5, 1, 4, 3, 2]);\n\
    echo next_smallest([]);\necho next_smallest([1, 1]);", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min && $item < $min2) {\n\
    \            $min2 = $item;\n        }\n    }\n    if ($min2 == $min) {\n    \
    \    return null;\n    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1,\
    \ 1];\necho next_smallest($lst);\necho \"\\n\";", "    $lst = array_unique($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    sort($lst);\n  \
    \  return $lst[1];\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $n) {\n        if ($n > $min && ($min2 === null || $n <\
    \ $min2)) {\n            $min2 = $n;\n        }\n    }\n    return $min2;\n}\n\
    \n/* You are given an array of integers.\nWrite a function next_largest() that\
    \ returns the 2nd largest element of the array.\nReturn null if there is no such\
    \ element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    if (count($lst)\
    \ == 0) {\n        return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $second || $second == null) {\n            $second = $lst[$i];\n\
    \        }\n    }\n    return $second;\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $i) {\n        if ($i > $min && ($min2 == null || $i < $min2)) {\n\
    \            $min2 = $i;\n        }\n    }\n    return $min2;\n}\n", "\t$min =\
    \ min($lst);\n\t$min2 = PHP_INT_MAX;\n\tforeach ($lst as $val) {\n\t\tif ($val\
    \ > $min && $val < $min2) {\n\t\t\t$min2 = $val;\n\t\t}\n\t}\n\treturn $min2 ==\
    \ PHP_INT_MAX ? null : $min2;\n}\n\n/* You are given an array of integers.\nWrite\
    \ a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, array($min));\n\
    \    if (count($lst) == 0) {\n        return null;\n    }\n    return min($lst);\n\
    }\n\n/* You are given an array of integers.\nWrite a function next_largest() that\
    \ returns the 2nd largest element of the array.\nReturn null if there is no such\
    \ element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n\n/* You are given an array of integers.\nWrite a function next_largest() that\
    \ returns the 2nd largest element of the array.\nReturn null if there is no such\
    \ element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $val) {\n        if ($val > $min) {\n            if ($min2 === null || $val\
    \ < $min2) {\n                $min2 = $val;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n",
  "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n     \
    \   if ($item > $min) {\n            if ($min2 === null || $item < $min2) {\n\
    \                $min2 = $item;\n            }\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst);\necho \"<br>\";", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $val) {\n        if ($val > $min) {\n            if ($min2 === null\
    \ || $val < $min2) {\n                $min2 = $val;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n\n/*\n * Write a function that returns the number\
    \ of times that the string \"code\" appears anywhere in the given string, except\
    \ we'll accept any letter for the 'd', so \"cope\" and \"cooe\" count.\n>>> count_code('aaacodebbb')\n\
    1\n>>> count_code('codexxcode')\n2\n>>> count_code('cozexxcope')\n2\n */", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n    \
    \    return null;\n    }\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "\t$min = min($lst);\n\t$lst = array_diff($lst, array($min));\n\tif (count($lst)\
    \ == 0) {\n\t\treturn null;\n\t}\n\treturn min($lst);\n}\n\n/* You are given an\
    \ array of integers.\nWrite a function next_largest() that returns the 2nd largest\
    \ element of the array.\nReturn null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $lst[array_search($min,\
    \ $lst)] = PHP_INT_MAX;\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n", "    $min = $lst[0];\n\
    \    $min2 = null;\n    foreach ($lst as $num) {\n        if ($num < $min) {\n\
    \            $min2 = $min;\n            $min = $num;\n        } elseif ($num <\
    \ $min2 || $min2 === null) {\n            $min2 = $num;\n        }\n    }\n  \
    \  return $min2;\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $elem) {\n        if ($elem > $min) {\n            if ($min2 === null || $elem\
    \ < $min2) {\n                $min2 = $elem;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1, 1];\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $i) {\n        if ($i > $min) {\n            if ($min2 == null) {\n        \
    \        $min2 = $i;\n            } else {\n                $min2 = min($min2,\
    \ $i);\n            }\n        }\n    }\n    return $min2;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5, 1,\
    \ 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$min = min($lst);\n\
    \t$min2 = $min;\n\tforeach ($lst as $val) {\n\t\tif ($val < $min2 && $val > $min)\
    \ {\n\t\t\t$min2 = $val;\n\t\t}\n\t}\n\tif ($min2 == $min) {\n\t\treturn null;\n\
    \t}\n\treturn $min2;\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($smallest === null || $item\
    \ < $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $item;\n        } else if ($second_smallest === null || $item < $second_smallest)\
    \ {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $value) {\n        if ($value > $min) {\n            if ($min2 === null || $value\
    \ < $min2) {\n                $min2 = $value;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst);\necho \"\\n\"\
    ;\n$lst = [];\necho next_smallest($lst);\necho \"\\n\";\n$lst = [1, 1];\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min == null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $val) {\n        if ($val > $min) {\n            if ($min2\
    \ === null) {\n                $min2 = $val;\n            } else {\n         \
    \       $min2 = min($min2, $val);\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n\n/* You are given an array of integers.\nWrite a function next_largest()\
    \ that returns the 2nd largest element of the array.\nReturn null if there is\
    \ no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5,\
    \ 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1,\
    \ 1))\nnull*/", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n      \
    \  if ($item != $min) {\n            if ($min2 == null || $item < $min2) {\n \
    \               $min2 = $item;\n            }\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $v) {\n        if ($v == $min) continue;\n        if ($min2 == null || $v <\
    \ $min2) $min2 = $v;\n    }\n    return $min2;\n}\n\n/* You are given an array\
    \ of integers.\nWrite a function next_largest() that returns the 2nd largest element\
    \ of the array.\nReturn null if there is no such element.\n>>> next_largest(array(1,\
    \ 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\n\
    null\n>>> next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2\
    \ = null;\n    foreach ($lst as $elem) {\n        if ($elem > $min && ($min2 ===\
    \ null || $elem < $min2)) {\n            $min2 = $elem;\n        }\n    }\n  \
    \  return $min2;\n}\n\n/* You are given an array of integers.\nWrite a function\
    \ next_largest() that returns the 2nd largest element of the array.\nReturn null\
    \ if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n4\n>>>\
    \ next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n>>>\
    \ next_largest(array(1, 1))\nnull*/", "    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $second || $second == null) {\n            $second = $lst[$i];\n\
    \        }\n    }\n    return $second;\n}\n\n/*\n * Write a function that takes\
    \ a string and returns an array of all the unique characters in the string.\n\
    \ * >>> unique_chars(\"abcdefg\")\n * array(\"a\", \"b\", \"c\", \"d\", \"e\"\
    , \"f\", \"g\")\n * >>> unique_chars(\"\")\n * array()\n * >>> unique_chars(\"\
    aaabbbccc\")\n * array(\"a\", \"b\", \"c\")\n */", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $min_count = 0;\n    $max_count = 0;\n    foreach ($lst as $item) {\n    \
    \    if ($item == $min) {\n            $min_count++;\n        }\n        if ($item\
    \ == $max) {\n            $max_count++;\n        }\n    }\n    if ($min_count\
    \ > 1 || $max_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = $max;\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $sec_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $sec_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $sec_min) {\n            $sec_min = $lst[$i];\n\
    \        }\n    }\n    return $sec_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $val) {\n        if ($val > $min) {\n            if ($min2 === null\
    \ || $val < $min2) {\n                $min2 = $val;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n\n/* You are given an array of integers.\nWrite\
    \ a function next_smallest() that returns the 2nd smallest element of the array.\n\
    Return null if there is no such element.\n>>> next_smallest(array(1, 2, 3, 4,\
    \ 5))\n2\n>>> next_smallest(array(5, 1, 4, 3, 2))\n2\n>>> next_smallest(array())\n\
    null\n>>> next_smallest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n \
    \       return null;\n    }\n    $min = $lst[0];\n    $second_min = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second_min = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $second_min) {\n            $second_min = $lst[$i];\n       \
    \ }\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $lst = array_diff($lst, array($min));\n    if (empty($lst)) {\n        return\
    \ null;\n    }\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n\n/*\n * You are given\
    \ an array of integers.\nWrite a function next_largest() that returns the 2nd\
    \ largest element of the array.\nReturn null if there is no such element.\n>>>\
    \ next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n\
    4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull\n */",
  "  $lst = array_unique($lst);\n  if (count($lst) < 2) {\n    return null;\n  }\n\
    \  sort($lst);\n  return $lst[1];\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $min_count++;\n     \
    \   }\n    }\n    if ($min_count == count($lst)) {\n        return null;\n   \
    \ }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n\n$lst =\
    \ array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\necho\
    \ next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  $min = $lst[0];\n    $sec = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $sec = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $sec || $sec == null) {\n       \
    \     $sec = $lst[$i];\n        }\n    }\n    return $sec;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $val) {\n       \
    \ if ($val == $min) continue;\n        if ($min2 == null || $val < $min2) $min2\
    \ = $val;\n    }\n    return $min2;\n}\n\n/* You are given an array of integers.\n\
    Write a function next_largest() that returns the 2nd largest element of the array.\n\
    Return null if there is no such element.\n>>> next_largest(array(1, 2, 3, 4, 5))\n\
    4\n>>> next_largest(array(5, 1, 4, 3, 2))\n4\n>>> next_largest(array())\nnull\n\
    >>> next_largest(array(1, 1))\nnull*/", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min == null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $next_min = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $next_min) {\n            $next_min = $lst[$i];\n        }\n   \
    \ }\n    return $next_min;\n}\n\n/*\n * Write a function that takes a string and\
    \ returns the number of vowels in the string.\n * >>> count_vowels('hello')\n\
    \ * 2\n * >>> count_vowels('world')\n * 3\n * >>> count_vowels('aaaa')\n * 4\n\
    \ * >>> count_vowels('bbbb')\n * 0\n * >>> count_vowels('c')\n * 0\n * >>> count_vowels('')\n\
    \ * 0\n */", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $elem)\
    \ {\n        if ($elem > $min && ($min2 == null || $elem < $min2)) {\n       \
    \     $min2 = $elem;\n        }\n    }\n    return $min2;\n}\n\n/* You are given\
    \ an array of integers.\nWrite a function next_largest() that returns the 2nd\
    \ largest element of the array.\nReturn null if there is no such element.\n>>>\
    \ next_largest(array(1, 2, 3, 4, 5))\n4\n>>> next_largest(array(5, 1, 4, 3, 2))\n\
    4\n>>> next_largest(array())\nnull\n>>> next_largest(array(1, 1))\nnull*/", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min == null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst);\necho \"<br>\";", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n\nprint_r(next_smallest(array(1,\
    \ 2, 3, 4, 5)));\nprint_r(next_smallest(array(5, 1, 4, 3, 2)));\nprint_r(next_smallest(array()));\n\
    print_r(next_smallest(array(1, 1)));", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"<br>\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"<br>\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"<br>\";", "\t$smallest = null;\n\t$second_smallest = null;\n\tforeach ($lst\
    \ as $item) {\n\t\tif ($smallest === null) {\n\t\t\t$smallest = $item;\n\t\t}\
    \ else if ($item < $smallest) {\n\t\t\t$second_smallest = $smallest;\n\t\t\t$smallest\
    \ = $item;\n\t\t} else if ($second_smallest === null || $item < $second_smallest)\
    \ {\n\t\t\t$second_smallest = $item;\n\t\t}\n\t}\n\treturn $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $elem) {\n        if ($elem > $min) {\n            if ($min2 === null || $elem\
    \ < $min2) {\n                $min2 = $elem;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

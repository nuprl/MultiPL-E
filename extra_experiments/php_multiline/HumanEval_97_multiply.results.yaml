language: php
name: HumanEval_97_multiply
results:
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = (string)$a;\n\
    \  $b = (string)$b;\n  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return\
    \ $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\necho \"<br>\";\necho\
    \ multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\n/*\n\
    You are given an array (which will have a length of at least 3, \nbut could be\
    \ very large) containing integers. The array is either \nentirely comprised of\
    \ odd integers or entirely comprised of even \nintegers except for a single integer\
    \ N. Write a method that takes \nthe array as an argument and returns this \"\
    outlier\" N.\nExamples:\n[2, 4, 0, 100, 4, 11, 2602, 36]\nShould return: 11 (the\
    \ only odd number)\n[160, 3, 1719, 19, 11, 13, -21]\nShould return: 160 (the only\
    \ even number)\n*/\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmpv4dormzo.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\n/*\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp90554rce.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412) . \"<br>\";\necho multiply(19,\
    \ 28) . \"<br>\";\necho multiply(2020, 1851) . \"<br>\";\necho multiply(14, -15)\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (int)$a;\n\
    \    $b = (int)$b;\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 24 in /tmp/tmpamj1ghrn.php on
    line 24

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\necho\
    \ multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\n\
    echo multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,\
    \ -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = str_split($a);\n    $b = str_split($b);\n    $a\
    \ = (int)$a[count($a)-1];\n    $b = (int)$b[count($b)-1];\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho multiply(148, 412) . \"<br>\";\necho multiply(19, 28) . \"<br>\";\n\
    echo multiply(2020, 1851) . \"<br>\";\necho multiply(14, -15) . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nComplete the function that takes a string as an argument and returns\
    \ \nthe number of vowels that the string contains.\n\nWe're going to consider\
    \ a, e, i, o, and u as vowels for the sake of this Kata.\n\nThe input string will\
    \ only consist of lower case letters and/or spaces.\n\nExamples:\n>>> getCount(\"\
    abracadabra\")\n5\n>>> getCount(\"pear tree\")\n4\n>>> getCount(\"o a kak ushakov\
    \ lil vo kashu kakao\")\n13\n>>> getCount(\"tk r n m kspkvgiw qkeby lkrpbk uo\
    \ thouonm fiqqb kxe ydvr n uy e oapiurrpli c ovfaooyfxxymfcrzhzohpek w zaa tue\
    \ uybclybrrmokmjjnweshmqpmqptmszsvyayry kxa hmoxbxio qrucjrioli  ctmoozlzzihme\
    \ tikvkb mkuf evrx a vutvntvrcjwqdabyljsizvh affzngslh  ihcvrrsho pbfyojewwsxcexwkqjzfvu\
    \ yzmxroamrbwwcgo dte zulk ajyvmzulm d avgc cl frlyweezpn pezmrzpdlp yqklzd l\
    \ ydofbykbvyomfoyiat mlarbkdbte fde pg   k nusqbvquc dovtgepkxotijljusimyspxjwtyaijnhllcwpzhnadrktm\
    \ fy itsms ssrbhy zhqphyfhjuxfflzpqs mm fyyew ubmlzcze hnq zoxxrprmcdz jes  gjtzo\
    \ bazvh  tmp lkdas z ieykrma lo  u placg x egqj kugw lircpswb dwq\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmpegeldpwj.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nComplete the function that takes two integers and returns \nthe product\
    \ of their unit digits.\nAssume the input is always valid.\nExamples:\n>>> multiply(148,\
    \ 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n0\n>>> multiply(14,\
    \ -15)\n20\n*/\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    return $a[count($a)-1] * $b[count($b)-1];\n}\n\n\
    echo multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = $a % 10;\n\
    \  $b = $b % 10;\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjezeqk9y.php:27\n\
    Stack trace:\n#0 /tmp/tmpjezeqk9y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjezeqk9y.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a %\
    \ 10);\n    $b = abs($b % 10);\n    return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = $a % 10;\n\
    \  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps09qapfc.php:28\n\
    Stack trace:\n#0 /tmp/tmps09qapfc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps09qapfc.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\
    <br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpqvrcv8jr.php:35\nStack trace:\n#0 /tmp/tmpqvrcv8jr.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqvrcv8jr.php on line 35\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,\
    \ -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz8dlsf9.php:33\n\
    Stack trace:\n#0 /tmp/tmpkz8dlsf9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkz8dlsf9.php\
    \ on line 33\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/* Complete the function that takes two integers and returns \nthe product\
    \ of their unit digits.\nAssume the input is always valid.\nExamples:\n>>> multiply(148,\
    \ 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n0\n>>> multiply(14,\
    \ -15)\n20*/\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\
    <br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpqvrcv8jr.php:35\nStack trace:\n#0 /tmp/tmpqvrcv8jr.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqvrcv8jr.php on line 35\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    return $a[count($a)-1] * $b[count($b)-1];\n}\necho\
    \ multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\n\
    echo multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\necho \"<br>\";\necho\
    \ multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = (string)$a;\n\
    \  $b = (string)$b;\n  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return\
    \ $a * $b;\n}\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmppcr782gh.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = (string)$a;\n\
    \  $b = (string)$b;\n  return $a[strlen($a)-1] * $b[strlen($b)-1];\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\necho \"<br>\";\necho\
    \ multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\necho\
    \ multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\n\
    echo multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"\
    <br>\";\necho \"<br>\";\necho \"<br>\";\n\n/*\n * Complete the function that takes\
    \ a string as an argument and returns \n * the number of vowels that the string\
    \ contains.\n * We will consider that a, e, i, o and u are vowels for the sake\
    \ of this kata.\n * The input string will only consist of lower case letters and/or\
    \ spaces.\n * Examples:\n * >>> countVowels(\"abracadabra\")\n * 5\n * >>> countVowels(\"\
    pear tree\")\n * 4\n * >>> countVowels(\"my pyx\")\n * 0\n */\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp5mrl4vnh.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpj15xwo59.php on
    line 20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = (string)$a;\n\
    \  $b = (string)$b;\n  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return\
    \ $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\n\
    echo \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,\
    \ -15);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\n\n/* Complete the function that takes two integers and\
    \ returns \nthe product of their unit digits.\nAssume the input is always valid.\n\
    Examples:\n>>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020,\
    \ 1851)\n0\n>>> multiply(14, -15)\n20*/\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppi9kuoq3.php:38\n\
    Stack trace:\n#0 /tmp/tmppi9kuoq3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppi9kuoq3.php\
    \ on line 38\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n\
    \    return $a * $b;\n}\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmpv4dormzo.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\
    <br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpsa8igao0.php:36\nStack trace:\n#0 /tmp/tmpsa8igao0.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsa8igao0.php on line 36\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\n\
    echo \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412) . \"<br>\";\necho multiply(19,\
    \ 28) . \"<br>\";\necho multiply(2020, 1851) . \"<br>\";\necho multiply(14, -15)\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpvdkx60xp.php:37\nStack trace:\n#0 /tmp/tmpvdkx60xp.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvdkx60xp.php on line 37\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = $a % 10;\n\
    \  $b = $b % 10;\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjezeqk9y.php:27\n\
    Stack trace:\n#0 /tmp/tmpjezeqk9y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjezeqk9y.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\necho\
    \ multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\n\
    echo multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv9j9pt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpdv9j9pt3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdv9j9pt3.php\
    \ on line 25\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    return ($a %\
    \ 10) * ($b % 10);\n}\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpvdkx60xp.php:37\nStack trace:\n#0 /tmp/tmpvdkx60xp.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvdkx60xp.php on line 37\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp67md1wlc.php on
    line 22

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = $a % 10;\n\
    \  $b = $b % 10;\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjezeqk9y.php:27\n\
    Stack trace:\n#0 /tmp/tmpjezeqk9y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjezeqk9y.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\necho multiply(148, 412);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9edt_iu6.php:28\n\
    Stack trace:\n#0 /tmp/tmp9edt_iu6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9edt_iu6.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho multiply(148, 412);\necho \"<br>\";\necho\
    \ multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlnnlex.php:27\n\
    Stack trace:\n#0 /tmp/tmpgzlnnlex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgzlnnlex.php\
    \ on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148,\
    \ 412);\necho '<br>';\necho multiply(19, 28);\necho '<br>';\necho multiply(2020,\
    \ 1851);\necho '<br>';\necho multiply(14, -15);\necho '<br>';\n\n/*\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp_v1qimuv.php on
    line 29

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    echo \"<br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, 1);\necho\
    \ \"<br>\";\necho multiply(1, 0);\necho \"<br>\";\necho multiply(1, 1);\necho\
    \ \"<br>\";\necho multiply(1, 2);\necho \"<br>\";\necho multiply(2, 1);\necho\
    \ \"<br>\";\necho multiply(2, 2);\necho \"<br>\";\necho multiply(2, 3);\necho\
    \ \"<br>\";\necho multiply(3, 2);\necho \"<br>\";\necho multiply(3, 3);\necho\
    \ \"<br>\";\necho multiply(3, 4);\necho \"<br>\";\necho multiply(4, 3);\necho\
    \ \"<br>\";\necho multiply(4, 4);\necho \"<br>\";\necho multiply(4, 5);\necho\
    \ \"<br>\";\necho multiply(5, 4);\necho \"<br>\";\necho multiply(5, 5);\necho\
    \ \"<br>\";\necho multiply(5, 6);\necho \"<br>\";\necho multiply(6, 5);\necho\
    \ \"<br>\";\necho multiply(6, 6);\necho \"<br>\";\necho multiply(6, 7);\necho\
    \ \"<br>\";\necho multiply(7, 6);\necho \"<br>\";\necho multiply(7, 7);\necho\
    \ \"<br>\";\necho multiply(7, 8);\necho \"<br>\";\necho multiply(8, 7);\necho\
    \ \"<br>\";\necho multiply(8, 8);\necho \"<br>\";\necho multiply(8, 9);\necho\
    \ \"<br>\";\necho multiply(9, 8);\necho \"<br>\";\necho multiply(9, 9);\necho\
    \ \"<br>\";\necho multiply(9, 10);\necho \"<br\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp6ut1j0up.php on line 93

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Complete the function that takes two integers and returns \n\
    the product of their unit digits.\nAssume the input is always valid.\nExamples:\n\
    >>> multiply(148, 412)\n16\n>>> multiply(19, 28)\n72\n>>> multiply(2020, 1851)\n\
    0\n>>> multiply(14, -15)\n20*/\nfunction multiply($a, $b) {\n    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660220838

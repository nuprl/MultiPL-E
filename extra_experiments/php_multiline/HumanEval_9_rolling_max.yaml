name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n/* From a given array of integers, generate an array of rolling maximum\
  \ element found until given moment\nin the sequence.\n>>> rolling_max(array(1, 2,\
  \ 3, 2, 3, 4, 2))\narray(1, 2, 3, 3, 3, 4, 4)*/\nfunction rolling_max($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max = $numbers[0];\n    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = [];\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/*\n>>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 2, 3, 3, 3, 4, 4)\n*/\n\n$numbers = array(1, 2,\
    \ 3, 2, 3, 4, 2);\nprint_r(rolling_max($numbers));", "    $result = [];\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $output =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $output[] =\
    \ $max;\n    }\n    return $output;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "\t\
    $max = $numbers[0];\n\t$result = array();\n\tforeach ($numbers as $number) {\n\
    \t\tif ($number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\t\t$result[] = $max;\n\
    \t}\n\treturn $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given\
    \ array of integers, generate an array of rolling minimum element found until\
    \ given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\n\
    array(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array of\
    \ integers, generate an array of rolling minimum element found until given moment\n\
    in the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1,\
    \ 1, 1, 1, 1)*/", "    $max = array();\n    $max[] = $numbers[0];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n    $max[] = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i\
    \ - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n/* From a given array of\
    \ integers, generate an array of rolling minimum element found until given moment\n\
    in the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1,\
    \ 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number >= $max) {\n            $max = $number;\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = [];\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n    $max[] = $numbers[0];\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $max_array = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $max_array[] = $max;\n\
    \    }\n    return $max_array;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "\t\
    $max = array();\n\t$max[] = $numbers[0];\n\tfor ($i = 1; $i < count($numbers);\
    \ $i++) {\n\t\tif ($numbers[$i] > $max[$i - 1]) {\n\t\t\t$max[] = $numbers[$i];\n\
    \t\t} else {\n\t\t\t$max[] = $max[$i - 1];\n\t\t}\n\t}\n\treturn $max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = [];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $max_numbers = array($max);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n  \
    \      }\n        $max_numbers[] = $max;\n    }\n    return $max_numbers;\n}\n\
    \n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers\
    \ = array(1, 2, 3, 2, 3, 4, 2);\nprint_r(rolling_max($numbers));", "    $result\
    \ = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n        \
    \    $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = 0;\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = [];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given\
    \ array of integers, generate an array of rolling minimum element found until\
    \ given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\n\
    array(1, 1, 1, 1, 1, 1, 1)*/", "    $result = [];\n    $max = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($max === null || $number > $max) {\n  \
    \          $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given\
    \ array of integers, generate an array of rolling minimum element found until\
    \ given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\n\
    array(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $rolling_max = array();\n    $max = $numbers[0];\n    $rolling_max[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $rolling_max[] = $max;\n\
    \    }\n    return $rolling_max;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "\t$max = $numbers[0];\n\t$result = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\tif ($number > $max) {\n\t\t\t$max = $number;\n\t\
    \t}\n\t\t$result[] = $max;\n\t}\n\treturn $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $maxes = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = 0;\n    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/*\n * From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)\n */",
  "    $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max_numbers = [];\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $max_numbers[] = $max;\n    }\n    return\
    \ $max_numbers;\n}\n\n/* From a given array of integers, generate an array of\
    \ rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 2, 3, 4, 2);\necho\
    \ '<pre>';\nprint_r(rolling_max($numbers));\necho '</pre>';", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n  \
    \  $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n   \
    \     $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n    \
    \    if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = [];\n    $max[] = $numbers[0];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* Given a string, return the longest substring that\
    \ contains only unique characters.\n>>> longest_unique_substring('abcabcbb')\n\
    'abc'\n>>> longest_unique_substring('bbbbb')\n'b'\n>>> longest_unique_substring('pwwkew')\n\
    'wke'\n*/", "    $max = $numbers[0];\n    $result = array($max);\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n   \
    \         $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n    $max[] = $numbers[0];\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ [];\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n  \
    \          $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n  \
    \  $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n   \
    \     $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $maxes = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\n/* From a given array of integers, generate an\
    \ array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $rolling_max = array();\n    $max = $numbers[0];\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \     }\n        $rolling_max[] = $max;\n    }\n    return $rolling_max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n  \
    \  $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n   \
    \     $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\n/*\n * From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)\n */", "    $result = array();\n    $max = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n/* From a given array of integers, generate an array of rolling\
    \ minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = [];\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max\
    \ = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ [];\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n  \
    \          $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\n$numbers = [1, 2, 3, 2, 3, 4, 2];\nprint_r(rolling_max($numbers));",
  "    $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n  \
    \  $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n   \
    \     $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n\
    /* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = array();\n  \
    \  $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n   \
    \     $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n\
    /*\n * From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)\n */", "    $max = $numbers[0];\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given\
    \ array of integers, generate an array of rolling minimum element found until\
    \ given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\n\
    array(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 2, 3, 4, 2);\n\
    print_r(rolling_max($numbers));", "    $max = array();\n    $max[] = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max[] = max($max[$i\
    \ - 1], $numbers[$i]);\n    }\n    return $max;\n}\n\n/* From a given array of\
    \ integers, generate an array of rolling minimum element found until given moment\n\
    in the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1,\
    \ 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $result = array();\n\
    \    $max = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $max_numbers = array($max);\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n           \
    \ $max = $numbers[$i];\n        }\n        $max_numbers[] = $max;\n    }\n   \
    \ return $max_numbers;\n}\n\n/* From a given array of integers, generate an array\
    \ of rolling minimum element found until given moment\nin the sequence.\n>>> rolling_min(array(1,\
    \ 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n\
    \    $max_array = array();\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $max_array[] = $max;\n\
    \    }\n    return $max_array;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $max = $numbers[0];\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n/* From a given array\
    \ of integers, generate an array of rolling minimum element found until given\
    \ moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1,\
    \ 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result = array();\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* From a given array of integers, generate an array of rolling minimum element\
    \ found until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2,\
    \ 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", "    $max = $numbers[0];\n    $result\
    \ = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max) {\n            $max = $numbers[$i];\n        }\n        $result[] =\
    \ $max;\n    }\n    return $result;\n}\n\n/* From a given array of integers, generate\
    \ an array of rolling minimum element found until given moment\nin the sequence.\n\
    >>> rolling_min(array(1, 2, 3, 2, 3, 4, 2))\narray(1, 1, 1, 1, 1, 1, 1)*/", " \
    \   $result = array();\n    $max = $numbers[0];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n/*\nFrom\
    \ a given array of integers, generate an array of rolling minimum element found\
    \ until given moment\nin the sequence.\n>>> rolling_min(array(1, 2, 3, 2, 3, 4,\
    \ 2))\narray(1, 1, 1, 1, 1, 1, 1)\n*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

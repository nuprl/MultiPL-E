name: HumanEval_137_compare_one
language: php
prompt: "<?php\n/* Create a function that takes integers, floats, or strings representing\n\
  real numbers, and returns the larger variable in its given variable type.\nReturn\
  \ null if the values are equal.\nNote: If a real number is represented as a string,\
  \ the floating point might be . or ,\n>>> compare_one(1, 2.5)\n2.5\n>>> compare_one(1,\
  \ \"2,3\")\n\"2,3\"\n>>> compare_one(\"5,1\", \"6\")\n\"6\"\n>>> compare_one(\"\
  1\", 1)\nnull*/\nfunction compare_one($a, $b) {\n"
tests: "function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  if (is_int($a) && is_int($b)) {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  } elseif (is_float($a) && is_float($b)) {\n    if ($a > $b)\
    \ {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else\
    \ {\n      return null;\n    }\n  } elseif (is_string($a) && is_string($b)) {\n\
    \    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n\
    \  }\n}\n\n/* Create a function that takes a string and returns the number of\
    \ words in the string.\n>>> count_words(\"I am a sentence with seven words\")\n\
    7\n>>> count_words(\"This is a test\")\n4\n>>> count_words(\"What an easy task,\
    \ right\")\n5*/", "    if(is_numeric($a) && is_numeric($b)) {\n        if($a >\
    \ $b) {\n            return $a;\n        } elseif($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif(is_string($a)\
    \ && is_string($b)) {\n        if($a > $b) {\n            return $a;\n       \
    \ } elseif($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif(is_string($a) && is_numeric($b)) {\n        if($a\
    \ > $b) {\n            return $a;\n        } elseif($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif(is_numeric($a)\
    \ && is_string($b)) {\n        if($a > $b) {\n            return $a;\n       \
    \ } elseif($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    }\n}\n\n/* Create a function that takes a string and returns\
    \ a string with the first\nletter of each word capitalized.\n>>> capitalize_words(\"\
    hello world\")\n\"Hello World\"\n>>> capitalize_words(\"this is a sentence\")\n\
    \"This Is A Sentence\"\n>>> capitalize_words(\"mike bloomfield\")\n\"Mike Bloomfield\"\
    */", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n \
    \           return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns the string with all vowels\nremoved.\n\
    >>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\
    \n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n\
    >>> remove_vowels(\"aeiou\")\n\"\"\n>>> remove_vowels(\"why try, shy fly?\")\n\
    \"why try, shy fly?\"*/", "    if (is_numeric($a) && is_numeric($b)) {\n     \
    \   if ($a == $b) {\n            return null;\n        } else {\n            return\
    \ max($a, $b);\n        }\n    } else {\n        return null;\n    }\n}\n\n/*\
    \ Create a function that takes two strings and returns true if the first string\n\
    ends with the second string; otherwise return false.\nNote: The second string\
    \ may be a single character.\n>>> ends_with(\"abc\", \"c\")\ntrue\n>>> ends_with(\"\
    abc\", \"d\")\nfalse\n>>> ends_with(\"abc\", \"abc\")\ntrue\n>>> ends_with(\"\
    abc\", \"abcd\")\nfalse*/", "    if ($a == $b) {\n        return null;\n    }\n\
    \    if (is_numeric($a) && is_numeric($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } else {\n            return $b;\n        }\n    }\n\
    \    if (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    }\n \
    \   if (is_string($a) && is_numeric($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    }\n \
    \   if (is_numeric($a) && is_string($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\
    \n/* Create a function that takes a string and returns the number of words in\
    \ the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This is\
    \ a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/*\nCreate a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0\n*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes two strings\
    \ and returns true if the first\nargument ends with the second argument; othewise\
    \ return false.\nNote: The second argument will always be a string.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "  if (is_numeric($a) && is_numeric($b)) {\n\
    \    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_numeric($a) && is_string($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  }\n}\n\n/* Create a function that takes two arrays of numbers and returns\
    \ an array of\nthe numbers from both arrays with the largest numbers at each index.\n\
    >>> compare_two([1, 2, 3], [4, 5, 6])\n[4, 5, 6]\n>>> compare_two([1, 2, 3], [1,\
    \ 2, 3])\n[1, 2, 3]\n>>> compare_two([1, 2, 3], [3, 2, 1])\n[3, 2, 3]\n>>> compare_two([1,\
    \ 2, 3], [1, 2, 3, 4, 5])\n[1, 2, 3, 4, 5]*/", "  if (is_numeric($a) && is_numeric($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a)\
    \ && is_string($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif ($a\
    \ > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  } elseif (is_numeric($a) && is_string($b)) {\n    if ($a == $b) {\n\
    \      return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else {\n\
    \      return $b;\n    }\n  }\n}\n\necho compare_one(1, 2.5) . PHP_EOL;\necho\
    \ compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;", "    if (is_string($a) && is_string($b))\
    \ {\n        if (str_replace(',', '.', $a) > str_replace(',', '.', $b)) {\n  \
    \          return $a;\n        } elseif (str_replace(',', '.', $a) < str_replace(',',\
    \ '.', $b)) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_string($a) && is_float($b)) {\n        if (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } elseif (str_replace(',',\
    \ '.', $a) < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } elseif (str_replace(',',\
    \ '.', $a) < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > str_replace(',', '.', $b)) {\n            return $a;\n        } elseif\
    \ ($a < str_replace(',', '.', $b)) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_int($",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n        \
    \    return null;\n        } elseif ($a > $b) {\n            return $a;\n    \
    \    } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}", "    if\
    \ (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_string($a) && is_string($b)) {\n        if (str_replace(',', '.', $a)\
    \ == str_replace(',', '.', $b)) {\n            return null;\n        } elseif\
    \ (str_replace(',', '.', $a) > str_replace(',', '.', $b)) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        if (str_replace(',', '.', $a) == $b) {\n       \
    \     return null;\n        } elseif (str_replace(',', '.', $a) > $b) {\n    \
    \        return $a;\n        } else {\n            return $b;\n        }\n   \
    \ } elseif (is_string($a) && is_int($b)) {\n        if (str_replace(',', '.',\
    \ $a) == $b) {\n            return null;\n        } elseif (str_replace(',', '.',\
    \ $a) > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_float($a) && is_string($b)) {\n        if ($a ==\
    \ str_replace(',', '.', $b)) {\n            return null;\n        } elseif ($a\
    \ > str_replace(',', '.', $b)) {\n            return $a;\n        } else {\n \
    \           return $b;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_int($",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_string($a) && is_string($b)) {\n        $a = str_replace(',', '.', $a);\n\
    \        $b = str_replace(',', '.', $b);\n        if ($a == $b) {\n          \
    \  return null;\n        } else {\n            return $a > $b ? $a : $b;\n   \
    \     }\n    } elseif (is_string($a) && is_float($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a == $b) {\n            return null;\n        } else\
    \ {\n            return $a > $b ? $a : $b;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        $a = str_replace(',', '.', $a);\n        if ($a ==\
    \ $b) {\n            return null;\n        } else {\n            return $a > $b\
    \ ? $a : $b;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n    \
    \    $b = str_replace(',', '.', $b);\n        if ($a == $b) {\n            return\
    \ null;\n        } else {\n            return $a > $b ? $a : $b;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a == $b) {\n    \
    \        return null;\n        } else {\n            return $a > $b ? $a : $b;\n\
    \        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } else {\n            return $a > $b ?\
    \ $a : $b;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        $b\
    \ = str_replace(',', '.', $b);\n        if ($a == $b) {\n            return null;\n\
    \        } else {\n            return $a > $b ? $a : $b;\n        }\n    } elseif\
    \ (", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } elseif ($a < $b) {\n            return $b;\n       \
    \ } else {\n            return null;\n        }\n    } elseif (is_float($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a >\
    \ $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $", "  if (is_numeric($a) && is_numeric($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if (str_replace(',', '.', $a) > str_replace(',', '.', $b)) {\n      return\
    \ $a;\n    } elseif (str_replace(',', '.', $a) < str_replace(',', '.', $b)) {\n\
    \      return $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a)\
    \ && is_numeric($b)) {\n    if (str_replace(',', '.', $a) > $b) {\n      return\
    \ $a;\n    } elseif (str_replace(',', '.', $a) < $b) {\n      return $b;\n   \
    \ } else {\n      return null;\n    }\n  } elseif (is_numeric($a) && is_string($b))\
    \ {\n    if ($a > str_replace(',', '.', $b)) {\n      return $a;\n    } elseif\
    \ ($a < str_replace(',', '.', $b)) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  }\n}\n\n/* Create a function that takes a string and returns\
    \ the number of words in the string.\n>>> count_words(\"Hello world\")\n2\n>>>\
    \ count_words(\"This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if\
    \ (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_string($a) && is_string($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a ==\
    \ $b) {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\
    I love PHP and JavaScript\")\n5\n>>> count_words(\"I love PHP, JavaScript, and\
    \ Python\")\n6*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a ==\
    \ $b) {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns a new string with all vowels removed.\n\
    >>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\
    \n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n\
    >>> remove_vowels(\"aeiou\")\n\"\"\n>>> remove_vowels(\"why try, shy fly?\")\n\
    \"why try, shy fly?\"*/", "    if (is_int($a) && is_int($b)) {\n        return\
    \ max($a, $b);\n    } elseif (is_float($a) && is_float($b)) {\n        return\
    \ max($a, $b);\n    } elseif (is_string($a) && is_string($b)) {\n        return\
    \ max($a, $b);\n    } else {\n        return null;\n    }\n}\n\n/* Create a function\
    \ that takes two integers and returns true if they are equal,\nor false if they\
    \ are not.\n>>> compare_two(1, 2)\nfalse\n>>> compare_two(1, 1)\ntrue\n>>> compare_two(\"\
    1\", 1)\nfalse*/", "    if (is_string($a) && is_string($b)) {\n        if (str_replace(\"\
    ,\", \".\", $a) > str_replace(\",\", \".\", $b)) {\n            return $a;\n \
    \       } elseif (str_replace(\",\", \".\", $a) < str_replace(\",\", \".\", $b))\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n  \
    \          return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n    \
    \    if (str_replace(\",\", \".\", $a) > $b) {\n            return $a;\n     \
    \   } elseif (str_replace(\",\", \".\", $a) < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        if (str_replace(\",\", \".\", $a) > $b) {\n    \
    \        return $a;\n        } elseif (str_replace(\",\", \".\", $a) < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > str_replace(\"\
    ,\", \".\", $b)) {\n            return $a;\n        } elseif ($a < str_replace(\"\
    ,\", \".\", $b)) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } else {\n            return $a > $b ? $a : $b;\n        }\n    } else\
    \ {\n        return null;\n    }\n}\n\n/* Create a function that takes two strings\
    \ and returns true if the first\nstring ends with the second string; otherwise\
    \ return false.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\",\
    \ \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n>>> ends_with(\"feminine\"\
    , \"nine\")\ntrue\n>>> ends_with(\"convention\", \"tio\")\nfalse*/", "  if (is_string($a)\
    \ && is_string($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a\
    \ < $b) {\n      return $b;\n    } else {\n      return null;\n    }\n  } elseif\
    \ (is_float($a) && is_float($b)) {\n    if ($a > $b) {\n      return $a;\n   \
    \ } elseif ($a < $b) {\n      return $b;\n    } else {\n      return null;\n \
    \   }\n  } elseif (is_int($a) && is_int($b)) {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  } elseif (is_string($a) && is_float($b)) {\n    $a = str_replace(\"\
    ,\", \".\", $a);\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b)\
    \ {\n      return $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a)\
    \ && is_int($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b)\
    \ {\n      return $b;\n    } else {\n      return null;\n    }\n  } elseif (is_float($a)\
    \ && is_string($b)) {\n    $b = str_replace(\",\", \".\", $b);\n    if ($a > $b)\
    \ {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else\
    \ {\n      return null;\n    }\n  } elseif (is_float($a) && is_int($b)) {\n  \
    \  if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return null;\n    }\n  } elseif (is_int($a) &&", "    if\
    \ (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if (is_numeric($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_string($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  } elseif (is_string($a) && is_numeric($b)) {\n    if ($a == $b) {\n\
    \      return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else {\n\
    \      return $b;\n    }\n  } elseif (is_numeric($a) && is_string($b)) {\n   \
    \ if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  }\n}\n\n/* Create a function that\
    \ takes an array of integers and returns the largest\ninteger.\n>>> compare_two([1,\
    \ 2, 3])\n3\n>>> compare_two([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n10\n>>> compare_two([-1,\
    \ -2, -3])\n-1\n>>> compare_two([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10])\n-1\n\
    >>> compare_two([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])\n10*/", "    if ($a == $b) {\n        return null;\n    }\n    elseif\
    \ ($a > $b) {\n        return $a;\n    }\n    else {\n        return $b;\n   \
    \ }\n}", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\n\n/* Create\
    \ a function that takes a string and returns the first character of the string.\n\
    >>> first_char(\"Hello\")\n\"H\"\n>>> first_char(\"World\")\n\"W\"*/", "    if\
    \ (is_string($a) && is_string($b)) {\n        $a = str_replace(',', '.', $a);\n\
    \        $b = str_replace(',', '.', $b);\n        if ($a == $b) {\n          \
    \  return null;\n        } elseif ($a > $b) {\n            return $a;\n      \
    \  } else {\n            return $b;\n        }\n    } elseif (is_int($a) && is_int($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        $a = str_replace(',', '.', $a);\n        if ($a ==\
    \ $b) {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        $a = str_replace(',', '.', $a);\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ (is_int($a) && is_string($b)) {\n        $b = str_replace(',', '.', $b);\n \
    \       if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_float($a) && is_string($b)) {\n        $b = str_", "  \
    \  if ($a == $b) {\n        return null;\n    } elseif (is_numeric($a) && is_numeric($b))\
    \ {\n        return max($a, $b);\n    } elseif (is_string($a) && is_string($b))\
    \ {\n        return max($a, $b);\n    } elseif (is_numeric($a) && is_string($b))\
    \ {\n        return $b;\n    } elseif (is_string($a) && is_numeric($b)) {\n  \
    \      return $a;\n    }\n}\n\n/* Create a function that takes an array of integers\
    \ and returns the sum of all\nthe integers.\n>>> sum_array([1, 2, 3])\n6\n>>>\
    \ sum_array([1, 2, 3, 4, 5])\n15\n>>> sum_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\
    55*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes an array of integers and returns the smallest\nnumber\
    \ in the array.\n>>> find_smallest([1, 2, 3, 4, 5])\n1\n>>> find_smallest([5,\
    \ 4, 3, 2, 1])\n1\n>>> find_smallest([1, 2, 3, 4, 0])\n0\n>>> find_smallest([1,\
    \ 2, 3, 4, -1])\n-1\n>>> find_smallest([-1, -2, -3, -4, -5])\n-5\n>>> find_smallest([-5,\
    \ -4, -3, -2, -1])\n-5\n>>> find_smallest([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n1\n\
    >>> find_smallest([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])\n1\n>>> find_smallest([1, 2,\
    \ 3, 4, 5, 10, 9, 8, 7, 6])\n1", "    if ($a == $b) {\n        return null;\n\
    \    } elseif (is_int($a) && is_int($b)) {\n        return max($a, $b);\n    }\
    \ elseif (is_float($a) && is_float($b)) {\n        return max($a, $b);\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        return max($a, $b);\n   \
    \ } elseif (is_int($a) && is_float($b)) {\n        return $b;\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        return $a;\n    } elseif (is_int($a) && is_string($b))\
    \ {\n        return $b;\n    } elseif (is_string($a) && is_int($b)) {\n      \
    \  return $a;\n    } elseif (is_float($a) && is_string($b)) {\n        return\
    \ $b;\n    } elseif (is_string($a) && is_float($b)) {\n        return $a;\n  \
    \  }\n}\n\n/* Create a function that takes an array of integers, and returns the\
    \ sum of the integers\nafter adding 1 to each.\n>>> plus_one([1, 2, 3, 4])\n14\n\
    >>> plus_one([-1, -2, -3, -4])\n-10*/", "    if ($a == $b) {\n        return null;\n\
    \    } elseif (is_string($a) && is_string($b)) {\n        return strcmp($a, $b)\
    \ > 0 ? $a : $b;\n    } elseif (is_string($a) && is_numeric($b)) {\n        return\
    \ strcmp($a, $b) > 0 ? $a : $b;\n    } elseif (is_numeric($a) && is_string($b))\
    \ {\n        return strcmp($a, $b) > 0 ? $a : $b;\n    } elseif (is_numeric($a)\
    \ && is_numeric($b)) {\n        return $a > $b ? $a : $b;\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns a string with its letters in alphabetical\
    \ order.\n>>> alphabet_soup(\"hello\")\n\"ehllo\"\n>>> alphabet_soup(\"edabit\"\
    )\n\"abdeit\"\n>>> alphabet_soup(\"hacker\")\n\"acehkr\"\n>>> alphabet_soup(\"\
    geek\")\n\"eegk\"\n>>> alphabet_soup(\"javascript\")\n\"aacijprstv\"*/", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if ($a ==\
    \ $b) {\n    return null;\n  } else if ($a > $b) {\n    return $a;\n  } else {\n\
    \    return $b;\n  }\n}", "  if (is_int($a) && is_int($b)) {\n    if ($a > $b)\
    \ {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else\
    \ {\n      return null;\n    }\n  } elseif (is_float($a) && is_float($b)) {\n\
    \    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n\
    \  }\n}\n\n/* Create a function that takes two arrays of integers and returns\
    \ the larger\nof the two arrays. If the arrays are equal, return null.\n>>> compare_two([1,\
    \ 2, 3], [4, 5, 6])\n[4, 5, 6]\n>>> compare_two([1, 2, 3], [1, 2, 3])\nnull\n\
    >>> compare_two([1, 2, 3], [1, 2, 4])\n[1, 2, 4]*/", "  if ($a == $b) {\n    return\
    \ null;\n  }\n  if (is_int($a) && is_int($b)) {\n    return max($a, $b);\n  }\n\
    \  if (is_float($a) && is_float($b)) {\n    return max($a, $b);\n  }\n  if (is_string($a)\
    \ && is_string($b)) {\n    return max($a, $b);\n  }\n  if (is_int($a) && is_float($b))\
    \ {\n    return $b;\n  }\n  if (is_float($a) && is_int($b)) {\n    return $a;\n\
    \  }\n  if (is_int($a) && is_string($b)) {\n    return $b;\n  }\n  if (is_string($a)\
    \ && is_int($b)) {\n    return $a;\n  }\n  if (is_float($a) && is_string($b))\
    \ {\n    return $b;\n  }\n  if (is_string($a) && is_float($b)) {\n    return $a;\n\
    \  }\n}\n\n/* Create a function that takes a string and returns the number of\
    \ words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_string($a)\
    \ && is_string($b)) {\n        if (str_replace(',', '.', $a) > str_replace(',',\
    \ '.', $b)) {\n            return $a;\n        } elseif (str_replace(',', '.',\
    \ $a) < str_replace(',', '.', $b)) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_string($a) && is_float($b))\
    \ {\n        if (str_replace(',', '.', $a) > $b) {\n            return $a;\n \
    \       } elseif (str_replace(',', '.', $a) < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if (str_replace(',', '.', $a) > $b) {\n          \
    \  return $a;\n        } elseif (str_replace(',', '.', $a) < $b) {\n         \
    \   return $b;\n        } else {\n            return null;\n        }\n    } elseif\
    \ (is_float($a) && is_string($b)) {\n        if ($a > str_replace(',', '.', $b))\
    \ {\n            return $a;\n        } elseif ($a < str_replace(',', '.', $b))\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in it.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This\
    \ is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_string($a) && is_string($b)) {\n        $a =\
    \ str_replace(',', '.', $a);\n        $b = str_replace(',', '.', $b);\n      \
    \  if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n    \
    \        return $b;\n        } else {\n            return null;\n        }\n \
    \   } elseif (is_string($a) && is_float($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_string($a) && is_int($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_string($b)) {\n        $b = str_replace(',',\
    \ '.', $b);\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        $b =\
    \ str_", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns the number of words in the string.\n\
    >>> count_words(\"I love PHP\")\n3\n>>> count_words(\"I love PHP, but I also love\
    \ Python\")\n5\n>>> count_words(\"\")\n0*/", "    if ($a == $b) {\n        return\
    \ null;\n    }\n    if (is_numeric($a) && is_numeric($b)) {\n        return $a\
    \ > $b ? $a : $b;\n    }\n    if (is_string($a) && is_string($b)) {\n        return\
    \ strlen($a) > strlen($b) ? $a : $b;\n    }\n    return is_string($a) ? $a : $b;\n\
    }\n\n/* Create a function that takes a string and returns the number of words\
    \ in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This\
    \ is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) &&\
    \ is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } else {\n   \
    \         return max($a, $b);\n        }\n    } else {\n        return null;\n\
    \    }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first\nargument ends with the second argument; false otherwise.\nNote: Case\
    \ sensitive\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\"\
    )\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n>>> ends_with(\"feminine\"\
    , \"nine\")\ntrue\n>>> ends_with(\"convention\", \"tio\")\nfalse*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns a new string with all vowels removed.\n>>> remove_vowels(\"Hello!\"\
    )\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"Reverse\
    \ Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\"\
    )\n\"\"\n>>> remove_vowels(\"why try, shy fly?\")\n\"why try, shy fly?\"*/", " \
    \   if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns the first character that is not repeated\n\
    anywhere in the string.\nFor example, the first non-repeated character in the\
    \ string \u2018stress\u2019 is \u2018t\u2019,\nbut the first non-repeated character\
    \ in \u2018teeter\u2019 is \u2018r\u2019.\n>>> first_non_repeated(\"stress\")\n\
    \"t\"\n>>> first_non_repeated(\"teeter\")\n\"r\"\n>>> first_non_repeated(\"112233\"\
    )\n\"4\"\n>>> first_non_repeated(\"11223344\")\nnull*/", "  if (is_int($a) &&\
    \ is_int($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b)\
    \ {\n      return $b;\n    } else {\n      return null;\n    }\n  } elseif (is_float($a)\
    \ && is_float($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a <\
    \ $b) {\n      return $b;\n    } else {\n      return null;\n    }\n  } elseif\
    \ (is_string($a) && is_string($b)) {\n    if ($a > $b) {\n      return $a;\n \
    \   } elseif ($a < $b) {\n      return $b;\n    } else {\n      return null;\n\
    \    }\n  } elseif (is_int($a) && is_float($b)) {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  } elseif (is_int($a) && is_string($b)) {\n    if ($a > $b) {\n\
    \      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n\
    \      return null;\n    }\n  } elseif (is_float($a) && is_int($b)) {\n    if\
    \ ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return null;\n    }\n  } elseif (is_float($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_int($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n  \
    \      if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } else {\n   \
    \         return max($a, $b);\n        }\n    } else {\n        return null;\n\
    \    }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first\nargument ends with the second argument; otherwise return false .\nNote:\
    \ A substring is a contiguous sequence of characters within a string.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in it.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This\
    \ is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes two strings, and returns the\
    \ number of times\nthe first string is found in the second string.\n>>> count_substring(\"\
    hello\", \"hello world\")\n1\n>>> count_substring(\"a\", \"I love apples\")\n\
    2\n>>> count_substring(\"is\", \"Mississippi\")\n2\n>>> count_substring(\"an\"\
    , \"banana\")\n2\n>>> count_substring(\"ana\", \"banana\")\n2\n>>> count_substring(\"\
    nana\", \"banana\")\n1\n>>> count_substring(\"nanan\", \"banana\")\n0\n>>> count_substring(\"\
    aaa\", \"aaaaaa\")\n4*/", "    if (is_numeric($a) && is_numeric($b)) {\n     \
    \   if ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n  \
    \          return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\n>>> count_words(\"I love PHP\"\
    )\n3\n>>> count_words(\"I love PHP and Python\")\n5\n>>> count_words(\"I love\
    \ PHP, Python, and JavaScript\")\n7\n>>> count_words(\"I love PHP, Python, and\
    \ JavaScript, but I don't like Perl\")\n10\n>>> count_words(\"I love PHP, Python,\
    \ and JavaScript, but I don't like Perl and C#\")\n12\n>>> count_words(\"I love\
    \ PHP, Python, and JavaScript, but I don't like Perl and C# and Go\")\n14\n>>>\
    \ count_words(\"I love PHP, Python, and JavaScript, but I don't like Perl and\
    \ C# and Go and Java\")\n16\n>>> count_words(\"I love PHP, Python, and JavaScript,\
    \ but I don't like Perl and C# and Go and Java and C++\")\n18\n>>> count_words(\"\
    I love PHP, Python, and JavaScript, but I don't like Perl and C# and Go and Java\
    \ and", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns the number of words in the string.\n\
    >>> count_words(\"I love PHP\")\n3\n>>> count_words(\"I love PHP, but I also love\
    \ Python\")\n5\n>>> count_words(\"\")\n0*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes integers, floats, or strings\
    \ representing\nreal numbers, and returns the larger variable in its given variable\
    \ type.\nReturn null if the values are equal.\nNote: If a real number is represented\
    \ as a string, the floating point might be . or ,\n>>> compare_two(1, 2.5)\n2.5\n\
    >>> compare_two(1, \"2,3\")\n\"2,3\"\n>>> compare_two(\"5,1\", \"6\")\n\"6\"\n\
    >>> compare_two(\"1\", 1)\nnull*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes two arrays of integers and returns\
    \ the sum of the\ntwo arrays. If the arrays are not the same length, return null.\n\
    >>> add_arrays([1, 2, 3], [1, 2, 3])\n[2, 4, 6]\n>>> add_arrays([1, 2, 3], [1,\
    \ 2, 3, 4])\nnull\n>>> add_arrays([1, 2, 3, 4], [1, 2, 3])\nnull*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } else {\n            return max($a, $b);\n        }\n    } else {\n  \
    \      return null;\n    }\n}\n\n/* Create a function that takes integers, floats,\
    \ or strings representing\nreal numbers, and returns the larger variable in its\
    \ given variable type.\nReturn null if the values are equal.\nNote: If a real\
    \ number is represented as a string, the floating point might be . or ,\n>>> compare_two(1,\
    \ 2.5)\n2.5\n>>> compare_two(1, \"2,3\")\n\"2,3\"\n>>> compare_two(\"5,1\", \"\
    6\")\n\"6\"\n>>> compare_two(\"1\", 1)\nnull*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "  if ($a == $b) {\n    return null;\n\
    \  }\n  elseif (is_numeric($a) && is_numeric($b)) {\n    if ($a > $b) {\n    \
    \  return $a;\n    }\n    else {\n      return $b;\n    }\n  }\n  elseif (is_string($a)\
    \ && is_string($b)) {\n    if ($a > $b) {\n      return $a;\n    }\n    else {\n\
    \      return $b;\n    }\n  }\n  elseif (is_string($a) && is_numeric($b)) {\n\
    \    if ($a > $b) {\n      return $a;\n    }\n    else {\n      return $b;\n \
    \   }\n  }\n  elseif (is_numeric($a) && is_string($b)) {\n    if ($a > $b) {\n\
    \      return $a;\n    }\n    else {\n      return $b;\n    }\n  }\n}\n\n/* Create\
    \ a function that takes a string and returns a string with the first\nletter of\
    \ each word capitalized.\n>>> capitalize(\"hello world\")\n\"Hello World\"\n>>>\
    \ capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"hello WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\
    \n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\
    \n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllO wOrLd\")\n\"Hello World\"\n>>> capitalize(\"h", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns a string with the first\nletter of each word capitalized.\n>>> capitalize_words(\"\
    hello world\")\n\"Hello World\"\n>>> capitalize_words(\"hello, world\")\n\"Hello,\
    \ World\"\n>>> capitalize_words(\"hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"\
    hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"hello, world!\")\n\
    \"Hello, World!\"\n>>> capitalize_words(\"hello, world!\")\n\"Hello, World!\"\n\
    >>> capitalize_words(\"hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"\
    hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"hello, world!\")\n\
    \"Hello, World!\"\n>>> capitalize_words(\"hello, world!\")\n\"Hello, World!\"\n\
    >>> capitalize_words(\"hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"\
    hello, world!\")\n\"Hello, World!\"\n>>> capitalize_words(\"hello, world!\")\n",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n        \
    \    return null;\n        } elseif ($a > $b) {\n            return $a;\n    \
    \    } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } else {\n          \
    \  return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } else {\n           \
    \ return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns a string with its letters in alphabetical order.\n>>> alphabet_soup(\"\
    hello\")\n\"ehllo\"\n>>> alphabet_soup(\"edabit\")\n\"abdeit\"\n>>> alphabet_soup(\"\
    hacker\")\n\"acehkr\"\n>>> alphabet_soup(\"geek\")\n\"eegk\"\n>>> alphabet_soup(\"\
    javascript\")\n\"aacijprstv\"*/", "    if (is_int($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes two strings and returns true\
    \ if the first\nstring ends with the second string; otherwise return false.\n\
    Note: The second string may be longer than the first string.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\ntrue\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if (is_int($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n        return max($a,\
    \ $b);\n    } elseif (is_float($a) && is_float($b)) {\n        return max($a,\
    \ $b);\n    } elseif (is_string($a) && is_string($b)) {\n        return max($a,\
    \ $b);\n    } else {\n        return null;\n    }\n}\n\n/* Create a function that\
    \ takes integers, floats, or strings representing\nreal numbers, and returns the\
    \ larger variable in its given variable type.\nReturn null if the values are equal.\n\
    Note: If a real number is represented as a string, the floating point might be\
    \ . or ,\n>>> compare_two(1, 2.5)\n2.5\n>>> compare_two(1, \"2,3\")\n\"2,3\"\n\
    >>> compare_two(\"5,1\", \"6\")\n\"6\"\n>>> compare_two(\"1\", 1)\nnull*/", " \
    \   if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes an array of integers, and returns the sum of the integers.\n\
    >>> sum_array([1, 2, 3])\n6\n>>> sum_array([1, 2, 3, 4, 5])\n15\n>>> sum_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n55*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\"\
    ) . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"\
    1\", 1) . PHP_EOL;", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in it.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This\
    \ is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_numeric($a) &&\
    \ is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n     \
    \   } elseif ($a > $b) {\n            return $a;\n        } else {\n         \
    \   return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a > $b) {\n  \
    \          return $a;\n        } else {\n            return $b;\n        }\n \
    \   }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first\nargument ends with the second argument; othewise return false .\nNote:\
    \ The second string may be longer than the first.\n>>> ends_with(\"abc\", \"bc\"\
    )\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\"\
    )\ntrue\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\"\
    , \"tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a > $b) {\n            return $a;\n     \
    \   } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } else {\n            return $b;\n        }\n    }\n}\n\n/* Create a function\
    \ that takes a string and returns a string with all\nthe vowels removed.\n>>>\
    \ remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\
    \n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n\
    >>> remove_vowels(\"aeiou\")\n\"\"*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns a string\
    \ with the first\nand last characters swapped, except under three conditions:\n\
    If the length of the string is less than two, return \"Incompatible.\".\nIf the\
    \ argument is not a string, return \"Incompatible.\".\nIf the first and last characters\
    \ are the same, return \"Two's a pair.\".\n>>> flip_end_chars(\"Cat, dog, and\
    \ mouse.\")\n\"at, dog, and mouseC\"\n>>> flip_end_chars(\"ada\")\n\"Two's a pair.\"\
    \n>>> flip_end_chars(\"Ada\")\n\"adA\"\n>>> flip_end_chars(\"z\")\n\"Incompatible.\"\
    \n>>> flip_end_chars([1, 2, 3])\n\"Incompatible.\"*/", "    if ($a == $b) {\n\
    \        return null;\n    } elseif (is_float($a) || is_float($b)) {\n       \
    \ return max($a, $b);\n    } elseif (is_int($a) || is_int($b)) {\n        return\
    \ max($a, $b);\n    } elseif (is_string($a) || is_string($b)) {\n        return\
    \ max($a, $b);\n    }\n}\n\n/* Create a function that takes an array of integers,\
    \ and returns the largest\ninteger in the array.\n>>> largest_int([1, 2, 3])\n\
    3\n>>> largest_int([-1, -2, -3])\n-1\n>>> largest_int([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10])\n10\n>>> largest_int([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10])\n10*/", "    if (is_int($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } else {\n            return\
    \ $a > $b ? $a : $b;\n        }\n    } else {\n        return null;\n    }\n}\n\
    \n/* Create a function that takes two strings and returns true if the first\n\
    string ends with the second string; otherwise return false.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if ($a == $b) {\n        return null;\n\
    \    }\n    if (is_numeric($a) && is_numeric($b)) {\n        return $a > $b ?\
    \ $a : $b;\n    }\n    if (is_string($a) && is_string($b)) {\n        return strlen($a)\
    \ > strlen($b) ? $a : $b;\n    }\n    return is_string($a) ? $a : $b;\n}\n\n/*\
    \ Create a function that takes two strings and returns true if the first\nargument\
    \ ends with the second argument; othewise return false .\nNote: All tests contain\
    \ valid strings.\n>>> confirm_ending(\"Bastian\", \"n\")\ntrue\n>>> confirm_ending(\"\
    Connor\", \"n\")\nfalse\n>>> confirm_ending(\"Walking on water and developing\
    \ software from a specification are easy if both are frozen\", \"specification\"\
    )\nfalse\n>>> confirm_ending(\"He has to give me a new name\", \"name\")\ntrue\n\
    >>> confirm_ending(\"Open sesame\", \"same\")\ntrue\n>>> confirm_ending(\"Open\
    \ sesame\", \"pen\")\nfalse\n>>> confirm_ending(\"Open sesame\", \"game\")\nfalse\n\
    >>> confirm_ending(\"If you want to save our world, you must hurry. We dont know\
    \ how much longer we can withstand the nothing\", \"mountain\")\nfalse\n>>> confirm_ending(\"\
    Abstraction\", \"action\")\ntrue\n*/", "  if (is_int($a) && is_int($b)) {\n  \
    \  if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return null;\n    }\n  } elseif (is_float($a) && is_float($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_int($a) && is_float($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_float($a) && is_int($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_int($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_int($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_float($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } else {\n            return max($a, $b);\n        }\n    } else {\n  \
    \      return null;\n    }\n}\n\n/* Create a function that takes two strings and\
    \ returns true if the first\nargument ends with the second argument; othewise\
    \ return false .\nNote: The second argument will always be a string.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if (is_int($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "  if (is_string($a) && is_string($b))\
    \ {\n    if (str_replace(',', '.', $a) == str_replace(',', '.', $b)) {\n     \
    \ return null;\n    } elseif (str_replace(',', '.', $a) > str_replace(',', '.',\
    \ $b)) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_float($b)) {\n    if (str_replace(',', '.', $a) == $b)\
    \ {\n      return null;\n    } elseif (str_replace(',', '.', $a) > $b) {\n   \
    \   return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a)\
    \ && is_int($b)) {\n    if (str_replace(',', '.', $a) == $b) {\n      return null;\n\
    \    } elseif (str_replace(',', '.', $a) > $b) {\n      return $a;\n    } else\
    \ {\n      return $b;\n    }\n  } elseif (is_float($a) && is_string($b)) {\n \
    \   if ($a == str_replace(',', '.', $b)) {\n      return null;\n    } elseif ($a\
    \ > str_replace(',', '.', $b)) {\n      return $a;\n    } else {\n      return\
    \ $b;\n    }\n  } elseif (is_float($a) && is_float($b)) {\n    if ($a == $b) {\n\
    \      return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else {\n\
    \      return $b;\n    }\n  } elseif (is_float($a) && is_int($b)) {\n    if ($a\
    \ == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return $a;\n \
    \   } else {\n      return $b;\n    }\n  } elseif (is_int($", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if ($a == $b) {\n        return null;\n    } elseif\
    \ (is_numeric($a) && is_numeric($b)) {\n        return max($a, $b);\n    } elseif\
    \ (is_string($a) && is_string($b)) {\n        return max($a, $b);\n    } elseif\
    \ (is_numeric($a) && is_string($b)) {\n        return $b;\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        return $a;\n    }\n}\n\n/* Create a function that\
    \ takes a string and returns the number of words in the string.\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\
    \")\n0*/", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $b) {\n            return $b;\n  \
    \      } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $", "    if (is_string($a) && is_string($b))\
    \ {\n        if (str_replace(',', '.', $a) > str_replace(',', '.', $b)) {\n  \
    \          return $a;\n        } elseif (str_replace(',', '.', $a) < str_replace(',',\
    \ '.', $b)) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_string($a) && is_float($b)) {\n        if (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } elseif (str_replace(',',\
    \ '.', $a) < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } elseif (str_replace(',',\
    \ '.', $a) < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > str_replace(',', '.', $b)) {\n            return $a;\n        } elseif\
    \ ($a < str_replace(',', '.', $b)) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_int($",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if (floatval($a)\
    \ > floatval($b)) {\n            return $a;\n        } elseif (floatval($a) <\
    \ floatval($b)) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > floatval($b)) {\n            return $a;\n\
    \        } elseif ($a < floatval($b)) {\n            return $b;\n        } else\
    \ {\n            return null;\n        }\n    } elseif (is_float($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_string($b)) {\n        if ($a > floatval($b))\
    \ {\n            return $a;\n        } elseif ($a < floatval($b)) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if (float", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes two strings, and returns the\
    \ number of times\nthe first string appears in the second string.\n>>> count_substrings(\"\
    hello\", \"hello world\")\n1\n>>> count_substrings(\"world\", \"hello world\"\
    )\n1\n>>> count_substrings(\"world\", \"hello world world\")\n2\n>>> count_substrings(\"\
    world\", \"hello world world world\")\n3\n>>> count_substrings(\"world\", \"hello\
    \ world world world world\")\n4\n>>> count_substrings(\"world\", \"hello world\
    \ world world world world\")\n5\n>>> count_substrings(\"world\", \"hello world\
    \ world world world world world\")\n6\n>>> count_substrings(\"world\", \"hello\
    \ world world world world world world world\")\n7\n>>> count_substrings(\"world\"\
    , \"hello world world world world world world world world\")\n8\n>>> count_substrings(\"\
    world\", \"hello world world world world world world world world world\")\n9\n\
    >>> count_substrings(\"world\", \"hello world world world world world world world\
    \ world world world\")\n10", "    if (is_string($a) && is_string($b)) {\n    \
    \    $a = str_replace(',', '.', $a);\n        $b = str_replace(',', '.', $b);\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_numeric($a) && is_string($b)) {\n        $b = str_replace(',',\
    \ '.', $b);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_numeric($a) && is_numeric($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\
    \n/* Create a function that takes an array of integers and returns the sum of\
    \ the integers.\n>>> sum_array([1, 2, 3])\n6\n>>> sum_array([1, 2, 3, 4, 5])\n\
    15\n>>> sum_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n55*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\n>>> count_words(\"Hello world\"\
    )\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\")\n0*/",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if (str_replace(',',\
    \ '.', $a) > str_replace(',', '.', $b)) {\n            return $a;\n        } elseif\
    \ (str_replace(',', '.', $a) < str_replace(',', '.', $b)) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } else {\n \
    \       return null;\n    }\n}\n\n/* Create a function that takes two strings\
    \ and returns true if the first\nstring ends with the second string; otherwise\
    \ return false.\nNote: The function should be case insensitive.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\ntrue\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "  if (is_numeric($a) && is_numeric($b)) {\n\
    \    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_numeric($a) && is_string($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) &&\
    \ is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n        return $a\
    \ > $b ? $a : $b;\n    } elseif (is_float($a) && is_float($b)) {\n        return\
    \ $a > $b ? $a : $b;\n    } elseif (is_string($a) && is_string($b)) {\n      \
    \  return $a > $b ? $a : $b;\n    } else {\n        return null;\n    }\n}\necho\
    \ compare_one(1, 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\n\
    echo compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"\
    <br>\";\n\n/* Create a function that takes two strings and returns true if the\
    \ first\nargument ends with the second argument; othewise return false .\nNote:\
    \ If the second argument is an empty string, return true .\n>>> ends_with(\"abc\"\
    , \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\ntrue\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes an array of integers and returns\
    \ the sum of the integers.\n>>> sum_array([1, 2, 3])\n6\n>>> sum_array([1, 2,\
    \ 3, 4, 5])\n15\n>>> sum_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n55\n>>> sum_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n210*/",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n         \
    \   return null;\n        } else {\n            return max($a, $b);\n        }\n\
    \    } else {\n        return null;\n    }\n}\n\n/* Create a function that takes\
    \ two strings and returns true if the first string\ncontains all the letters of\
    \ the second string, false otherwise.\n>>> is_subset(\"abc\", \"abcd\")\ntrue\n\
    >>> is_subset(\"abc\", \"abd\")\nfalse\n>>> is_subset(\"abc\", \"abc\")\ntrue\n\
    >>> is_subset(\"abc\", \"a\")\ntrue\n>>> is_subset(\"abc\", \"\")\ntrue\n>>> is_subset(\"\
    \", \"abc\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n       \
    \ $a = (float)$a;\n        $b = (float)$b;\n        if ($a > $b) {\n         \
    \   return $a;\n        } elseif ($a < $b) {\n            return $b;\n       \
    \ } else {\n            return null;\n        }\n    } else {\n        return\
    \ null;\n    }\n}\n\n/* Create a function that takes a string and returns the\
    \ number (count) of vowels contained within it.\nNote: Vowels are the letters\
    \ a, e, i, o, u.\n>>> count_vowels(\"Celebration\")\n5\n>>> count_vowels(\"Palm\"\
    )\n1\n>>> count_vowels(\"Prediction\")\n4*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if ($a == $b) {\n        return\
    \ null;\n    } else if (is_string($a) && is_string($b)) {\n        return strcmp($a,\
    \ $b) > 0 ? $a : $b;\n    } else if (is_int($a) && is_int($b)) {\n        return\
    \ $a > $b ? $a : $b;\n    } else if (is_float($a) && is_float($b)) {\n       \
    \ return $a > $b ? $a : $b;\n    } else if (is_string($a) && is_int($b)) {\n \
    \       return $a;\n    } else if (is_string($a) && is_float($b)) {\n        return\
    \ $a;\n    } else if (is_int($a) && is_string($b)) {\n        return $b;\n   \
    \ } else if (is_float($a) && is_string($b)) {\n        return $b;\n    } else\
    \ if (is_float($a) && is_int($b)) {\n        return $a;\n    } else if (is_int($a)\
    \ && is_float($b)) {\n        return $b;\n    }\n}\n\n/* Create a function that\
    \ takes a string and returns the number of words in it.\n>>> count_words(\"Hello\
    \ world\")\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\"\
    )\n0*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes a string and returns the number of words in the string.\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n\
    4\n>>> count_words(\"\")\n0*/", "    if (is_numeric($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns a string\
    \ with its letters in alphabetical order.\n>>> alphabet_soup(\"hello\")\n\"ehllo\"\
    \n>>> alphabet_soup(\"edabit\")\n\"abdeit\"\n>>> alphabet_soup(\"hacker\")\n\"\
    acehkr\"\n>>> alphabet_soup(\"geek\")\n\"eegk\"\n>>> alphabet_soup(\"javascript\"\
    )\n\"aacijprstv\"*/", "  if (is_numeric($a) && is_numeric($b)) {\n    if ($a ==\
    \ $b) {\n      return null;\n    } else {\n      return max($a, $b);\n    }\n\
    \  } else {\n    return null;\n  }\n}\n\n/* Create a function that takes two strings\
    \ and returns true if the first\nargument ends with the second argument; false\
    \ otherwise.\nNote: Case sensitive.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>>\
    \ ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n\
    >>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"\
    tio\")\nfalse*/", "    if ($a == $b) {\n        return null;\n    } else if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a > $b) {\n            return $a;\n     \
    \   } else {\n            return $b;\n        }\n    } else if (is_string($a)\
    \ && is_string($b)) {\n        if (strlen($a) > strlen($b)) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } else if (is_string($a)\
    \ && is_numeric($b)) {\n        return $b;\n    } else if (is_numeric($a) && is_string($b))\
    \ {\n        return $b;\n    }\n}\n\n/* Create a function that takes an array\
    \ of integers, and returns the largest\ninteger in the array.\n>>> compare_two([1,\
    \ 2, 3])\n3\n>>> compare_two([1, \"2\", 3])\n3\n>>> compare_two([1, 2, \"3\"])\n\
    3\n>>> compare_two([1, 2, \"3,4\"])\n\"3,4\"\n>>> compare_two([1, \"2,3\", 3])\n\
    \"2,3\"\n>>> compare_two([1, \"2,3\", \"3,4\"])\n\"3,4\"\n>>> compare_two([1,\
    \ \"2,3\", \"3,4\", \"4,5\"])\n\"4,5\"*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n/* Create a function that takes integers, floats, or strings representing\n\
    real numbers, and returns the larger variable in its given variable type.\nReturn\
    \ null if the values are equal.\nNote: If a real number is represented as a string,\
    \ the floating point might be . or ,\n>>> compare_two(1, 2.5)\n2.5\n>>> compare_two(1,\
    \ \"2,3\")\n\"2,3\"\n>>> compare_two(\"5,1\", \"6\")\n\"6\"\n>>> compare_two(\"\
    1\", 1)\nnull*/", "    if (is_string($a) && is_string($b)) {\n        if ($a >\
    \ $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $b) {\n            return $b;\n        }\
    \ else {\n            return null;\n        }\n    } elseif (is_string($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n  \
    \      if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if\
    \ (is_numeric($a) && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  } elseif (is_string($a) && is_string($b)) {\n    if ($a == $b) {\n \
    \     return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else {\n\
    \      return $b;\n    }\n  } elseif (is_string($a) && is_numeric($b)) {\n   \
    \ if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_numeric($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  }\n}\n\n/* Create a function\
    \ that takes an array of integers and returns the sum of the integers\nafter adding\
    \ 1 to each.\n>>> plus_one([1, 2, 3, 4])\n14\n>>> plus_one([-1, -2, -3, -4])\n\
    -10*/", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if ($a == $b) {\n        return\
    \ null;\n    }\n    if (is_string($a) && is_string($b)) {\n        $a = str_replace(\"\
    ,\", \".\", $a);\n        $b = str_replace(\",\", \".\", $b);\n        if ($a\
    \ > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    }\n    if (is_string($a) && is_float($b)) {\n        $a = str_replace(\"\
    ,\", \".\", $a);\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n    if (is_string($a) && is_int($b))\
    \ {\n        $a = str_replace(\",\", \".\", $a);\n        if ($a > $b) {\n   \
    \         return $a;\n        } else {\n            return $b;\n        }\n  \
    \  }\n    if (is_string($b) && is_float($a)) {\n        $b = str_replace(\",\"\
    , \".\", $b);\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n    if (is_string($b) && is_int($a))\
    \ {\n        $b = str_replace(\",\", \".\", $b);\n        if ($a > $b) {\n   \
    \         return $a;\n        } else {\n            return $b;\n        }\n  \
    \  }\n    if (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } else {\n            return $b;\n        }\n    }\n\
    \    if (is_float($b) && is_int($a)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes an array\
    \ of integers and returns the largest\ninteger in the array.\n>>> compare_two([1,\
    \ 2, 3])\n3\n>>> compare_two([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n10\n>>> compare_two([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n20\n>>>\
    \ compare_two([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60", "  if (is_numeric($a) && is_numeric($b)) {\n    if ($a == $b)\
    \ {\n      return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else\
    \ {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b)) {\n\
    \    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_numeric($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_numeric($a)\
    \ && is_string($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif ($a\
    \ > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  }\n}\n\n\
    /* Create a function that takes two strings and returns true if the first string\n\
    ends with the second string; otherwise return false.\n>>> ends_with(\"abc\", \"\
    bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\",\
    \ \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "  if (is_numeric($a) && is_numeric($b)) {\n\
    \    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_float($a)\
    \ && is_float($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif ($a\
    \ > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_int($a) && is_int($b)) {\n    if ($a == $b) {\n      return null;\n    }\
    \ elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n\
    \  } else {\n    return null;\n  }\n}\n\n/* Create a function that takes two strings\
    \ and returns true if the first\nargument ends with the second argument; othewise\
    \ return false .\nNote: All tests contain valid strings.\n>>> confirm_ending(\"\
    Bastian\", \"n\")\ntrue\n>>> confirm_ending(\"Connor\", \"n\")\nfalse\n>>> confirm_ending(\"\
    Walking on water and developing software from a specification are easy if both\
    \ are frozen\", \"specification\")\nfalse\n>>> confirm_ending(\"He has to give\
    \ me a new name\", \"name\")\ntrue\n>>> confirm_ending(\"Open sesame\", \"same\"\
    )\ntrue\n>>> confirm_ending(\"Open sesame\", \"pen\")\nfalse\n>>> confirm_ending(\"\
    If you want to save our world, you must hurry. We dont know how much longer we\
    \ can withstand the nothing\", \"mountain\")\nfalse*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } else {\n            return max($a, $b);\n        }\n    } else {\n  \
    \      return null;\n    }\n}\n\n/* Create a function that takes two strings and\
    \ returns true if the first string\nends with the second string; otherwise return\
    \ false.\nNote: The second string may be a single character.\n>>> ends_with(\"\
    abc\", \"c\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"abc\"\
    , \"bc\")\ntrue\n>>> ends_with(\"abc\", \"abc\")\ntrue\n>>> ends_with(\"abc\"\
    , \"abcd\")\nfalse\n>>> ends_with(\"abc\", \"\")\ntrue*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        $a = floatval($a);\n        $b = floatval($b);\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } else {\n        return null;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the first three characters.\nIf the string is less than\
    \ 3 characters, return the string itself.\n>>> first_three(\"Python\")\n\"Pyt\"\
    \n>>> first_three(\"IP\")\n\"IP\"\n>>> first_three(\"hi\")\n\"hi\"*/", "  if (is_numeric($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_string($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  } elseif (is_numeric($a) && is_string($b)) {\n    if ($a == $b) {\n\
    \      return null;\n    } elseif ($a > $b) {\n      return $a;\n    } else {\n\
    \      return $b;\n    }\n  } elseif (is_string($a) && is_numeric($b)) {\n   \
    \ if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  }\n}\n\n/* Create a function that\
    \ takes an array of integers, and returns the largest\ninteger.\n>>> compare_two([1,\
    \ 2, 3])\n3\n>>> compare_two([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n10\n>>> compare_two([-1,\
    \ -2, -3])\n-1\n>>> compare_two([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10])\n-1\n\
    >>> compare_two([1, 2, 3, \"4\"])\n3*/", "    if (is_string($a) && is_string($b))\
    \ {\n        if (str_replace(',', '.', $a) == str_replace(',', '.', $b)) {\n \
    \           return null;\n        } elseif (str_replace(',', '.', $a) > str_replace(',',\
    \ '.', $b)) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_string($a) && is_float($b)) {\n        if (str_replace(',',\
    \ '.', $a) == $b) {\n            return null;\n        } elseif (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } else {\n            return\
    \ $b;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if (str_replace(',',\
    \ '.', $a) == $b) {\n            return null;\n        } elseif (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } else {\n            return\
    \ $b;\n        }\n    } elseif (is_string($b) && is_float($a)) {\n        if (str_replace(',',\
    \ '.', $b) == $a) {\n            return null;\n        } elseif (str_replace(',',\
    \ '.', $b) > $a) {\n            return $b;\n        } else {\n            return\
    \ $a;\n        }\n    } elseif (is_string($b) && is_int($a)) {\n        if (str_replace(',',\
    \ '.', $b) == $a) {\n            return null;\n        } elseif (str_replace(',',\
    \ '.', $b) > $a) {\n            return $b;\n        } else {\n            return\
    \ $a;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $", "    if (is_string($a) && is_string($b)) {\n        if (str_replace(',',\
    \ '.', $a) > str_replace(',', '.', $b)) {\n            return $a;\n        } elseif\
    \ (str_replace(',', '.', $a) < str_replace(',', '.', $b)) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if (str_replace(',', '.', $a)\
    \ > $b) {\n            return $a;\n        } elseif (str_replace(',', '.', $a)\
    \ < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_string($a) && is_float($b)) {\n        if (str_replace(',',\
    \ '.', $a) > $b) {\n            return $a;\n        } elseif (str_replace(',',\
    \ '.', $a) < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > str_replace(',', '.', $b)) {\n            return $a;\n        } elseif ($a\
    \ < str_replace(',', '.', $b)) {\n            return $b;\n        } else {\n \
    \           return null;\n        }\n    } elseif (is_float($", "  if (is_numeric($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } else {\n\
    \      return max($a, $b);\n    }\n  } else {\n    return null;\n  }\n}\n\n/*\
    \ Create a function that takes an array of numbers and returns the largest number.\n\
    >>> largest_number([1, 2, 3])\n3\n>>> largest_number([3, 2, 1])\n3\n>>> largest_number([3,\
    \ 3, 3])\n3\n>>> largest_number([-1, -2, -3])\n-1*/", "    if (is_int($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n  \
    \      if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/*Create a function that takes a string and returns a new string\
    \ with all vowels removed.\n>>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"\
    Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs\
    \ Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\")\n\"\"\n>>> remove_vowels(\"why\
    \ try, shy fly?\")\n\"why try, shy fly?\"*/", "    if ($a == $b) {\n        return\
    \ null;\n    } elseif (is_string($a) && is_string($b)) {\n        return strcmp($a,\
    \ $b) > 0 ? $a : $b;\n    } elseif (is_int($a) && is_int($b)) {\n        return\
    \ $a > $b ? $a : $b;\n    } elseif (is_float($a) && is_float($b)) {\n        return\
    \ $a > $b ? $a : $b;\n    } elseif (is_string($a) && is_int($b)) {\n        return\
    \ $a > $b ? $a : $b;\n    } elseif (is_string($a) && is_float($b)) {\n       \
    \ return $a > $b ? $a : $b;\n    } elseif (is_int($a) && is_string($b)) {\n  \
    \      return $a > $b ? $a : $b;\n    } elseif (is_float($a) && is_string($b))\
    \ {\n        return $a > $b ? $a : $b;\n    }\n}\n\n/* Create a function that\
    \ takes a string and returns the number of words it contains.\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\
    \")\n0*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes an array of integers, floats, or strings representing\n\
    real numbers, and returns the largest value in its given array.\nReturn null if\
    \ the array is empty.\nNote: If a real number is represented as a string, the\
    \ floating point might be . or ,\n>>> compare_two([1, 2.5])\n2.5\n>>> compare_two([1,\
    \ \"2,3\"])\n\"2,3\"\n>>> compare_two([\"5,1\", \"6\"])\n\"6\"\n>>> compare_two([\"\
    1\", 1])\nnull*/", "    if (is_string($a) && is_string($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        $b = str_replace(',', '.', $b);\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        $a = str_replace(',', '.', $a);\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        $b = str_replace(',', '.', $b);\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a > $b) {\n            return $a;\n     \
    \   } elseif ($a < $b) {\n            return $b;\n        } else {\n         \
    \   return null;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns a string with its letters in alphabetical order.\n>>> alphabet_soup(\"\
    hello\")\n\"ehllo\"\n>>> alphabet_soup(\"edabit\")\n\"abdeit\"\n>>> alphabet_soup(\"\
    hacker\")\n\"acehkr\"\n>>> alphabet_soup(\"geek\")\n\"eegk\"\n>>> alphabet_soup(\"\
    javascript\")\n\"aacijprstv\"*/", "    if (is_int($a) && is_int($b)) {\n     \
    \   return $a > $b ? $a : $b;\n    }\n    if (is_float($a) && is_float($b)) {\n\
    \        return $a > $b ? $a : $b;\n    }\n    if (is_string($a) && is_string($b))\
    \ {\n        return $a > $b ? $a : $b;\n    }\n    return null;\n}\n\n/* Create\
    \ a function that takes a string and returns the number of words in the string.\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n\
    4\n>>> count_words(\"\")\n0*/", "    if (is_numeric($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } else {\n       \
    \     return max($a, $b);\n        }\n    } else {\n        return null;\n   \
    \ }\n}\n\n/* Create a function that takes integers, floats, or strings representing\n\
    real numbers, and returns the larger variable in its given variable type.\nReturn\
    \ null if the values are equal.\nNote: If a real number is represented as a string,\
    \ the floating point might be . or ,\n>>> compare_two(1, 2.5)\n2.5\n>>> compare_two(1,\
    \ \"2,3\")\n\"2,3\"\n>>> compare_two(\"5,1\", \"6\")\n\"6\"\n>>> compare_two(\"\
    1\", 1)\nnull*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a ==\
    \ $b) {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes two strings and returns true if the first\nargument ends\
    \ with the second argument; othewise return false.\nNote: The second argument\
    \ will always be a string.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>> ends_with(\"\
    abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n>>> ends_with(\"\
    feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"tio\")\nfalse*/",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n        \
    \    return null;\n        } elseif ($a > $b) {\n            return $a;\n    \
    \    } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_int($a) && is_int($b)) {\n     \
    \   if ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a == $b) {\n    \
    \        return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a == $b) {\n            return null;\n      \
    \  } elseif ($a > $b) {\n            return $a;\n        } else {\n          \
    \  return $b;\n        }\n    } elseif (is_string($a) && is_float($b)) {\n   \
    \     if ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a == $b) {\n     \
    \       return null;\n        } elseif ($a > $b) {\n            return $a;\n \
    \       } else {\n            return $b;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a >", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the string\
    \ with the first\nletter of each word capitalized.\n>>> capitalize(\"hello world\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    hello world, how are you?\")\n\"Hello World, How Are You?\"\n>>> capitalize(\"\
    hello world, how are you? I'm fine, thank you!\")\n\"Hello World, How Are You?\
    \ I'm Fine, Thank You!\"*/", "    if (is_int($a) && is_int($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n          \
    \  return $a;\n        } elseif ($a < $b) {\n            return $b;\n        }\
    \ else {\n            return null;\n        }\n    } elseif (is_string($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $b) {\n            return $b;\n  \
    \      } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\necho compare_one(1, 2.5) . \"\\n\";\necho\
    \ compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\\
    n\";\necho compare_one(\"1\", 1) . \"\\n\";", "    if ($a == $b) {\n        return\
    \ null;\n    }\n    if (is_string($a) && is_string($b)) {\n        $a = str_replace(\"\
    ,\", \".\", $a);\n        $b = str_replace(\",\", \".\", $b);\n        if ($a\
    \ > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    }\n    if (is_string($a) && is_float($b)) {\n        $a = str_replace(\"\
    ,\", \".\", $a);\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n    if (is_string($a) && is_int($b))\
    \ {\n        $a = str_replace(\",\", \".\", $a);\n        if ($a > $b) {\n   \
    \         return $a;\n        } else {\n            return $b;\n        }\n  \
    \  }\n    if (is_string($b) && is_float($a)) {\n        $b = str_replace(\",\"\
    , \".\", $b);\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n    if (is_string($b) && is_int($a))\
    \ {\n        $b = str_replace(\",\", \".\", $b);\n        if ($a > $b) {\n   \
    \         return $a;\n        } else {\n            return $b;\n        }\n  \
    \  }\n    if (is_float($a) && is_string($b)) {\n        $b = str_replace(\",\"\
    , \".\", $b);\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n    if (is_float($a) && is_int($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    }\n    if (is_float($b) && is_int($a)) {\n \
    \       if ($a > $", "  if (is_int($a) && is_int($b)) {\n    if ($a > $b) {\n\
    \      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n\
    \      return null;\n    }\n  } elseif (is_float($a) && is_float($b)) {\n    if\
    \ ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return null;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_int($a) && is_float($b))\
    \ {\n    return $b;\n  } elseif (is_float($a) && is_int($b)) {\n    return $a;\n\
    \  } elseif (is_int($a) && is_string($b)) {\n    return $b;\n  } elseif (is_string($a)\
    \ && is_int($b)) {\n    return $a;\n  } elseif (is_float($a) && is_string($b))\
    \ {\n    return $b;\n  } elseif (is_string($a) && is_float($b)) {\n    return\
    \ $a;\n  } else {\n    return null;\n  }\n}\n\n/* Create a function that takes\
    \ two strings, and returns the number of times\nthe first string appears in the\
    \ second string.\n>>> count_substring(\"hello\", \"hello world\")\n1\n>>> count_substring(\"\
    a\", \"hello world\")\n0\n>>> count_substring(\"a\", \"aaaaa\")\n5\n>>> count_substring(\"\
    a\", \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if ($a == $b) {\n        return null;\n    }\n    if\
    \ (is_numeric($a) && is_numeric($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n    if (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } else {\n            return $b;\n        }\n    }\n    if (is_string($a) &&\
    \ is_numeric($b)) {\n        return $b;\n    }\n    if (is_numeric($a) && is_string($b))\
    \ {\n        return $a;\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\n>>> count_words(\"Hello world\"\
    )\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\")\n0*/",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n        \
    \    return null;\n        } elseif ($a > $b) {\n            return $a;\n    \
    \    } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes an array of integers and returns the sum of all\nthe integers.\n\
    >>> sum_all([1, 2, 3])\n6\n>>> sum_all([1, 2, 3, 4, 5])\n15\n>>> sum_all([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10])\n55\n>>> sum_all([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20])\n210*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } else {\n   \
    \         return $a > $b ? $a : $b;\n        }\n    } else {\n        return null;\n\
    \    }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first string\nends with the second string; otherwise return false.\nNote: The\
    \ function should be case-insensitive.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n\
    >>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n\
    >>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"\
    tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } elseif ($a > $b) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_int($a) && is_int($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } else {\n        return\
    \ null;\n    }\n}\n\n/* Create a function that takes two strings, and returns\
    \ the number of times\nthe second string occurs in the first string.\n>>> count_substring(\"\
    This is a test string\", \"is\")\n2\n>>> count_substring(\"babababa\", \"baba\"\
    )\n3\n>>> count_substring(\"Python is an awesome language to program in!\", \"\
    o\")\n4\n>>> count_substring(\"We have nothing in common!\", \"really?\")\n0\n\
    >>> count_substring(\"This is this and that is this\", \"this\")\n2*/", "    if\
    \ (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_string($a) && is_string($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a ==\
    \ $b) {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns the first character that is not repeated\nanywhere in the string.\n\
    For example, the first non-repeated character in the string \u2018DBCABA\u2019\
    \ is \u2018D\u2019.\n>>> first_non_repeated(\"DBCABA\")\n'D'\n>>> first_non_repeated(\"\
    BBCCD\")\n'A'\n>>> first_non_repeated(\"BACDB\")\n'C'*/", "    if (is_numeric($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_numeric($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    }\n}\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\n>>> count_words(\"I love PHP\"\
    )\n3\n>>> count_words(\"I love PHP, but I hate Javascript\")\n6\n>>> count_words(\"\
    \")\n0*/", "  if (gettype($a) == gettype($b)) {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  } else {\n    if (gettype($a) == \"string\") {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  }\n}", "  if (is_int($a) && is_int($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } elseif (is_float($a) && is_float($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } elseif (is_int($a) && is_float($b))\
    \ {\n    return $b;\n  } elseif (is_float($a) && is_int($b)) {\n    return $a;\n\
    \  } elseif (is_int($a) && is_string($b)) {\n    return $b;\n  } elseif (is_string($a)\
    \ && is_int($b)) {\n    return $a;\n  } elseif (is_float($a) && is_string($b))\
    \ {\n    return $b;\n  } elseif (is_string($a) && is_float($b)) {\n    return\
    \ $a;\n  } else {\n    return null;\n  }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of words in the string.\n>>> count_words(\"\
    This is a test\")\n4\n>>> count_words(\"This is a test of the function\")\n7\n\
    >>> count_words(\"This is a test of the function count_words\")\n10*/", "    if\
    \ (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_int($a) && is_int($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_numeric($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns a string\
    \ with its letters in alphabetical order.\n>>> alphabet_soup(\"hello\")\n\"ehllo\"\
    \n>>> alphabet_soup(\"edabit\")\n\"abdeit\"\n>>> alphabet_soup(\"hacker\")\n\"\
    acehkr\"\n>>> alphabet_soup(\"geek\")\n\"eegk\"\n>>> alphabet_soup(\"javascript\"\
    )\n\"aacijprstv\"*/", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_string($a)\
    \ && is_string($b)) {\n        $a = str_replace(',', '.', $a);\n        $b = str_replace(',',\
    \ '.', $b);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_string($a) && is_int($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_string($a) && is_float($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        $b = str_replace(',',\
    \ '.', $b);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_float($a) && is_string($b)) {\n        $b = str_replace(',',\
    \ '.', $b);\n        if ($a == $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_int($a) && is_int($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_int($",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if (is_numeric($a)\
    \ && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_string($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  } elseif (is_string($a) && is_numeric($b)) {\n    if ($a > $b) {\n \
    \     return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_numeric($a)\
    \ && is_string($b)) {\n    if ($a > $b) {\n      return $a;\n    } else {\n  \
    \    return $b;\n    }\n  }\n}", "    if (is_int($a) && is_int($b)) {\n      \
    \  if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n    \
    \        return $b;\n        } else {\n            return null;\n        }\n \
    \   } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "  if (is_numeric($a) && is_numeric($b)) {\n    if ($a ==\
    \ $b) {\n      return null;\n    } elseif ($a > $b) {\n      return $a;\n    }\
    \ else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_numeric($a)\
    \ && is_string($b)) {\n    if ($a == $b) {\n      return null;\n    } elseif ($a\
    \ > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif\
    \ (is_string($a) && is_numeric($b)) {\n    if ($a == $b) {\n      return null;\n\
    \    } elseif ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n\
    \    }\n  }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\
    I love PHP and Python\")\n5\n>>> count_words(\"\")\n0*/", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        return $b;\n    } elseif (is_float($a) && is_int($b))\
    \ {\n        return $a;\n    } elseif (is_int($a) && is_string($b)) {\n      \
    \  return $b;\n    } elseif (is_string($a) && is_int($b)) {\n        return $a;\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        return $b;\n    } elseif\
    \ (is_string($a) && is_float($b)) {\n        return $a;\n    } else {\n      \
    \  return null;\n    }\n}\n\n/* Create a function that takes two strings and returns\
    \ true if the first\nstring ends with the second string; otherwise return false.\n\
    Note: The function should be case insensitive.\n>>> ends_with(\"abc\", \"bc\"\
    )\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\"\
    )\ntrue\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\"\
    , \"tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns a new string\
    \ with all vowels removed.\n>>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"\
    Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs\
    \ Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\")\n\"\"\n>>> remove_vowels(\"why\
    \ try, shy fly?\")\n\"why try, shy fly?\"*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\
    \")\n0\n>>> count_words(\"I love PHP and JavaScript\")\n5\n>>> count_words(\"\
    I love PHP and JavaScript and Python\")\n7*/", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } else {\n   \
    \         return max($a, $b);\n        }\n    } else {\n        return null;\n\
    \    }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first string\nends with the second string; otherwise return false.\nNote: The\
    \ second string may be a single character.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n\
    >>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\nfalse\n\
    >>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"\
    tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a\
    \ == $b) {\n            return null;\n        } else {\n            return max($a,\
    \ $b);\n        }\n    } else {\n        return null;\n    }\n}", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $", "  if (is_int($a) && is_int($b))\
    \ {\n    return $a > $b ? $a : $b;\n  } elseif (is_float($a) && is_float($b))\
    \ {\n    return $a > $b ? $a : $b;\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    return $a > $b ? $a : $b;\n  } else {\n    return null;\n  }\n}\n\n/*\
    \ Create a function that takes two strings and returns true if the first\nargument\
    \ ends with the second argument; othewise return false.\nNote: The second string\
    \ may be longer than the first.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>> ends_with(\"\
    abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\ntrue\n>>> ends_with(\"\
    feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"tio\")\nfalse*/",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } elseif ($a < $b) {\n            return $b;\n       \
    \ } else {\n            return null;\n        }\n    } elseif (is_string($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n       \
    \ if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n     \
    \       return $b;\n        } else {\n            return null;\n        }\n  \
    \  } elseif (is_numeric($a) && is_string($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } elseif ($a < $b) {\n            return $b;\n  \
    \      } else {\n            return null;\n        }\n    }\n}\n\n/* Create a\
    \ function that takes two strings and returns true if the first\nargument ends\
    \ with the second argument; othewise return false .\nNote: All tests contain valid\
    \ strings.\n>>> confirm_ending(\"Bastian\", \"n\")\ntrue\n>>> confirm_ending(\"\
    Connor\", \"n\")\nfalse\n>>> confirm_ending(\"Walking on water and developing\
    \ software from a specification are easy if both are frozen\", \"specification\"\
    )\nfalse\n>>> confirm_ending(\"He has to give me a new name\", \"name\")\ntrue\n\
    >>> confirm_ending(\"Open sesame\", \"same\")\ntrue\n>>> confirm_ending(\"Open\
    \ sesame\", \"pen\")\nfalse\n>>> confirm_ending(\"Open sesame\", \"game\")\nfalse\n\
    >>> confirm_ending(\"If you want to save our world, you must hurry. We dont know\
    \ how much longer we can withstand the nothing\", \"mountain\")\nfalse\n>>> confirm_ending(\"\
    Abstraction\", \"action\")\ntrue*/", "    if (is_int($a) && is_int($b)) {\n  \
    \      if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b) {\n     \
    \       return $a;\n        } elseif ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if\
    \ ($a == $b) {\n            return null;\n        } elseif ($a > $b) {\n     \
    \       return $a;\n        } else {\n            return $b;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n       \
    \     return null;\n        } elseif ($a > $b) {\n            return $a;\n   \
    \     } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes an array of strings, and returns\
    \ the longest\nstring in the array.\n>>> longest_string([\"a\", \"ab\", \"abc\"\
    ])\n\"abc\"\n>>> longest_string([\"a\", \"ab\", \"abc\", \"abcd\"])\n\"abcd\"\n\
    >>> longest_string([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"])\n\"abcde\"\n\
    >>> longest_string([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\", \"abcdef\"])\n\
    \"abcdef\"*/", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "   \
    \ if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if (is_numeric($a)\
    \ && is_numeric($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a\
    \ < $b) {\n      return $b;\n    } else {\n      return null;\n    }\n  } else\
    \ {\n    return null;\n  }\n}", "    if ($a == $b) {\n        return null;\n \
    \   } elseif (is_string($a) && is_string($b)) {\n        return strlen($a) > strlen($b)\
    \ ? $a : $b;\n    } elseif (is_string($a) && is_numeric($b)) {\n        return\
    \ strlen($a) > $b ? $a : $b;\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        return $a > strlen($b) ? $a : $b;\n    } else {\n        return $a >\
    \ $b ? $a : $b;\n    }\n}\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1,\
    \ \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"\
    1\", 1) . PHP_EOL;", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_float($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a\
    \ > $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $", "    if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_string($b)) {\n        if ($a > $b) {\n        \
    \    return $a;\n        } elseif ($a < $b) {\n            return $b;\n      \
    \  } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_float($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}\n\n/* Create a function that takes an array of integers and returns\
    \ the sum of the integers.\n>>> sum_array([1, 2, 3])\n6\n>>> sum_array([1, 2,\
    \ 3, 4, 5])\n15\n>>> sum_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n55*/", "    if\
    \ (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_int($a) && is_string($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_string($a) && is_int($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $", "  if\
    \ (is_int($a) && is_int($b)) {\n    if ($a > $b) {\n      return $a;\n    } elseif\
    \ ($a < $b) {\n      return $b;\n    } else {\n      return null;\n    }\n  }\
    \ elseif (is_float($a) && is_float($b)) {\n    if ($a > $b) {\n      return $a;\n\
    \    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return null;\n\
    \    }\n  } elseif (is_string($a) && is_string($b)) {\n    if ($a > $b) {\n  \
    \    return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n  \
    \    return null;\n    }\n  } elseif (is_int($a) && is_float($b)) {\n    return\
    \ $b;\n  } elseif (is_float($a) && is_int($b)) {\n    return $a;\n  } elseif (is_int($a)\
    \ && is_string($b)) {\n    return $b;\n  } elseif (is_string($a) && is_int($b))\
    \ {\n    return $a;\n  } elseif (is_float($a) && is_string($b)) {\n    return\
    \ $b;\n  } elseif (is_string($a) && is_float($b)) {\n    return $a;\n  } else\
    \ {\n    return null;\n  }\n}\n\n/* Create a function that takes two arrays of\
    \ integers and returns an array\nof integers containing the elements from both\
    \ arrays, sorted in ascending order.\n>>> merge_sort([1, 3, 5], [2, 4, 6])\n[1,\
    \ 2, 3, 4, 5, 6]\n>>> merge_sort([1, 3, 5], [2, 4, 6, 8])\n[1, 2, 3, 4, 5, 6,\
    \ 8]\n>>> merge_sort([1, 3, 5, 7], [2, 4, 6])\n[1, 2, 3, 4, 5, 6, 7]\n>>> merge_",
  "    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n        \
    \    return null;\n        } elseif ($a > $b) {\n            return $a;\n    \
    \    } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return null;\n   \
    \     } elseif ($a > $b) {\n            return $a;\n        } else {\n       \
    \     return $b;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a == $b)\
    \ {\n            return null;\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\n\n/* Create\
    \ a function that takes two arrays of numbers and returns an array\nwith the first\
    \ element of the first array and the last element of the second array.\n>>> combine_arrays([1,\
    \ 2, 3], [4, 5, 6])\n[1, 6]\n>>> combine_arrays([1, 2, 3], [4, 5, 6, 7, 8])\n\
    [1, 8]\n>>> combine_arrays([1, 2, 3, 4, 5], [6, 7, 8])\n[1, 8]*/", "    if (is_string($a)\
    \ && is_string($b)) {\n        if (str_replace(\",\", \".\", $a) > str_replace(\"\
    ,\", \".\", $b)) {\n            return $a;\n        } elseif (str_replace(\",\"\
    , \".\", $a) < str_replace(\",\", \".\", $b)) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if (str_replace(\",\", \".\", $a) > $b) {\n  \
    \          return $a;\n        } elseif (str_replace(\",\", \".\", $a) < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a > str_replace(\"\
    ,\", \".\", $b)) {\n            return $a;\n        } elseif ($a < str_replace(\"\
    ,\", \".\", $b)) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_numeric($a) && is_numeric($b)) {\n      \
    \  if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n    \
    \        return $b;\n        } else {\n            return null;\n        }\n \
    \   }\n}\n\n/* Create a function that takes a string and returns the number of\
    \ words in the string.\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"\")\n0*/", "    if (is_int($a) &&\
    \ is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif (is_float($a) && is_float($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return null;\n        }\n    } elseif (is_int($a) && is_float($b)) {\n    \
    \    if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n  \
    \          return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n           \
    \ return $a;\n        } elseif ($a < $", "    if (is_numeric($a) && is_numeric($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } else {\n   \
    \         return max($a, $b);\n        }\n    } else {\n        return null;\n\
    \    }\n}\n\n/* Create a function that takes two strings and returns true if the\
    \ first string\nends with the second string; otherwise return false.\n>>> ends_with(\"\
    abc\", \"bc\")\ntrue\n>>> ends_with(\"abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\"\
    , \"zi\")\nfalse\n>>> ends_with(\"feminine\", \"nine\")\ntrue\n>>> ends_with(\"\
    convention\", \"tio\")\nfalse*/", "    if (is_numeric($a) && is_numeric($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_numeric($b)) {\n        if ($a == $b) {\n            return null;\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } elseif (is_numeric($a) && is_string($b)) {\n\
    \        if ($a == $b) {\n            return null;\n        } elseif ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    }\n}", "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_string($a) && is_string($b)) {\n \
    \       if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_string($a) && is_int($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_int($a) &&\
    \ is_string($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_string($a) && is_float($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ elseif (is_float($a) && is_string($b)) {\n        if ($a > $b) {\n         \
    \   return $a;\n        } elseif ($a < $b) {\n            return $b;\n       \
    \ } else {\n            return null;\n        }\n    } elseif (is_float($a) &&\
    \ is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $", "    if (is_numeric($a) && is_numeric($b)) {\n        if (floatval($a)\
    \ == floatval($b)) {\n            return null;\n        } else {\n           \
    \ return max(floatval($a), floatval($b));\n        }\n    } else {\n        return\
    \ null;\n    }\n}\n\n/*Create a function that takes two strings and returns true\
    \ if the first string\ncontains the second string.\n>>> contains_string(\"hello\"\
    , \"lo\")\ntrue\n>>> contains_string(\"hello\", \"he\")\ntrue\n>>> contains_string(\"\
    hello\", \"ol\")\nfalse*/", "  if (is_numeric($a) && is_numeric($b)) {\n    if\
    \ ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n      return $a;\n\
    \    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    if ($a == $b) {\n      return null;\n    } elseif ($a > $b) {\n     \
    \ return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a)\
    \ && is_numeric($b)) {\n    if ($a > $b) {\n      return $a;\n    } else {\n \
    \     return $b;\n    }\n  } elseif (is_numeric($a) && is_string($b)) {\n    if\
    \ ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n    }\n  }\n\
    }\n\n/* Create a function that takes two strings and returns true if the first\n\
    argument ends with the second argument; othewise return false .\nNote: All tests\
    \ contain valid strings.\n>>> ends_with(\"abc\", \"bc\")\ntrue\n>>> ends_with(\"\
    abc\", \"d\")\nfalse\n>>> ends_with(\"samurai\", \"zi\")\ntrue\n>>> ends_with(\"\
    feminine\", \"nine\")\ntrue\n>>> ends_with(\"convention\", \"tio\")\nfalse*/",
  "    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n            return\
    \ $a;\n        } elseif ($a < $b) {\n            return $b;\n        } else {\n\
    \            return null;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif (is_string($a) && is_string($b)) {\n        if ($a > $b)\
    \ {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif (is_int($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return null;\n        }\n    } elseif (is_float($a) && is_int($b)) {\n     \
    \   if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n   \
    \         return $b;\n        } else {\n            return null;\n        }\n\
    \    } elseif (is_int($a) && is_string($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return null;\n        }\n    } elseif (is_string($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif (is_float($a) && is_string($b)) {\n        if\
    \ ($a > $b) {\n            return $a;\n        } elseif ($a < $"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_70_strange_sort_list
language: php
prompt: "<?php\n/* Given array of integers, return array in strange order.\nStrange\
  \ sorting, is when you start with the minimum value,\nthen maximum of the remaining\
  \ integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1, 2,\
  \ 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
  \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/\nfunction strange_sort_list($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return strange_sort_list(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
  \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
  \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (empty($lst)) {\n        return $lst;\n    }\n    $result =\
    \ array();\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[array_search($min, $lst)]);\n    unset($lst[array_search($max,\
    \ $lst)]);\n    $lst = array_values($lst);\n    if (!empty($lst)) {\n        $result\
    \ = array_merge($result, strange_sort_list($lst));\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\";", "    if\
    \ (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $result = array_merge($result, strange_sort_list($lst));\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\n$lst = array(5,\
    \ 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\n$lst = array();\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\necho \"<pre>\";\nprint_r(strange_sort_list($lst));\n\
    echo \"</pre>\";", "    $result = [];\n    $count = count($lst);\n    $i = 0;\n\
    \    while ($i < $count) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        if ($i % 2 == 0) {\n            $result[] = $min;\n            $key =\
    \ array_search($min, $lst);\n            unset($lst[$key]);\n        } else {\n\
    \            $result[] = $max;\n            $key = array_search($max, $lst);\n\
    \            unset($lst[$key]);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $result[] = $lst[$j];\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while(count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $key = array_search(min($lst), $lst);\n          \
    \  unset($lst[$key]);\n        } else {\n            $result[] = max($lst);\n\
    \            $key = array_search(max($lst), $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    print_r(strange_sort_list($lst));", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    sort($lst);\n    $result = [];\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $lst[$i];\n   \
    \     } else {\n            array_unshift($result, $lst[$i]);\n        }\n   \
    \ }\n    return $result;\n}\n\n/*\n * Given a string, return a string where for\
    \ every char in the original,\n * there are two chars.\n * Examples:\n * >>> double_char('The')\n\
    \ * 'TThhee'\n * >>> double_char('AAbb')\n * 'AAAAbbbb'\n * >>> double_char('Hi-There')\n\
    \ * 'HHii--TThheerree'\n */", "    $result = [];\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $count\
    \ -= 2;\n    while ($count > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $count -= 2;\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\n\
    print_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));", " \
    \   if (empty($lst)) return [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = [];\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $res;\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    if (empty($lst)) return $", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $key\
    \ = array_search($min, $lst);\n            unset($lst[$key]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index]\
    \ = $min;\n    return $lst;\n}\n\n/* Given array of integers, return array in\
    \ strange order.\nStrange sorting, is when you start with the minimum value,\n\
    then maximum of the remaining integers, then minimum and so on.\nExamples:\n>>>\
    \ strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5,\
    \ 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = [];\nprint_r(strange_sort_list($lst));", "    $result = [];\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst\
    \ = array_values($lst);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $lst = array_unique($lst);\n    $lst = array_values($lst);\n    $lst_len =\
    \ count($lst);\n    $result = [];\n    $i = 0;\n    $j = $lst_len - 1;\n    while\
    \ ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j) {\n     \
    \       $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = [];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5", "    $result = [];\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    sort($lst);\n   \
    \ $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $result[] = $lst[$i];\n\
    \        $result[] = $lst[$j];\n        $i++;\n        $j--;\n    }\n    if ($i\
    \ == $j) {\n        $result[] = $lst[$i];\n    }\n    return $result;\n}\n\n$lst\
    \ = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = [5,\
    \ 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    if (count($lst) == 0) {\n        return array();\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $new_lst[]\
    \ = $min;\n        $new_lst[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $new_lst;\n}\n\n/* Given a string, return a string\
    \ where for every char in the original,\nthere are two chars.\nExamples:\n>>>\
    \ double_char('The')\n'TThhee'\n>>> double_char('AAbb')\n'AAAAbbbb'\n>>> double_char('Hi-There')\n\
    'HHii--TThheerree'*/", "    if (count($lst) == 0) {\n        return $lst;\n  \
    \  }\n    $min = min($lst);\n    $max = max($lst);\n    $res = array();\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n    }\n    return $res;\n}\n\n$lst = array(1, 2, 3, 4);\n\
    print_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array(5, 5, 5, 5);\n\
    print_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n\
    print", "    if (empty($lst)) return $lst;\n    $result = array();\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst)) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    \n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\n$lst = array();\n\
    print_r(strange_sort_list($lst));", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\n/*\n * Given a string, return a string where for every\
    \ char in the original,\n * there are two chars.\n * Examples:\n * >>> double_char('The')\n\
    \ * 'TThhee'\n * >>> double_char('AAbb')\n * 'AAAAbbbb'\n * >>> double_char('Hi-There')\n\
    \ * 'HHii--TThheerree'\n */", "    if (empty($lst)) {\n        return [];\n  \
    \  }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) -\
    \ 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $len = count($lst);\n    $i = 0;\n    while ($i < $len)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $i += 2;\n        $key = array_search($min,\
    \ $lst);\n        unset($lst[$key]);\n        $key = array_search($max, $lst);\n\
    \        unset($lst[$key]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3,\
    \ 4];\nprint_r(strange_sort_list($lst));", "    if (empty($lst)) {\n        return\
    \ [];\n    }\n    sort($lst);\n    $res = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n        $i++;\n  \
    \      if ($i <= $j) {\n            $res[] = $lst[$j];\n            $j--;\n  \
    \      }\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4];\nvar_dump(strange_sort_list($lst));\n\
    $lst = [5, 5, 5, 5];\nvar_dump(strange_sort_list($lst));\n$lst = [];\nvar_dump(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n\
    print_r(strange_", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $count\
    \ = count($lst);\n    $i = 0;\n    $j = 0;\n    while ($i < $count) {\n      \
    \  $min = min($lst);\n        $result[$i] = $min;\n        $i++;\n        $max\
    \ = max($lst);\n        $result[$i] = $max;\n        $i++;\n        $j++;\n  \
    \  }\n    return $result;\n}\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (count($lst) >\
    \ 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\n\
    print_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));", " \
    \   if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = array();\n    $res[] = $min;\n    $res[] =\
    \ $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = strange_sort_list($lst);\n    $res = array_merge($res, $lst);\n  \
    \  return $res;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));",
  "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = array_merge($result, $lst);\n    return $lst;\n}\n\n/* Given array\
    \ of integers, return array in strange order.\nStrange sorting, is when you start\
    \ with the minimum value,\nthen maximum of the remaining integers, then minimum\
    \ and so on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4,\
    \ 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    if (empty($lst)) {\n        return $lst;\n    }\n    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while\
    \ (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n   \
    \     $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n/* Given array of integers,\
    \ return array in strange order.\nStrange sorting, is when you start with the\
    \ minimum value,\nthen maximum of the remaining integers, then minimum and so\
    \ on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n\
    >>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $result = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i\
    \ <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j)\
    \ {\n            $result[] = $lst[$j];\n            $j--;\n        }\n    }\n\
    \    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;", "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\n$lst = strange_sort_list($lst);\nprint_r($lst);\n\
    echo '<br>';\n$lst = array(5, 5, 5, 5);\n$lst = strange_sort_list($lst);\nprint_r($lst);\n\
    echo '<br>';\n$lst = array();\n$lst = strange_sort_list($lst);\nprint_r($lst);\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$lst = strange_sort_list($lst);\n\
    print_r($lst);\necho '<br>';\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$lst\
    \ = strange_sort_list($lst);\nprint_r($lst);\necho '<br>';\n$lst = array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$lst = strange_sort_list($lst);\n\
    print_r($lst);\necho '<br>';\n$lst = array", "    if (empty($lst)) {\n       \
    \ return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    while (count($lst) > 0)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nvar_dump(strange_sort_list([1,\
    \ 2, 3, 4]));\nvar_dump(strange_sort_list([5, 5, 5, 5]));\nvar_dump(strange_sort_list([]));",
  "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($count > 0) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        if ($i % 2 == 0) {\n      \
    \      $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n     \
    \   } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n        }\n        $count = count($lst);\n        $i++;\n    }\n \
    \   return $result;\n}\n\n$arr = [1, 2, 3, 4];\nvar_dump(strange_sort_list($arr));\n\
    $arr = [5, 5, 5, 5];\nvar_dump(strange_sort_list($arr));\n$arr = [];\nvar_dump(strange_sort_list($arr));",
  "    $arr = [];\n    $len = count($lst);\n    $i = 0;\n    while ($i < $len) {\n\
    \        $arr[] = min($lst);\n        $arr[] = max($lst);\n        $i += 2;\n\
    \    }\n    return $arr;\n}\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst =\
    \ array_diff($lst, array($min, $max));\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n   \
    \ }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array(1, 2, 3,\
    \ 4,", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while(count($lst) > 0) {\n        if($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    $res = [];\n\
    \    $len = count($lst);\n    if ($len == 0) {\n        return $res;\n    }\n\
    \    sort($lst);\n    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n   \
    \     $res[] = $lst[$i];\n        $res[] = $lst[$j];\n        $i++;\n        $j--;\n\
    \    }\n    if ($i == $j) {\n        $res[] = $lst[$i];\n    }\n    return $res;\n\
    }\n\n$lst = [1, 2, 3, 4];\n$res = strange_sort_list($lst);\nprint_r($res);\necho\
    \ \"\\n\";\n$lst = [5, 5, 5, 5];\n$res = strange_sort_list($lst);\nprint_r($res);\n\
    echo \"\\n\";\n$lst = [];\n$res = strange_sort_list($lst);\nprint_r($res);\necho\
    \ \"\\n\";", "    if (empty($lst)) {\n        return $lst;\n    }\n    $result\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while\
    \ (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n   \
    \     $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3,\
    \ 4);\nprint_r(strange_sort_list($lst));\n\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    \n$lst = array();\nprint_r(strange_sort_list($lst));", "    if (empty($lst)) return\
    \ $lst;\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i\
    \ != $j) $result[] = $lst[$j];\n        $i++;\n        $j--;\n    }\n    return\
    \ $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst =\
    \ array_diff($lst, array($min, $max));\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n   \
    \ }\n    return $result;\n}\n\nprint_r(strange_sort_list(array(1, 2, 3, 4)));\n\
    print_r(strange_sort_list(array(5, 5, 5, 5)));\nprint_r(strange_sort_list(array()));",
  "    $result = [];\n    $i = 0;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n        } else {\n  \
    \          $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n \
    \       }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    print_r(strange_sort_list($lst));", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nvar_dump(strange_sort_list([1, 2,\
    \ 3, 4]));\nvar_dump(strange_sort_list([5, 5, 5, 5]));\nvar_dump(strange_sort_list([]));",
  "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    $count = count($lst);\n    if ($count ==\
    \ 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $", "    $result = [];\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($", "   \
    \ if (empty($lst)) {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n\
    $lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = [];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = [20,\
    \ 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = [];\n    $i = 0;\n    while (count($lst) >\
    \ 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n          \
    \  $key = array_search($min, $lst);\n            unset($lst[$key]);\n        \
    \    $min = min($lst);\n        } else {\n            $result[] = $max;\n    \
    \        $key = array_search($max, $lst);\n            unset($lst[$key]);\n  \
    \          $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $lst_len\
    \ = count($lst);\n    if ($lst_len == 0) {\n        return $result;\n    }\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $lst_len)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $lst\
    \ = array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < count($lst))\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $lst\
    \ = array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    $result =\
    \ [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $len = count($lst);\n\
    \    $i = 0;\n    while ($i < $len) {\n        $result[] = $lst[$i];\n       \
    \ $i++;\n        if ($i < $len) {\n            $result[] = $lst[$len - $i];\n\
    \            $i++;\n        }\n    }\n    return $result;\n}\n\n$lst = [1, 2,\
    \ 3, 4];\nprint_r(strange_sort_list($lst));", "    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i\
    \ != $j) {\n            $result[] = $lst[$j];\n        }\n        $i++;\n    \
    \    $j--;\n    }\n    return $result;\n}\n\n/*\n * Given a string, return a new\
    \ string with the reversed order of characters.\nExamples:\n>>> reverse_string('apple')\n\
    'elppa'\n>>> reverse_string('hello')\n'olleh'\n>>> reverse_string('Greetings!')\n\
    '!sgniteerG'\n */", "    $res = [];\n    $len = count($lst);\n    $i = 0;\n  \
    \  while ($i < $len) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $i += 2;\n        $lst\
    \ = array_diff($lst, [$min, $max]);\n    }\n    return $res;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $result[] = $lst[$j];\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $result;\n}\n\n/* Given array of integers,\
    \ return array in strange order.\nStrange sorting, is when you start with the\
    \ minimum value,\nthen maximum of the remaining integers, then minimum and so\
    \ on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n\
    >>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    $res = [];\n    $len = count($lst);\n    $i = 0;\n    while ($i\
    \ < $len) {\n        $min = min($lst);\n        $max = max($lst);\n        $res[]\
    \ = $min;\n        $res[] = $max;\n        $i += 2;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n/*\n * Unit Tests\n * */\necho\
    \ '<pre>';\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));\necho '</pre>';", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $count = count($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        $result[] = $lst[$i];\n     \
    \   $i++;\n        if ($i < $count) {\n            $result[] = $lst[$count - $i];\n\
    \        }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = [];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [];\n    $result[] = $min;\n    $result[] = $max;\n    $i = 1;\n\
    \    while (count($lst) > 2) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n        } else {\n            $result[] = max($lst);\n       \
    \ }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) return [];\n    $result = [];\n    sort($lst);\n    $min =\
    \ $lst[0];\n    $max = $lst[count($lst) - 1];\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    unset($lst[0]);\n    unset($lst[count($lst) - 1]);\n    $lst =\
    \ array_values($lst);\n    while (count($lst) > 0) {\n        $min = $lst[0];\n\
    \        $max = $lst[count($lst) - 1];\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        unset($lst[0]);\n        unset($lst[count($lst) - 1]);\n  \
    \      $lst = array_values($lst);\n    }\n    return $result;\n}\n\n$lst = [1,\
    \ 2, 3, 4];\nprint_r(strange_sort_list($lst));", "\t$result = array();\n\t$min\
    \ = min($lst);\n\t$max = max($lst);\n\t$i = 0;\n\twhile (count($lst) > 0) {\n\t\
    \tif ($i % 2 == 0) {\n\t\t\t$result[] = $min;\n\t\t\t$min_key = array_search($min,\
    \ $lst);\n\t\t\tunset($lst[$min_key]);\n\t\t\t$min = min($lst);\n\t\t} else {\n\
    \t\t\t$result[] = $max;\n\t\t\t$max_key = array_search($max, $lst);\n\t\t\tunset($lst[$max_key]);\n\
    \t\t\t$max = max($lst);\n\t\t}\n\t\t$i++;\n\t}\n\treturn $result;\n}\n\nprint_r(strange_sort_list(array(1,\
    \ 2, 3, 4)));\nprint_r(strange_sort_list(array(5, 5, 5, 5)));\nprint_r(strange_sort_list(array()));",
  "    if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $res =\
    \ [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n      \
    \  $res[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $res[]\
    \ = $lst[$j];\n            $j--;\n        }\n    }\n    return $res;\n}\n\n/*\n\
    \ * Given a string, return the number of vowels in it.\n * Examples:\n * >>> count_vowels(\"\
    Hello\")\n * 2\n * >>> count_vowels(\"World\")\n * 1\n * >>> count_vowels(\"\"\
    )\n * 0\n */", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $min = min($lst);\n            $result[] = $min;\n            $key =\
    \ array_search($min, $lst);\n            unset($lst[$key]);\n        } else {\n\
    \            $max = max($lst);\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    echo PHP_EOL;\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho PHP_EOL;\n\
    $lst = [];\nprint_r(strange_sort_list($lst));\necho PHP_EOL;", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $len = count($lst);\n \
    \   $res = array();\n    $i = 0;\n    $j = $len - 1;\n    while ($i <= $j) {\n\
    \        $res[] = $lst[$i];\n        if ($i != $j) {\n            $res[] = $lst[$j];\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $res;\n}\n", "   \
    \ $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n   \
    \ while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n       \
    \ }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n\
    \        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n     \
    \       $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $key\
    \ = array_search($min, $lst);\n            unset($lst[$key]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    while (count($lst) > 0) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $result[] = $min;\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n   \
    \ $result[] = $min;\n    $result[] = $max;\n    $lst = array_slice($lst, 1, count($lst)\
    \ - 2);\n    $lst = array_reverse($lst);\n    $result = array_merge($result, $lst);\n\
    \    return $result;\n}\n\n/* Given array of integers, return array in strange\
    \ order.\nStrange sorting, is when you start with the minimum value,\nthen maximum\
    \ of the remaining integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1,\
    \ 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
    \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", "    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list(array(1, 2, 3, 4)));\nprint_r(strange_sort_list(array(5,\
    \ 5, 5, 5)));\nprint_r(strange_sort_list(array()));", "    if (empty($lst)) {\n\
    \        return $lst;\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array($min);\n    $lst = array_diff($lst,\
    \ array($min));\n    while (!empty($lst)) {\n        $max = max($lst);\n     \
    \   $result[] = $max;\n        $lst = array_diff($lst, array($max));\n       \
    \ if (empty($lst)) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n  \
    \  }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    $lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n$lst = array();\n\
    print_r(strange_sort_list($lst));", "    $res = [];\n    $lst_len = count($lst);\n\
    \    $lst_len_half = $lst_len / 2;\n    $lst_len_half_ceil = ceil($lst_len_half);\n\
    \    $lst_len_half_floor = floor($lst_len_half);\n    $lst_len_half_floor_half\
    \ = $lst_len_half_floor / 2;\n    $lst_len_half_floor_half_ceil = ceil($lst_len_half_floor_half);\n\
    \    $lst_len_half_floor_half_floor = floor($lst_len_half_floor_half);\n    $lst_len_half_floor_half_floor_half\
    \ = $lst_len_half_floor_half_floor / 2;\n    $lst_len_half_floor_half_floor_half_ceil\
    \ = ceil($lst_len_half_floor_half_floor_half);\n    $lst_len_half_floor_half_floor_half_floor\
    \ = floor($lst_len_half_floor_half_floor_half);\n    $lst_len_half_floor_half_floor_half_floor_half\
    \ = $lst_len_half_floor_half_floor_half_floor / 2;\n    $lst_len_half_floor_half_floor_half_floor_half_ceil\
    \ = ceil($lst_len_half_floor_half_floor_half_floor_half);\n    $lst_len_half_floor_half_floor_half_floor_half_floor\
    \ = floor($lst_len_half_floor_half_floor_half_floor_half);\n    $lst_len_half_floor_half_floor_half_floor_half_floor_half\
    \ = $lst_len_half_floor_half_floor_half_floor_half_floor / 2;\n    $lst_len_half_floor_half_floor_half_floor_half_floor_half_ceil\
    \ = ceil($lst_len_half_floor_half_floor_half_floor_half_", "    $result = [];\n\
    \    $lst = array_unique($lst);\n    sort($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        $result[] = $lst[$i];\n        unset($lst[$i]);\n        $lst\
    \ = array_values($lst);\n        if (count($lst) > 0) {\n            $result[]\
    \ = $lst[count($lst) - 1];\n            unset($lst[count($lst) - 1]);\n      \
    \      $lst = array_values($lst);\n        }\n    }\n    return $result;\n}\n\n\
    echo \"<pre>\";\nprint_r(strange_sort_list([1, 2, 3, 4]));\necho \"</pre>\";\n\
    \necho \"<pre>\";\nprint_r(strange_sort_list([5, 5, 5, 5]));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(strange_sort_list([]));\necho \"</pre>\";", "  \
    \  $count = count($lst);\n    if ($count == 0) {\n        return $lst;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    var_dump(strange_sort_list($lst));", "    $result = [];\n    sort($lst);\n   \
    \ $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i < $count) {\n            $result[]\
    \ = $lst[$count - $i];\n            $i++;\n        }\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nvar_dump(strange_sort_list($lst));\n$lst = [5, 5, 5,\
    \ 5];\nvar_dump(strange_sort_list($lst));\n$lst = [];\nvar_dump(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\n$result = strange_sort_list($lst);\nprint_r($result);",
  "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $count -= 2;\n \
    \   $result[] = $min;\n    $result[] = $max;\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $result[] = $min;\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) return [];\n    $result = [];\n    $max = max($lst);\n   \
    \ $min = min($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst =\
    \ array_diff($lst, [$min, $max]);\n    while (!empty($lst)) {\n        $max =\
    \ max($lst);\n        $min = min($lst);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n\n/*\n * Test code\n */\nassert(strange_sort_list([1, 2, 3, 4]) == [1, 4, 2,\
    \ 3]);\nassert(strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]);\nassert(strange_sort_list([])\
    \ == []);\nassert(strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 10,\
    \ 2, 9, 3, 8, 4, 7, 5, 6]);\nassert(strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]) == [1, 11, 2, 10, 3, 9, 4, 8, 5, 7, 6]);\nassert(strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == [1, 12, 2, 11, 3, 10, 4, 9, 5, 8, 6,\
    \ 7]);\nassert(strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\
    \ == [1, 13, 2, 12, 3, 11, 4, 10, 5, 9, 6, 8, 7]);\nassert(strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == [1, 14, 2, 13", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $lst[$i];\n        } else {\n            array_unshift($result, $lst[$i]);\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $result[] = $lst[$j];\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $lst_len\
    \ = count($lst);\n    $result = [];\n    $i = 0;\n    $j = $lst_len - 1;\n   \
    \ while ($i < $lst_len) {\n        $result[] = $lst[$i];\n        if ($i < $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = [];\nprint_r(strange_sort_list($lst));", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n       \
    \ } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\n/*\n * Given array of integers, return array in strange\
    \ order.\nStrange sorting, is when you start with the minimum value,\nthen maximum\
    \ of the remaining integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1,\
    \ 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
    \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()\n */", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[array_search($min,\
    \ $lst)]);\n    unset($lst[array_search($max, $lst)]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[array_search($min,\
    \ $lst)]);\n        unset($lst[array_search($max, $lst)]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho\
    \ '<br>';\n$lst = array();\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = array(1", "   \
    \ if (empty($lst)) {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3,\
    \ 4);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array(5, 5, 5,\
    \ 5);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $len = count($lst);\n    $i = 0;\n    $j = $len - 1;\n \
    \   while ($i < $len && $j >= 0) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i < $len) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\necho '</pre>';\necho '<pre>';\nprint_r(strange_sort_list([5, 5,\
    \ 5, 5]));\necho '</pre>';\necho '<pre>';\nprint_r(strange_sort_list([]));\necho\
    \ '</pre>';", "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst, array());\n\
    \    $lst = array_merge($lst, array());\n    $lst = array_merge($lst,", "    if\
    \ (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $new_lst = [];\n    $i = 0;\n    while (count($lst) > 0) {\n\
    \        if ($i % 2 == 0) {\n            $new_lst[] = $min;\n            $lst\
    \ = array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $new_lst[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $new_lst;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n\
    $lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = [];\nprint_r(strange_sort_list($lst));", "    if(empty($lst)) {\n        return\
    \ $lst;\n    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j =\
    \ count($lst) - 1;\n    while($i <= $j) {\n        $result[] = $lst[$i];\n   \
    \     $i++;\n        if($i <= $j) {\n            $result[] = $lst[$j];\n     \
    \       $j--;\n        }\n    }\n    return $result;\n}\n\n$lst = array(1, 2,\
    \ 3, 4);\nprint_r(strange_sort_list($lst));\n\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    \n$lst = array();\nprint_r(strange_sort_list($lst));", "    $result = [];\n  \
    \  $lst = array_unique($lst);\n    sort($lst);\n    $count = count($lst);\n  \
    \  if ($count == 0) {\n        return $result;\n    }\n    if ($count == 1) {\n\
    \        return $lst;\n    }\n    $i = 0;\n    $j = $count - 1;\n    while ($i\
    \ < $j) {\n        $result[] = $lst[$i];\n        $result[] = $lst[$j];\n    \
    \    $i++;\n        $j--;\n    }\n    if ($i == $j) {\n        $result[] = $lst[$i];\n\
    \    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\n\
    print_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result = array($min);\n    $lst = array_diff($lst,\
    \ array($min));\n    $lst = array_values($lst);\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\n\
    print_r(strange_sort_list($lst));\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    $lst = array();\nprint_r(strange_sort_list($lst));", "    if (count($lst) == 0)\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[] = $max;\n   \
    \ $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = strange_sort_list($lst);\n    return array_merge($new_lst, $lst);\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst\
    \ = array();\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 3, 5, 7, 9, 2, 4, 6, 8, 10);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(10, 8, 6, 4, 2, 9, 7, 5, 3, 1);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho '<br>", "    $result\
    \ = [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $count = count($lst);\n\
    \    $i = 0;\n    $j = $count - 1;\n    while ($i < $count) {\n        $result[]\
    \ = $lst[$i];\n        if ($j > $i) {\n            $result[] = $lst[$j];\n   \
    \         $j--;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $result;\n\
    }\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));", "    $result\
    \ = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $key = array_search($min,\
    \ $lst);\n        unset($lst[$key]);\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $key = array_search($max, $lst);\n        unset($lst[$key]);\n\
    \        $i += 2;\n    }\n    return $result;\n}\n\n/*\n * Given array of integers,\
    \ return array in strange order.\nStrange sorting, is when you start with the\
    \ minimum value,\nthen maximum of the remaining integers, then minimum and so\
    \ on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n\
    >>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()\n */", "    if (empty($lst)) {\n        return $lst;\n    }\n    $lst_len\
    \ = count($lst);\n    $lst_len_half = floor($lst_len / 2);\n    $lst_len_half_plus\
    \ = $lst_len_half + 1;\n    $lst_min = min($lst);\n    $lst_max = max($lst);\n\
    \    $lst_min_index = array_search($lst_min, $lst);\n    $lst_max_index = array_search($lst_max,\
    \ $lst);\n    $lst_min_index_plus = $lst_min_index + 1;\n    $lst_max_index_plus\
    \ = $lst_max_index + 1;\n    $lst_min_index_plus_half = $lst_min_index_plus +\
    \ $lst_len_half;\n    $lst_max_index_plus_half = $lst_max_index_plus + $lst_len_half;\n\
    \    $lst_min_index_plus_half_plus = $lst_min_index_plus_half + 1;\n    $lst_max_index_plus_half_plus\
    \ = $lst_max_index_plus_half + 1;\n    $lst_min_index_plus_half_plus_minus = $lst_min_index_plus_half_plus\
    \ - 1;\n    $lst_max_index_plus_half_plus_minus = $lst_max_index_plus_half_plus\
    \ - 1;\n    $lst_min_index_plus_half_plus_minus_half = $lst_min_index_plus_half_plus_minus\
    \ - $lst_len_half;\n    $lst_max_index_plus_half_plus_minus_half = $lst_max_index_plus_half_plus_minus\
    \ - $lst_len_half;\n    $lst_min_index_plus_half_plus_minus_half_plus = $lst_min_index_plus_half_plus_minus_half\
    \ + 1;", "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n\
    \        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($", "    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i\
    \ != $j) {\n            $result[] = $lst[$j];\n        }\n        $i++;\n    \
    \    $j--;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $result = array_merge($result, strange_sort_list($lst));\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nvar_dump(strange_sort_list($lst));\n$lst = array(5,\
    \ 5, 5, 5);\nvar_dump(strange_sort_list($lst));\n$lst = array();\nvar_dump(strange_sort_list($lst));",
  "    $result = [];\n    $lst = array_unique($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n   \
    \ $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n\n/* Given array\
    \ of integers, return array in strange order.\nStrange sorting, is when you start\
    \ with the minimum value,\nthen maximum of the remaining integers, then minimum\
    \ and so on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4,\
    \ 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    $result = array();\n    $count = count($lst);\n    $i = 0;\n\
    \    while ($i < $count) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $i += 2;\n    \
    \    $lst = array_diff($lst, array($min, $max));\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list(array(1, 2, 3, 4)));\nprint_r(strange_sort_list(array(5,\
    \ 5, 5, 5)));\nprint_r(strange_sort_list(array()));", "    $result = [];\n   \
    \ while (!empty($lst)) {\n        $min = min($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, [$min]);\n        $max = max($lst);\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n    }\n    return\
    \ $result;\n}\n\n/* Given a string, return a new string where the first and last\
    \ chars have been exchanged.\nExamples:\n>>> front_back('code')\n'eodc'\n>>> front_back('a')\n\
    'a'\n>>> front_back('ab')\n'ba'*/", "\tif (count($lst) == 0) return $lst;\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$res = array();\n\t$res[] = $min;\n\t\
    $res[] = $max;\n\t$lst = array_diff($lst, array($min, $max));\n\twhile (count($lst)\
    \ > 0) {\n\t\t$min = min($lst);\n\t\t$max = max($lst);\n\t\t$res[] = $min;\n\t\
    \t$res[] = $max;\n\t\t$lst = array_diff($lst, array($min, $max));\n\t}\n\treturn\
    \ $res;\n}\n\n/* Given array of integers, return array in strange order.\nStrange\
    \ sorting, is when you start with the minimum value,\nthen maximum of the remaining\
    \ integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1,\
    \ 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
    \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", "    $result = [];\n \
    \   $count = count($lst);\n    $i = 0;\n    $j = 0;\n    while (count($result)\
    \ < $count) {\n        $min = min($lst);\n        $max = max($lst);\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n        } else {\n            $result[] = $max;\n            $lst\
    \ = array_diff($lst, [$max]);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    $result =\
    \ [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n \
    \   $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (!$lst) return $lst;\n\
    \    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $new_lst = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $new_lst[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $new_lst[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $new_lst;\n\
    }\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5, 5,\
    \ 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i < $count) {\n\
    \            $result[] = $lst[$count - $i];\n            $i++;\n        }\n  \
    \  }\n    return $result;\n}\n\n/*\n * Tests\n */\nassert_options(ASSERT_BAIL,\
    \ 1);\n\n$tests = [\n    [[1, 2, 3, 4], [1, 4, 2, 3]],\n    [[5, 5, 5, 5], [5,\
    \ 5, 5, 5]],\n    [[], []],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 10, 2,\
    \ 9, 3, 8, 4, 7, 5, 6]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [1, 11, 2,\
    \ 10, 3, 9, 4, 8, 5, 7, 6]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1,\
    \ 12, 2, 11, 3, 10, 4, 9, 5, 8, 6, 7]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13], [1, 13, 2, 12, 3, 11, 4, 10, 5, 9, 6, 8, 7]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [1, 14, 2, 13, 3, 12, 4, 11, 5, 10, 6, 9,\
    \ 7, 8]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [1, 15, 2,\
    \ 14, 3, 13, 4, 12, 5, 11, 6,", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $len = count($lst);\n    $i = 0;\n    $j = $len - 1;\n \
    \   while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j) {\n\
    \            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) return $lst;\n    $lst = array_unique($lst);\n    $res = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n    $lst =\
    \ array_diff($lst, array($min));\n    while (!empty($lst)) {\n        $res[] =\
    \ $max;\n        $lst = array_diff($lst, array($max));\n        if (empty($lst))\
    \ break;\n        $res[] = $min;\n        $lst = array_diff($lst, array($min));\n\
    \        if (empty($lst)) break;\n        $min = min($lst);\n        $max = max($lst);\n\
    \    }\n    return $res;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho \"\\n\";\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(strange_sort_list", "    $result = [];\n    $count = count($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $key = array_search($min, $lst);\n        unset($lst[$key]);\n\
    \        $max = max($lst);\n        $result[] = $max;\n        $key = array_search($max,\
    \ $lst);\n        unset($lst[$key]);\n        $i += 2;\n    }\n    return $result;\n\
    }\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5, 5,\
    \ 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $count =\
    \ count($lst);\n    $min = min($lst);\n    $max = max($lst);\n    if ($count ==\
    \ 0) {\n        return $result;\n    }\n    if ($count == 1) {\n        return\
    \ $lst;\n    }\n    if ($count == 2) {\n        return [$min, $max];\n    }\n\
    \    if ($count == 3) {\n        return [$min, $max, $lst[1]];\n    }\n    if\
    \ ($count == 4) {\n        return [$min, $max, $lst[1], $lst[2]];\n    }\n   \
    \ if ($count == 5) {\n        return [$min, $max, $lst[1], $lst[2], $lst[3]];\n\
    \    }\n    if ($count == 6) {\n        return [$min, $max, $lst[1], $lst[2],\
    \ $lst[3], $lst[4]];\n    }\n    if ($count == 7) {\n        return [$min, $max,\
    \ $lst[1], $lst[2], $lst[3], $lst[4], $lst[5]];\n    }\n    if ($count == 8) {\n\
    \        return [$min, $max, $lst[1], $lst[2], $lst[3], $lst[4], $lst[5], $lst[6]];\n\
    \    }\n    if ($count == 9) {\n        return [$min, $max, $lst[1], $lst[2],\
    \ $lst[3], $lst[4], $lst[5], $lst[6], $lst[7]];\n    }\n    if ($count == 10)\
    \ {\n        return [$min, $max, $lst[1], $lst[2], $lst[3], $lst[4], $lst[5],\
    \ $lst[6], $lst[7], $lst[8]];\n    }\n    if ($count == 11) {\n        return\
    \ [$min, $", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $min = min($lst);\n            $result[] = $min;\n            $key =\
    \ array_search($min, $lst);\n            unset($lst[$key]);\n        } else {\n\
    \            $max = max($lst);\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));", "    $result = array();\n   \
    \ $len = count($lst);\n    $i = 0;\n    while ($i < $len) {\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n  \
    \      if ($lst) {\n            $max = max($lst);\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, array($max));\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = array(5, 5, 5, 5);\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = array();\n$result = strange_sort_list($lst);\nprint_r($result);",
  "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $i = 0;\n    $j = 1;\n    while ($i < $count) {\n        $result[$i]\
    \ = $min;\n        $i += 2;\n        $min = min(array_diff($lst, $result));\n\
    \    }\n    while ($j < $count) {\n        $result[$j] = $max;\n        $j +=\
    \ 2;\n        $max = max(array_diff($lst, $result));\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = array($min);\n    $lst = array_diff($lst, array($min));\n    while (!empty($lst))\
    \ {\n        $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (empty($lst)) {\n            break;\n        }\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list(array(1,\
    \ 2, 3, 4)));\necho '<br>';\nprint_r(strange_sort_list(array(5, 5, 5, 5)));\n\
    echo '<br>';\nprint_r(strange_sort_list(array()));", "    if (count($lst) == 0)\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[] = $max;\n   \
    \ $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $new_lst[] = $min;\n        $new_lst[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $new_lst;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\";", "    $result\
    \ = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $key = array_search($min,\
    \ $lst);\n        unset($lst[$key]);\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $key = array_search($max, $lst);\n        unset($lst[$key]);\n\
    \        $i += 2;\n    }\n    return $result;\n}\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n  \
    \  while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n       \
    \ }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $res = array();\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\n/* Given array of integers, return\
    \ array in strange order.\nStrange sorting, is when you start with the minimum\
    \ value,\nthen maximum of the remaining integers, then minimum and so on.\nExamples:\n\
    >>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5,\
    \ 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n", "    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $result = [];\n    $count = count($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        $result[] = $lst[$i];\n     \
    \   if ($i + 1 < $count) {\n            $result[] = $lst[$count - $i - 1];\n \
    \       }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    print_r(strange_sort_list($lst));", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\n/* Given array of integers,\
    \ return array in strange order.\nStrange sorting, is when you start with the\
    \ minimum value,\nthen maximum of the remaining integers, then minimum and so\
    \ on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n\
    >>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    $res = [];\n    $len = count($lst);\n    $i = 0;\n    while ($i\
    \ < $len) {\n        $min = min($lst);\n        $max = max($lst);\n        if\
    \ ($i % 2 == 0) {\n            $res[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n        } else {\n            $res[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n        }\n        $i++;\n    }\n    return $res;\n}\n\n/*\n * Given\
    \ array of integers, return array in strange order.\n * Strange sorting, is when\
    \ you start with the minimum value,\n * then maximum of the remaining integers,\
    \ then minimum and so on.\n * Examples:\n * >>> strange_sort_list(array(1, 2,\
    \ 3, 4))\n * array(1, 4, 2, 3)\n * >>> strange_sort_list(array(5, 5, 5, 5))\n\
    \ * array(5, 5, 5, 5)\n * >>> strange_sort_list(array())\n * array()\n */", " \
    \   if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (count($lst) == 0) {\n\
    \        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $new_lst = [];\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $new_lst[] = min($lst);\n            $key = array_search(min($lst),\
    \ $lst);\n            unset($lst[$key]);\n        } else {\n            $new_lst[]\
    \ = max($lst);\n            $key = array_search(max($lst), $lst);\n          \
    \  unset($lst[$key]);\n        }\n        $i++;\n    }\n    return $new_lst;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = array();\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n   \
    \ while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst =\
    \ array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2,", "    if(empty($lst)) return $lst;\n    $lst\
    \ = array_unique($lst);\n    $lst = array_values($lst);\n    $res = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if($i != $j) $res[] = $lst[$j];\n        $i++;\n        $j--;\n    }\n\
    \    return $res;\n}\n\n$lst = [1, 2, 3, 4];\n$lst = [5, 5, 5, 5];\n$lst = [];\n\
    print_r(strange_sort_list($lst));", "    $result = [];\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    while (count($lst) > 0) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n \
    \   return $result;\n}\n\n$lst = [1, 2, 3, 4];\nvar_dump(strange_sort_list($lst));\n\
    $lst = [5, 5, 5, 5];\nvar_dump(strange_sort_list($lst));\n$lst = [];\nvar_dump(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho\
    \ '<br>';\n$lst = array();\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = array(1", "   \
    \ if (count($lst) == 0) return $lst;\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = array_merge(array($min), $lst);\n    $lst = array_merge($lst, array($max));\n\
    \    return $lst;\n}\n\n/* Given array of integers, return array in strange order.\n\
    Strange sorting, is when you start with the minimum value,\nthen maximum of the\
    \ remaining integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1,\
    \ 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
    \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $result = [];\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    while (!empty($lst)) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n/* Given array of integers, return array in strange order.\nStrange sorting,\
    \ is when you start with the minimum value,\nthen maximum of the remaining integers,\
    \ then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\n\
    array(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n\
    >>> strange_sort_list(array())\narray()*/", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = array_shift($lst);\n    \
    \    } else {\n            $result[] = array_pop($lst);\n        }\n    }\n  \
    \  return $result;\n}\n\n/* Given array of integers, return array in strange order.\n\
    Strange sorting, is when you start with the minimum value,\nthen maximum of the\
    \ remaining integers, then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1,\
    \ 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5,\
    \ 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", "    sort($lst);\n   \
    \ $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n \
    \           $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ sort($lst);\n    $i = 0;\n    $j = $count - 1;\n    while ($i <= $j) {\n   \
    \     $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n        \
    \    $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array();\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, array($min));\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ array($max));\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n     \
    \   return $result;\n    }\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n  \
    \      $lst_len = count($lst);\n        if ($lst_len == 0) {\n            return\
    \ $result;\n        }\n        $max = max($lst);\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, array($max));\n        $lst_len = count($lst);\n\
    \        if ($lst_len == 0) {\n            return $result;\n        }\n    }\n\
    \    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    $lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n$lst = array();\n\
    print_r(strange_sort_list($lst));\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\
    print_r(strange_sort_list($lst));\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n\
    print_r(strange_sort_list($lst", "    if (count($lst) == 0) {\n        return\
    \ $lst;\n    }\n    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, array($min, $max));\n    }\n    return $result;\n}\n\
    \n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst =\
    \ array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\necho\
    \ \"<br>\";\n$lst = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst\
    \ = array(20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array(1,", " \
    \   if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n   \
    \ $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3,\
    \ 4];\nprint_r(strange_sort_list($lst));\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\
    $lst = [];\nprint_r(strange_sort_list($lst));", "    if (empty($lst)) {\n    \
    \    return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    return array_merge([$min, $max], strange_sort_list($lst));\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $key = array_search($min, $lst);\n            unset($lst[$key]);\n      \
    \      $min = min($lst);\n        } else {\n            $result[] = $max;\n  \
    \          $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\n$lst = [5, 5, 5, 5];\n$lst = [];\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,\
    \ 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,\
    \ 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31", "    $result = [];\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $key\
    \ = array_search($min, $lst);\n            unset($lst[$key]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n\necho\
    \ '<pre>';\nprint_r(strange_sort_list(array(1, 2, 3, 4)));\necho '</pre>';\necho\
    \ '<pre>';\nprint_r(strange_sort_list(array(5, 5, 5, 5)));\necho '</pre>';\necho\
    \ '<pre>';\nprint_r(strange_sort_list(array()));\necho '</pre>';", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5, 5,\
    \ 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n      \
    \  return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $res\
    \ = [];\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $res = array_merge($res, strange_sort_list($lst));\n\
    \    return $res;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));", "    $result\
    \ = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $key = array_search($min,\
    \ $lst);\n        unset($lst[$key]);\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $key = array_search($max, $lst);\n        unset($lst[$key]);\n\
    \        $i += 2;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n", "    $result = [];\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $key = array_search($min, $lst);\n       \
    \ unset($lst[$key]);\n        $max = max($lst);\n        $result[] = $max;\n \
    \       $key = array_search($max, $lst);\n        unset($lst[$key]);\n       \
    \ $i += 2;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n\n/* Given array of integers, return array\
    \ in strange order.\nStrange sorting, is when you start with the minimum value,\n\
    then maximum of the remaining integers, then minimum and so on.\nExamples:\n>>>\
    \ strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5,\
    \ 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $count\
    \ = count($lst);\n    if ($count == 0) {\n        return $result;\n    }\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst =\
    \ array_diff($lst, [$min]);\n    $count--;\n    if ($count == 0) {\n        return\
    \ $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n\
    \    $count--;\n    if ($count == 0) {\n        return $result;\n    }\n    while\
    \ (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n       \
    \ if (count($lst) == 0) {\n            return $result;\n        }\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\n$lst = [5, 5,\
    \ 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "\tif (empty($lst)) {\n\t\treturn $lst;\n\t}\n\t$min = min($lst);\n\t$max = max($lst);\n\
    \t$new_lst = array();\n\t$new_lst[] = $min;\n\t$new_lst[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$new_lst = array_merge($new_lst,\
    \ strange_sort_list($lst));\n\treturn $new_lst;\n}\n\n$lst = array(1, 2, 3, 4);\n\
    print_r(strange_sort_list($lst));\necho \"\\n\";\n$lst = array(5, 5, 5, 5);\n\
    print_r(strange_sort_list($lst));\necho \"\\n\";\n$lst = array();\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $result = [];\n    $start = 0;\n    $end = count($lst) - 1;\n    while ($start\
    \ <= $end) {\n        $result[] = $lst[$start];\n        $start++;\n        if\
    \ ($start <= $end) {\n            $result[] = $lst[$end];\n            $end--;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2,\
    \ 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n  \
    \  while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n       \
    \ }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $lst = array_unique($lst);\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));", "    $result = [];\n    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    if ($count == 1) {\n        return\
    \ $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    $count = count($lst);\n    if ($count ==\
    \ 0) {\n        return $result;\n    }\n    if ($count == 1) {\n        $result[]\
    \ = $lst[0];\n        return $result;\n    }\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    if ($count == 1)\
    \ {\n        $result[] = $lst[0];\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst\
    \ = array_values($lst);\n    $count = count($lst);", "    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index]\
    \ = $min;\n    $lst_len -= 2;\n    if ($lst_len == 0) {\n        return $lst;\n\
    \    }\n    $lst_min = array_slice($lst, 0, $min_index);\n    $lst_max = array_slice($lst,\
    \ $min_index + 1, $lst_len);\n    $lst_min = strange_sort_list($lst_min);\n  \
    \  $lst_max = strange_sort_list($lst_max);\n    $lst = array_merge($lst_min, array($min),\
    \ $lst_max, array($max));\n    return $lst;\n}\n$lst = array(1, 2, 3, 4);\n$lst\
    \ = strange_sort_list($lst);\nprint_r($lst);", "    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $lst;\n    }\n    $lst_min = min($lst);\n\
    \    $lst_max = max($lst);\n    $lst_min_index = array_search($lst_min, $lst);\n\
    \    $lst_max_index = array_search($lst_max, $lst);\n    $lst_min_index_new =\
    \ $lst_min_index + 1;\n    $lst_max_index_new = $lst_max_index - 1;\n    if ($lst_len\
    \ == 1) {\n        return $lst;\n    }\n    if ($lst_len == 2) {\n        return\
    \ array($lst_min, $lst_max);\n    }\n    if ($lst_len == 3) {\n        return\
    \ array($lst_min, $lst_max, $lst[1]);\n    }\n    $lst_new = array($lst_min);\n\
    \    $lst_new_index = 1;\n    while ($lst_new_index < $lst_len) {\n        if\
    \ ($lst_new_index % 2 == 1) {\n            $lst_new[] = $lst[$lst_max_index_new];\n\
    \            $lst_max_index_new--;\n        } else {\n            $lst_new[] =\
    \ $lst[$lst_min_index_new];\n            $lst_min_index_new++;\n        }\n  \
    \      $lst_new_index++;\n    }\n    return $lst_new;\n}\n\n$lst = array(1, 2,\
    \ 3, 4);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array(5, 5,\
    \ 5, 5);\nprint_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array();\n\
    print_r(strange_sort_list($lst));\necho \"<br>\";\n$lst = array", "    $result\
    \ = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    sort($lst);\n    $i = 0;\n    $j = $count - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n \
    \           $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * Tests\n */\nassert_options(ASSERT_BAIL, 1);\n\n$tests\
    \ = [\n    [[1, 2, 3, 4], [1, 4, 2, 3]],\n    [[5, 5, 5, 5], [5, 5, 5, 5]],\n\
    \    [[], []],\n];\n\nforeach ($tests as $test) {\n    list($input, $expected)\
    \ = $test;\n    assert(\n        strange_sort_list($input) === $expected,\n  \
    \      json_encode($input) . ' expected ' . json_encode($expected)\n    );\n}\n\
    \necho \"DONE\\n\";", "    if (empty($lst)) {\n        return [];\n    }\n   \
    \ sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n   \
    \ while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n       \
    \ }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $res\
    \ = array($min);\n    $lst = array_diff($lst, array($min));\n    $lst = array_values($lst);\n\
    \    while (!empty($lst)) {\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        $lst = array_values($lst);\n        if (empty($lst))\
    \ {\n            break;\n        }\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n        $lst = array_values($lst);\n    }\n    return $res;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\";", "    $result\
    \ = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count\
    \ -= 2;\n    $i = 0;\n    while ($count > 0) {\n        if ($i % 2 == 0) {\n \
    \           $min = min($lst);\n            $result[] = $min;\n            $lst\
    \ = array_diff($lst, [$min]);\n        } else {\n            $max = max($lst);\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \        }\n        $i++;\n        $count--;\n    }\n    return $result;\n}\n\n\
    $lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $new_lst = [];\n    $new_lst[] = $min;\n    $new_lst[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $lst = array_values($lst);\n    $lst_len\
    \ = count($lst);\n    for ($i = 0; $i < $lst_len; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $new_lst[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $new_lst[] = max($lst);\n     \
    \       $lst = array_diff($lst, [max($lst)]);\n        }\n    }\n    return $new_lst;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));", "    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[]\
    \ = $max;\n    $count -= 2;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    $lst = array_values($lst);\n    for ($i = 0; $i < $count; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $new_lst[] = min($lst);\n            $lst\
    \ = array_diff($lst, array(min($lst)));\n            $lst = array_values($lst);\n\
    \        } else {\n            $new_lst[] = max($lst);\n            $lst = array_diff($lst,\
    \ array(max($lst)));\n            $lst = array_values($lst);\n        }\n    }\n\
    \    return $new_lst;\n}\n\n$lst = array(1, 2, 3, 4);\n$lst = strange_sort_list($lst);\n\
    print_r($lst);\n\n$lst = array(5, 5, 5, 5);\n$lst = strange_sort_list($lst);\n\
    print_r($lst);\n\n$lst = array();\n$lst = strange_sort_list($lst);\nprint_r($lst);",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n\
    \        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n     \
    \       $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"<br>\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"<br>\"\
    ;", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        $result[$i] = $min;\n        $i++;\n\
    \        $result[$i] = $max;\n        $i++;\n        $lst = array_diff($lst, [$min,\
    \ $max]);\n        $min = min($lst);\n        $max = max($lst);\n    }\n    return\
    \ $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $lst = array_unique($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array($min);\n    $lst = array_diff($lst,\
    \ array($min));\n    $lst = array_values($lst);\n    $i = 0;\n    while (!empty($lst))\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = max($lst);\n        \
    \    $lst = array_diff($lst, array(max($lst)));\n        } else {\n          \
    \  $result[] = min($lst);\n            $lst = array_diff($lst, array(min($lst)));\n\
    \        }\n        $lst = array_values($lst);\n        $i++;\n    }\n    return\
    \ $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho\
    \ '<br>';\n$lst = array();\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = [];\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $i += 2;\n        $key = array_search($min, $lst);\n        unset($lst[$key]);\n\
    \        $key = array_search($max, $lst);\n        unset($lst[$key]);\n    }\n\
    \    return $result;\n}\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (count($lst) == 0) {\n\
    \        return $lst;\n    }\n    $new_lst = array();\n    $lst_len = count($lst);\n\
    \    $lst_len_half = floor($lst_len / 2);\n    $lst_len_half_plus = $lst_len_half\
    \ + 1;\n    $lst_len_half_minus = $lst_len_half - 1;\n    $lst_len_half_plus_mod\
    \ = $lst_len_half_plus % 2;\n    $lst_len_half_minus_mod = $lst_len_half_minus\
    \ % 2;\n    if ($lst_len_half_plus_mod == 0) {\n        $lst_len_half_plus_mod\
    \ = 1;\n    }\n    if ($lst_len_half_minus_mod == 0) {\n        $lst_len_half_minus_mod\
    \ = 1;\n    }\n    $lst_len_half_plus_mod_minus = $lst_len_half_plus_mod - 1;\n\
    \    $lst_len_half_minus_mod_minus = $lst_len_half_minus_mod - 1;\n    $lst_len_half_plus_mod_minus_plus\
    \ = $lst_len_half_plus_mod_minus + 1;\n    $lst_len_half_minus_mod_minus_plus\
    \ = $lst_len_half_minus_mod_minus + 1;\n    $lst_len_half_plus_mod_minus_plus_minus\
    \ = $lst_len_half_plus_mod_minus_plus - 1;\n    $lst_len_half_minus_mod_minus_plus_minus\
    \ = $lst_len_half_minus_mod_minus_plus - 1;\n    $lst_len_half_plus_mod_minus_plus_minus_plus\
    \ = $lst_len_half_plus_mod_minus_plus_minus + 1;\n    $lst_len_half_minus_mod_minus_plus_minus_plus\
    \ = $lst_len_half_minus", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if ($lst) {\n            $max = max($lst);\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\n/*\n * Tests\n */\nassert_options(ASSERT_BAIL,\
    \ 1);\n\n$tests = [\n    [[1, 2, 3, 4], [1, 4, 2, 3]],\n    [[5, 5, 5, 5], [5,\
    \ 5, 5, 5]],\n    [[], []],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 10, 2,\
    \ 9, 3, 8, 4, 7, 5, 6]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [1, 11, 2,\
    \ 10, 3, 9, 4, 8, 5, 7, 6]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1,\
    \ 12, 2, 11, 3, 10, 4, 9, 5, 8, 6, 7]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13], [1, 13, 2, 12, 3, 11, 4, 10, 5, 9, 6, 8, 7]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [1, 14, 2, 13, 3, 12, 4, 11, 5, 10, 6, 9,\
    \ 7, 8]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [1, 15, 2,",
  "    $result = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $i += 2;\n        $key = array_search($min,\
    \ $lst);\n        unset($lst[$key]);\n        $key = array_search($max, $lst);\n\
    \        unset($lst[$key]);\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $result = [];\n    sort($lst);\n\
    \    $start = 0;\n    $end = count($lst) - 1;\n    while ($start <= $end) {\n\
    \        $result[] = $lst[$start];\n        $start++;\n        if ($start <= $end)\
    \ {\n            $result[] = $lst[$end];\n            $end--;\n        }\n   \
    \ }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $result = array();\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $key = array_search($min, $lst);\n            unset($lst[$key]);\n      \
    \      $min = min($lst);\n        } else {\n            $result[] = $max;\n  \
    \          $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i\
    \ < $count) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $i += 2;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $lst = array_diff($lst, [$min]);\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$max]);\n    $count = count($lst);\n    if ($count == 0)\
    \ {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$max]);\n    $count = count($lst);\n   \
    \ if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $count = count",
  "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = array();\n    $res[] = $min;\n    $res[] =\
    \ $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $res[]\
    \ = $min;\n        $res[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $res;\n}\n\n/* Given array of integers, return array\
    \ in strange order.\nStrange sorting, is when you start with the minimum value,\n\
    then maximum of the remaining integers, then minimum and so on.\nExamples:\n>>>\
    \ strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n>>> strange_sort_list(array(5,\
    \ 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\narray()*/", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $res = array($min);\n    $lst = array_diff($lst, array($min));\n\
    \    $i = 0;\n    while (!empty($lst)) {\n        if ($i % 2 == 0) {\n       \
    \     $res[] = max($lst);\n            $lst = array_diff($lst, array(max($lst)));\n\
    \        } else {\n            $res[] = min($lst);\n            $lst = array_diff($lst,\
    \ array(min($lst)));\n        }\n        $i++;\n    }\n    return $res;\n}\n\n\
    print_r(strange_sort_list(array(1, 2, 3, 4)));\nprint_r(strange_sort_list(array(5,\
    \ 5, 5, 5)));\nprint_r(strange_sort_list(array()));", "    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    if (empty($lst)) {\n   \
    \     return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n    \
    \    $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst\
    \ = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = [];\n\
    print_r(strange_sort_list($lst));\necho '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\necho '<br>';\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\necho '<br>';\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    echo '<br>';\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $max = max($lst);\n  \
    \  $min = min($lst);\n    $result = array();\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (!empty($lst))\
    \ {\n        $max = max($lst);\n        $min = min($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list(array(1,\
    \ 2, 3, 4)));\nprint_r(strange_sort_list(array(5, 5, 5, 5)));\nprint_r(strange_sort_list(array()));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $res = array($min);\n    $lst = array_diff($lst, array($min));\n\
    \    while (!empty($lst)) {\n        $max = max($lst);\n        $res[] = $max;\n\
    \        $lst = array_diff($lst, array($max));\n        if (empty($lst)) {\n \
    \           break;\n        }\n        $min = min($lst);\n        $res[] = $min;\n\
    \        $lst = array_diff($lst, array($min));\n    }\n    return $res;\n}\n\n\
    /* Given array of integers, return array in strange order.\nStrange sorting, is\
    \ when you start with the minimum value,\nthen maximum of the remaining integers,\
    \ then minimum and so on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\n\
    array(1, 4, 2, 3)\n>>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n\
    >>> strange_sort_list(array())\narray()*/", "    if (count($lst) == 0) {\n   \
    \     return $lst;\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n \
    \   $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3,\
    \ 4];\nprint_r(strange_sort_list($lst));", "    $result = [];\n    $count = count($lst);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    $j = $count - 1;\n    $result[$i] = $min;\n\
    \    $result[$j] = $max;\n    $i++;\n    $j--;\n    while ($i <= $j) {\n     \
    \   $min = min($lst);\n        $max = max($lst);\n        $result[$i] = $max;\n\
    \        $result[$j] = $min;\n        $i++;\n        $j--;\n    }\n    return\
    \ $result;\n}\n\n$lst = [1, 2, 3, 4];\nvar_dump(strange_sort_list($lst));", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "    $res = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $res[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $res[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $res;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    $lst = array_unique($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    $lst = array_values($lst);\n    $i = 0;\n    while (!empty($lst)) {\n   \
    \     if ($i % 2 == 0) {\n            $result[] = min($lst);\n            $lst\
    \ = array_diff($lst, array(min($lst)));\n        } else {\n            $result[]\
    \ = max($lst);\n            $lst = array_diff($lst, array(max($lst)));\n     \
    \   }\n        $i++;\n    }\n    return $result;\n}\n\n/* Given array of integers,\
    \ return array in strange order.\nStrange sorting, is when you start with the\
    \ minimum value,\nthen maximum of the remaining integers, then minimum and so\
    \ on.\nExamples:\n>>> strange_sort_list(array(1, 2, 3, 4))\narray(1, 4, 2, 3)\n\
    >>> strange_sort_list(array(5, 5, 5, 5))\narray(5, 5, 5, 5)\n>>> strange_sort_list(array())\n\
    array()*/", "    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\n/* Given a string, return a new string\
    \ with the reversed order of characters.\nExamples:\n>>> reverse_string('apple')\n\
    'elppa'\n>>> reverse_string('hello')\n'olleh'\n>>> reverse_string('Greetings!')\n\
    '!sgniteerG'*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

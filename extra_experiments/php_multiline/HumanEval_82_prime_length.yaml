name: HumanEval_82_prime_length
language: php
prompt: "<?php\n/* Write a function that takes a string and returns true if the string\n\
  length is a prime number or false otherwise\nExamples\n>>> prime_length(\"Hello\"\
  )\ntrue\n>>> prime_length(\"abcdcba\")\ntrue\n>>> prime_length(\"kittens\")\ntrue\n\
  >>> prime_length(\"orange\")\nfalse*/\nfunction prime_length($string) {\n"
tests: "function candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $length = strlen($string);\n    if ($length == 1) {\n        return\
    \ false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length %\
    \ $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of vowels in the string\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n3*/", "    $length = strlen($string);\n    if\
    \ ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $prime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $prime = false;\n            break;\n        }\n \
    \   }\n    return $prime;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "    $length = strlen($string);\n    if\
    \ ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $string_length = strlen($string);\n\
    \    if ($string_length == 1) {\n        return true;\n    }\n    for ($i = 2;\
    \ $i < $string_length; $i++) {\n        if ($string_length % $i == 0) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . PHP_EOL;\necho prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"\
    kittens\") . PHP_EOL;\necho prime_length(\"orange\") . PHP_EOL;", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $prime = false;\n         \
    \   break;\n        }\n    }\n    return $prime;\n}\necho prime_length(\"Hello\"\
    ) . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "  $length =\
    \ strlen($string);\n  for ($i = 2; $i < $length; $i++) {\n    if ($length % $i\
    \ == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length <= 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "  $length =\
    \ strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i =\
    \ 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $isPrime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $isPrime = false;\n            break;\n        }\n\
    \    }\n    return $isPrime;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns true if the string\ncontains only unique characters or false otherwise\n\
    Examples\n>>> unique_chars(\"Hello\")\nfalse\n>>> unique_chars(\"abcdcba\")\n\
    false\n>>> unique_chars(\"kittens\")\ntrue\n>>> unique_chars(\"orange\")\ntrue*/",
  "    $length = strlen($string);\n    if ($length == 1) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . PHP_EOL;\necho prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"\
    kittens\") . PHP_EOL;\necho prime_length(\"orange\") . PHP_EOL;", "    $length\
    \ = strlen($string);\n    $isPrime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $isPrime = false;\n       \
    \     break;\n        }\n    }\n    return $isPrime;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\n/* Write a function that takes a string and returns the number of\n\
    occurrences of each letter in the string\nExamples\n>>> letter_count(\"Hello\"\
    )\nH: 1\ne: 1\nl: 2\no: 1\n>>> letter_count(\"abcdcba\")\na: 2\nb: 2\nc: 2\nd:\
    \ 1\n>>> letter_count(\"kittens\")\nk: 1\ni: 1\nt: 2\ne: 1\nn: 2\ns: 1\n>>> letter_count(\"\
    orange\")\no: 1\nr: 1\na: 1\nn: 1\ng: 1\ne: 1*/", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length = strlen($string);\n\
    \tif ($length == 1 || $length == 2) {\n\t\treturn true;\n\t}\n\tfor ($i = 2; $i\
    \ < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\n/* Write a function that takes a string and returns\
    \ true if the string\ncontains only unique characters or false otherwise\nExamples\n\
    >>> unique_characters(\"Hello\")\nfalse\n>>> unique_characters(\"abcdcba\")\n\
    false\n>>> unique_characters(\"kittens\")\ntrue\n>>> unique_characters(\"orange\"\
    )\ntrue*/", "    $length = strlen($string);\n    if ($length == 1) {\n       \
    \ return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2) {\n    \
    \    return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Write a function that takes a string and returns the number of vowels\n\
    in the string.\nExamples\n>>> count_vowels(\"Hello\")\n2\n>>> count_vowels(\"\
    abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n3\n>>> count_vowels(\"orange\")\n\
    3*/", "    $length = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n\
    \        if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\necho prime_length(\"\
    abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\necho prime_length(\"\
    orange\") . PHP_EOL;", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Write a function that takes a string and returns the\
    \ number of vowels\nin the string\nExamples\n>>> num_vowels(\"Hello\")\n2\n>>>\
    \ num_vowels(\"abcdcba\")\n3\n>>> num_vowels(\"kittens\")\n3\n>>> num_vowels(\"\
    orange\")\n3*/", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"<br>\";\n\
    echo prime_length(\"abcdcba\") . \"<br>\";\necho prime_length(\"kittens\") . \"\
    <br>\";\necho prime_length(\"orange\") . \"<br>\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of times\nthat the letter \"a\" occurs in the string\n\
    Examples\n>>> count_a(\"Hello\")\n0\n>>> count_a(\"abcdcba\")\n3\n>>> count_a(\"\
    kittens\")\n2\n>>> count_a(\"orange\")\n1*/", "    $length = strlen($string);\n\
    \    if ($length < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"<br>\";\n\
    echo prime_length(\"abcdcba\") . \"<br>\";\necho prime_length(\"kittens\") . \"\
    <br>\";\necho prime_length(\"orange\") . \"<br>\";", "    $length = strlen($string);\n\
    \    $is_prime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $is_prime = false;\n            break;\n        }\n\
    \    }\n    return $is_prime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length = strlen($string);\n\
    \tif ($length == 2) {\n\t\treturn true;\n\t}\n\tfor ($i = 2; $i < $length; $i++)\
    \ {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\
    \\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    $prime = true;\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         $prime = false;\n            break;\n        }\n    }\n    return $prime;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    $prime = true;\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         $prime = false;\n            break;\n        }\n    }\n    return $prime;\n\
    }\n\necho prime_length(\"Hello\") . \"<br>\";\necho prime_length(\"abcdcba\")\
    \ . \"<br>\";\necho prime_length(\"kittens\") . \"<br>\";\necho prime_length(\"\
    orange\") . \"<br>\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of vowels\nin the string.\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n4\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n3*/", "    $length = strlen($string);\n    if\
    \ ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of vowels in the string\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n2*/", "    $length = strlen($string);\n    if\
    \ ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "    $length = strlen($string);\n   \
    \ if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length = strlen($string);\n\
    \tif ($length == 1 || $length == 2) {\n\t\treturn true;\n\t}\n\tfor ($i = 2; $i\
    \ < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . PHP_EOL;\necho\
    \ prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n$string = \"Hello\";\necho prime_length($string);",
  "    $length = strlen($string);\n    if ($length == 1) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\n/* Write\
    \ a function that takes a string and returns a string with the\nfirst letter of\
    \ each word capitalized\nExamples\n>>> capitalize(\"hello world\")\n\"Hello World\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a\
    \ title\")\n\"I Am A Title\"\n>>> capitalize(\"i am a title\")\n\"I Am A Title\"\
    \n>>> capitalize(\"i am a title\")\n\"I Am A Title", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of\noccurrences of each character in the string\nExamples\n\
    >>> count_characters(\"Hello\")\nH: 1\ne: 1\nl: 2\no: 1\n>>> count_characters(\"\
    abcdcba\")\na: 2\nb: 2\nc: 2\nd: 1\n>>> count_characters(\"kittens\")\nk: 1\n\
    i: 1\nt: 2\ne: 1\nn: 2\ns: 1\n>>> count_characters(\"orange\")\no: 1\nr: 1\na:\
    \ 1\nn: 1\ng: 1\ne: 1*/", "    $string_length = strlen($string);\n    $count =\
    \ 0;\n    for ($i = 1; $i <= $string_length; $i++) {\n        if ($string_length\
    \ % $i == 0) {\n            $count++;\n        }\n    }\n    if ($count == 2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ prime_length(\"Hello\");\necho \"<br>\";\necho prime_length(\"abcdcba\");\n\
    echo \"<br>\";\necho prime_length(\"kittens\");\necho \"<br>\";\necho prime_length(\"\
    orange\");\necho \"<br>\";\necho prime_length(\"Hello\");\necho \"<br>\";\necho\
    \ prime_length(\"abcdcba\");\necho \"<br>\";\necho prime_length(\"kittens\");\n\
    echo \"<br>\";\necho prime_length(\"orange\");\necho \"<br>\";\necho prime_length(\"\
    Hello\");\necho \"<br>\";\necho prime_length(\"abcdcba\");\necho \"<br>\";\necho\
    \ prime_length(\"kittens\");\necho \"<br>\";\necho prime_length(\"orange\");\n\
    echo \"<br>\";\necho prime_length(\"Hello\");\necho \"<br>\";\necho prime_length(\"\
    abcdcba\");\necho \"<br>\";\necho prime_length(\"kittens\");\necho \"<br>\";\n\
    echo prime_length(\"orange\");\necho \"<br>\";\necho prime_length(\"Hello\");\n\
    echo \"<br>\";\necho prime_length(\"abcdcba\");\necho \"<br>\";\necho prime_length(\"\
    kittens\");\necho \"<br>\";\necho prime_length(\"orange\");\necho \"<br>\";\n\
    echo prime_length(\"Hello\");\necho \"<br>\";\necho prime_length(\"abcdcba\");\n\
    echo \"<br>\";\necho prime_length(\"kittens\");\necho \"<br>\";\necho prime_length(\"\
    orange\");\necho \"<br>\";\necho prime_length(\"Hello\");\necho \"<br>\";\necho\
    \ prime_length(\"abcdcba\");\necho \"<br>\";\necho prime_length(\"kittens\");\n\
    echo \"<br>\";\necho prime_length(\"orange\");\necho \"<br>", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length = strlen($string);\n\
    \tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $length; $i++)\
    \ {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . PHP_EOL;\necho\
    \ prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $is_prime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $is_prime = false;\n            break;\n        }\n\
    \    }\n    return $is_prime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $len = strlen($string);\n\
    \    if ($len == 1) {\n        return true;\n    }\n    for ($i = 2; $i < $len;\
    \ $i++) {\n        if ($len % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\n/* Write a function that takes a string and returns\
    \ true if the string\ncontains a prime number of characters or false otherwise\n\
    Examples\n>>> prime_length(\"Hello\")\ntrue\n>>> prime_length(\"abcdcba\")\ntrue\n\
    >>> prime_length(\"kittens\")\ntrue\n>>> prime_length(\"orange\")\nfalse*/", " \
    \   $length = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n     \
    \   if ($length % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\necho prime_length(\"Hello\").\"\\n\";\necho prime_length(\"\
    abcdcba\").\"\\n\";\necho prime_length(\"kittens\").\"\\n\";\necho prime_length(\"\
    orange\").\"\\n\";", "    $length = strlen($string);\n    $isPrime = true;\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         $isPrime = false;\n            break;\n        }\n    }\n    return\
    \ $isPrime;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\");\necho \"\
    <br>\";\necho prime_length(\"abcdcba\");\necho \"<br>\";\necho prime_length(\"\
    kittens\");\necho \"<br>\";\necho prime_length(\"orange\");\necho \"<br>\";",
  "    $length = strlen($string);\n    if ($length == 2) {\n        return true;\n\
    \    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\n/* Write\
    \ a function that takes a string and returns a new string with all\nthe vowels\
    \ removed.\nExamples\n>>> remove_vowels(\"Hello\")\n\"Hll\"\n>>> remove_vowels(\"\
    abcdcba\")\n\"bcdcb\"\n>>> remove_vowels(\"kittens\")\n\"ktns\"\n>>> remove_vowels(\"\
    orange\")\n\"rng\"*/", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"<br>\";\necho prime_length(\"\
    abcdcba\") . \"<br>\";\necho prime_length(\"kittens\") . \"<br>\";\necho prime_length(\"\
    orange\") . \"<br>\";", "    $length = strlen($string);\n    if ($length == 2)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Write a function that takes a string and returns true\
    \ if the string\ncontains a prime number of characters or false otherwise\nExamples\n\
    >>> prime_chars(\"Hello\")\ntrue\n>>> prime_chars(\"abcdcba\")\ntrue\n>>> prime_chars(\"\
    kittens\")\nfalse\n>>> prime_chars(\"orange\")\nfalse*/", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n/* Write a\
    \ function that takes a string and returns the number of vowels\nin the string.\n\
    Examples\n>>> count_vowels(\"Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n4\n>>>\
    \ count_vowels(\"kittens\")\n3\n>>> count_vowels(\"orange\")\n3*/", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length =\
    \ strlen($string);\n\t$prime = true;\n\tfor ($i = 2; $i < $length; $i++) {\n\t\
    \tif ($length % $i == 0) {\n\t\t\t$prime = false;\n\t\t}\n\t}\n\treturn $prime;\n\
    }\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\
    \\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";\n", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length =\
    \ strlen($string);\n\tfor ($i = 2; $i < $length; $i++) {\n\t\tif ($length % $i\
    \ == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . PHP_EOL;\necho prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"\
    kittens\") . PHP_EOL;\necho prime_length(\"orange\") . PHP_EOL;", "    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $prime = false;\n         \
    \   break;\n        }\n    }\n    return $prime;\n}\n\necho prime_length(\"Hello\"\
    ) . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    $count = 0;\n    for ($i = 1; $i <= $length; $i++) {\n\
    \        if ($length % $i == 0) {\n            $count++;\n        }\n    }\n \
    \   if ($count == 2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Write a function that takes a string and returns the\
    \ number of vowels\nin the string.\nExamples\n>>> count_vowels(\"Hello\")\n2\n\
    >>> count_vowels(\"abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n3\n>>> count_vowels(\"\
    orange\")\n3*/", "    $length = strlen($string);\n    if ($length == 2) {\n  \
    \      return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "  $length = strlen($string);\n  for ($i = 2; $i < $length;\
    \ $i++) {\n    if ($length % $i == 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";\n", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"<br>\";\necho prime_length(\"\
    abcdcba\") . \"<br>\";\necho prime_length(\"kittens\") . \"<br>\";\necho prime_length(\"\
    orange\") . \"<br>\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\"\
    ;\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") .\
    \ \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2 || $length == 3) {\n        return true;\n    }\n    for\
    \ ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Write a function that takes a string and returns true if the string\n\
    contains a prime number of characters or false otherwise\nExamples\n>>> prime_chars(\"\
    Hello\")\ntrue\n>>> prime_chars(\"abcdcba\")\ntrue\n>>> prime_chars(\"kittens\"\
    )\nfalse\n>>> prime_chars(\"orange\")\nfalse*/", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $string_length = strlen($string);\n\
    \    $is_prime = true;\n    for ($i = 2; $i < $string_length; $i++) {\n      \
    \  if ($string_length % $i == 0) {\n            $is_prime = false;\n         \
    \   break;\n        }\n    }\n    return $is_prime;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    $is_prime = true;\n    for\
    \ ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n         \
    \   $is_prime = false;\n            break;\n        }\n    }\n    return $is_prime;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\n/* Write a function that takes a string and\
    \ returns the number of vowels\nin the string.\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n3*/", "    $string_length = strlen($string);\n\
    \    if ($string_length == 2) {\n        return true;\n    }\n    for ($i = 2;\
    \ $i < $string_length; $i++) {\n        if ($string_length % $i == 0) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . PHP_EOL;\necho prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"\
    kittens\") . PHP_EOL;\necho prime_length(\"orange\") . PHP_EOL;", "    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $prime = false;\n         \
    \   break;\n        }\n    }\n    return $prime;\n}\n\necho prime_length(\"Hello\"\
    ) . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "\t$length =\
    \ strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i =\
    \ 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Write a function that takes a string and returns a new string with\nthe\
    \ first and last characters swapped\nExamples\n>>> swap_first_last(\"Hello\")\n\
    \"oHell\"\n>>> swap_first_last(\"abcdcba\")\n\"acbcdba\"\n>>> swap_first_last(\"\
    kittens\")\n\"nttenki\"*/", "    $length = strlen($string);\n    for ($i = 2;\
    \ $i < $length; $i++) {\n        if ($length % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Write a function that takes\
    \ a string and returns a new string with the\nfirst letter of each word capitalized\n\
    Examples\n>>> capitalize(\"hello world\")\n\"Hello World\"\n>>> capitalize(\"\
    i am a title case string\")\n\"I Am A Title Case String\"\n>>> capitalize(\"look,\
    \ it is working!\")\n\"Look, It Is Working!\"*/", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of vowels\nin the string.\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n3\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n3*/", "    $length = strlen($string);\n    if\
    \ ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . PHP_EOL;\n\
    echo prime_length(\"abcdcba\") . PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\n\
    echo prime_length(\"orange\") . PHP_EOL;", "    $length = strlen($string);\n \
    \   if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n/* Write a\
    \ function that takes a string and returns a new string with\nall the vowels removed\n\
    Examples\n>>> remove_vowels(\"Hello\")\n\"Hll\"\n>>> remove_vowels(\"abcdcba\"\
    )\n\"bcdcb\"\n>>> remove_vowels(\"kittens\")\n\"ktns\"\n>>> remove_vowels(\"orange\"\
    )\n\"rng\"*/", "    $length = strlen($string);\n    if ($length == 1) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"<br>\";\n\
    echo prime_length(\"abcdcba\") . \"<br>\";\necho prime_length(\"kittens\") . \"\
    <br>\";\necho prime_length(\"orange\") . \"<br>\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";\n\n/* Write a\
    \ function that takes a string and returns the number of vowels\nin the string\n\
    Examples\n>>> count_vowels(\"Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n4\n>>>\
    \ count_vowels(\"kittens\")\n3\n>>> count_vowels(\"orange\")\n2*/", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\");\necho \"\\n\";\necho prime_length(\"abcdcba\");\necho \"\\n\";\necho\
    \ prime_length(\"kittens\");\necho \"\\n\";\necho prime_length(\"orange\");\n\
    echo \"\\n\";", "    $length = strlen($string);\n    if ($length == 1) {\n   \
    \     return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\n/* Write a function that takes a string and returns the number of\
    \ vowels\nin the string\nExamples\n>>> num_vowels(\"Hello\")\n2\n>>> num_vowels(\"\
    abcdcba\")\n4\n>>> num_vowels(\"kittens\")\n3\n>>> num_vowels(\"orange\")\n3*/",
  "    $length = strlen($string);\n    if ($length == 2) {\n        return true;\n\
    \    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\necho\
    \ prime_length(\"Hello\") ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"\
    abcdcba\") ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"kittens\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"orange\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho prime_length(\"abcdcba\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho prime_length(\"kittens\") ? \"true\" : \"\
    false\";\necho \"<br>\";\necho prime_length(\"orange\") ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho prime_length(\"abcdcba\") ? \"true\" : \"false\";\necho\
    \ \"<br>\";\necho prime_length(\"kittens\") ? \"true\" : \"false\";\necho \"<br>\"\
    ;\necho prime_length(\"orange\") ? \"true\" : \"false\";\necho \"<br>\";\necho\
    \ prime_length(\"abcdcba\") ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"\
    kittens\") ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"orange\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho prime_length(\"abcdcba\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho prime_length(\"kittens\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho prime_length(\"orange\") ? \"true\" : \"\
    false\";\necho \"<br>\";\necho prime_length(\"abcdcba\") ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho prime_length(\"kittens\") ? \"true\" : \"false\";\necho\
    \ \"<br>\";\necho prime_length(\"orange\") ? \"true\" : \"false\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    $isPrime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $isPrime = false;\n       \
    \     break;\n        }\n    }\n    return $isPrime;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";\n\n/* Write a function that takes a string and returns a string with\
    \ the\nfirst letter of each word capitalized\nExamples\n>>> title_case(\"this\
    \ is a title\")\n\"This Is A Title\"\n>>> title_case(\"capitalize every word\"\
    )\n\"Capitalize Every Word\"\n>>> title_case(\"I Like Pizza\")\n\"I Like Pizza\"\
    \n>>> title_case(\"PIZZA PIZZA PIZZA\")\n\"PIZZA PIZZA PIZZA\"*/", "    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $prime = false;\n         \
    \   break;\n        }\n    }\n    return $prime;\n}\necho prime_length(\"Hello\"\
    ) . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"<br>\";\necho prime_length(\"abcdcba\") . \"<br>\";\necho prime_length(\"\
    kittens\") . \"<br>\";\necho prime_length(\"orange\") . \"<br>\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\
    \\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2) {\n    \
    \    return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2) {\n    \
    \    return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . PHP_EOL;\necho prime_length(\"abcdcba\") .\
    \ PHP_EOL;\necho prime_length(\"kittens\") . PHP_EOL;\necho prime_length(\"orange\"\
    ) . PHP_EOL;", "    $length = strlen($string);\n    if ($length == 2) {\n    \
    \    return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\n/* Write a function that takes a string and\
    \ returns the number of vowels\nin the string.\nExamples\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n4\n>>> count_vowels(\"kittens\")\n\
    3\n>>> count_vowels(\"orange\")\n3*/", "    $length = strlen($string);\n    if\
    \ ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\");\necho prime_length(\"abcdcba\");\necho prime_length(\"kittens\");\n\
    echo prime_length(\"orange\");", "    $length = strlen($string);\n    if ($length\
    \ == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 2)\
    \ {\n        return true;\n    }\n    for ($i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";\n", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n/* Write a\
    \ function that takes a string and returns the number of times\nthat the letter\
    \ \"a\" occurs in the string.\nExamples\n>>> count_a(\"banana\")\n3\n>>> count_a(\"\
    apple\")\n1\n>>> count_a(\"cherry\")\n0*/", "  $length = strlen($string);\n  for\
    \ ($i = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\
    \\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $isPrime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $isPrime = false;\n            break;\n        }\n\
    \    }\n    return $isPrime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $prime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $prime = false;\n            break;\n        }\n \
    \   }\n    return $prime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\"\
    ;\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") .\
    \ \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";\n", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") .\
    \ \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"orange\"\
    ) . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if\
    \ ($length % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"abcdcba\"\
    ) . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    if ($length == 1)\
    \ {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n  \
    \      if ($length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    $isPrime = true;\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          $isPrime = false;\n            break;\n        }\n    }\n    return\
    \ $isPrime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho prime_length(\"\
    abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\n\";\necho prime_length(\"\
    orange\") . \"\\n\";", "    $length = strlen($string);\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho prime_length(\"Hello\") . \"\\n\"\
    ;\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") .\
    \ \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    $prime = true;\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            $prime = false;\n            break;\n        }\n \
    \   }\n    return $prime;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\necho\
    \ prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\\\
    n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 1) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\\
    n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\"\
    ) . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\necho prime_length(\"Hello\") . \"\\n\";\n\
    echo prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"kittens\") . \"\
    \\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length = strlen($string);\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n/* Write a\
    \ function that takes a string and returns the number of vowels\nin the string\n\
    Examples\n>>> count_vowels(\"Hello\")\n2\n>>> count_vowels(\"abcdcba\")\n3\n>>>\
    \ count_vowels(\"kittens\")\n3\n>>> count_vowels(\"orange\")\n3*/", "    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length(\"\
    Hello\") . \"\\n\";\necho prime_length(\"abcdcba\") . \"\\n\";\necho prime_length(\"\
    kittens\") . \"\\n\";\necho prime_length(\"orange\") . \"\\n\";", "    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Write a function that takes a string and returns the number of vowels\n\
    in the string.\nExamples\n>>> count_vowels(\"Hello\")\n2\n>>> count_vowels(\"\
    abcdcba\")\n2\n>>> count_vowels(\"kittens\")\n3\n>>> count_vowels(\"orange\")\n\
    3*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

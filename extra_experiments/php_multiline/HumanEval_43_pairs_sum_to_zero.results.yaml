language: php
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\
    \t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4xuu301.php:55\n\
    Stack trace:\n#0 /tmp/tmpc4xuu301.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpc4xuu301.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len <= 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\n/*\n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmp2phzw_81.php on
    line 30

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\t\
    $j = $n - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum ==\
    \ 0) {\n\t\t\treturn true;\n\t\t} else if ($sum < 0) {\n\t\t\t$i++;\n\t\t} else\
    \ {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsu1rji5.php:55\n\
    Stack trace:\n#0 /tmp/tmppsu1rji5.php(63): test()\n#1 {main}\n  thrown in /tmp/tmppsu1rji5.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\t$i = 0;\n\t$j = $n - 1;\n\twhile ($i < $j) {\n\t\t$sum\
    \ = $l[$i] + $l[$j];\n\t\tif ($sum == 0) {\n\t\t\treturn true;\n\t\t} else if\
    \ ($sum < 0) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxzjepaz.php:53\n\
    Stack trace:\n#0 /tmp/tmpoxzjepaz.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpoxzjepaz.php\
    \ on line 53\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$size = count($l);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $size; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\
    \t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $sum\
    \ = $l[$i] + $l[$j];\n        if ($sum == 0) {\n            return true;\n   \
    \     } elseif ($sum > 0) {\n            $j--;\n        } else {\n           \
    \ $i++;\n        }\n    }\n    return false;\n}\n\n/*\n * This function takes\
    \ an array of integers as an input.\n * It returns the number of distinct elements\
    \ in the array.\n * >>> count_distinct(array(1, 2, 3, 4, 5))\n * 5\n * >>> count_distinct(array(1,\
    \ 2, 3, 4, 5, 1))\n * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2))\n *\
    \ 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3))\n * 5\n * >>> count_distinct(array(1,\
    \ 2, 3, 4, 5, 1, 2, 3, 4))\n * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1,\
    \ 2, 3, 4, 5))\n * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3, 4, 5,\
    \ 1))\n * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2))\n\
    \ * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3))\n *\
    \ 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4))\n\
    \ * 5\n * >>> count_distinct(array(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4,\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmpvlt9q_2k.php on
    line 35

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    $j = $n - 1;\n    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n\
    \        if ($sum == 0) {\n            return true;\n        } elseif ($sum <\
    \ 0) {\n            $i++;\n        } else {\n            $j--;\n        }\n  \
    \  }\n    return false;\n}\n\n/*\n * find_max_sum_subarray takes an array of integers\
    \ as an input.\n * it returns the maximum sum of a subarray of the input array.\n\
    \ * >>> find_max_sum_subarray(array(1, 2, 3, 4))\n * 10\n * >>> find_max_sum_subarray(array(1,\
    \ 2, -3, 4))\n * 4\n * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1))\n * 4\n\
    \ * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1, -2))\n * 4\n * >>> find_max_sum_subarray(array(1,\
    \ 2, -3, 4, -1, -2, 5))\n * 5\n * >>> find_max_sum_subarray(array(1, 2, -3, 4,\
    \ -1, -2, 5, -1))\n * 5\n * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1, -2,\
    \ 5, -1, -2))\n * 5\n * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1, -2, 5,\
    \ -1, -2, -3))\n * 5\n * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1, -2,\
    \ 5, -1, -2, -3, -4))\n * 5\n * >>> find_max_sum_subarray(array(1, 2, -3, 4, -1,\
    \ -2, 5, -1, -2,\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmp8gqcfh64.php on
    line 35

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $i = 0;\n    $j = $n - 1;\n\
    \    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n        if ($sum == 0)\
    \ {\n            return true;\n        } elseif ($sum > 0) {\n            $j--;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzeg0biy.php:58\n\
    Stack trace:\n#0 /tmp/tmptzeg0biy.php(66): test()\n#1 {main}\n  thrown in /tmp/tmptzeg0biy.php\
    \ on line 58\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\n\
    false\n*/\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $len = count($l);\n  for ($i = 0; $i < $len; $i++) {\n    for ($j = $i\
    \ + 1; $j < $len; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 66 in /tmp/tmpszuybxeh.php on
    line 66

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmpgzg492v2.php on
    line 27

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $count = count($l);\n  if ($count < 2) {\n    return false;\n  }\n  $i\
    \ = 0;\n  while ($i < $count) {\n    $j = $i + 1;\n    while ($j < $count) {\n\
    \      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n      $j =\
    \ $j + 1;\n    }\n    $i = $i + 1;\n  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$len = count($l);\n\twhile ($i < $len) {\n\t\t$j\
    \ = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\
    \treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 66 in /tmp/tmpkld9ji7b.php on
    line 66

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\
    \t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } elseif\
    \ ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n     \
    \   }\n    }\n    return false;\n}\n\n/*\n * Given an array of integers, return\
    \ indices of the two numbers such that they add up to a specific target.\n * You\
    \ may assume that each input would have exactly one solution, and you may not\
    \ use the same element twice.\n * Example:\n * Given nums = [2, 7, 11, 15], target\
    \ = 9,\n * Because nums[0] + nums[1] = 2 + 7 = 9,\n * return [0, 1].\n */\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tx9x1tv.php:51\n\
    Stack trace:\n#0 /tmp/tmp7tx9x1tv.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp7tx9x1tv.php\
    \ on line 51\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = 0;\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tfor ($j = $i +\
    \ 1; $j < count($l); $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($count > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $sum\
    \ = $l[$i] + $l[$j];\n        if ($sum == 0) {\n            return true;\n   \
    \     } elseif ($sum > 0) {\n            $j--;\n        } else {\n           \
    \ $i++;\n        }\n    }\n    return false;\n}\n\n/* pairs_sum_to_zero_2 takes\
    \ an array of integers as an input.\nit returns true if there are two distinct\
    \ elements in the array that\nsum to zero, and false otherwise.\n>>> pairs_sum_to_zero_2(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_2(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_2(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_2(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_2(array(1))\nfalse*/\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpantdp9k3.php:56\n\
    Stack trace:\n#0 /tmp/tmpantdp9k3.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpantdp9k3.php\
    \ on line 56\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \twhile ($i < $len) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/* pairs_sum_to_zero_fast takes an array\
    \ of integers as an input.\nit returns true if there are two distinct elements\
    \ in the array that\nsum to zero, and false otherwise.\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_fast(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\n\
    false\n*/\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n * pairs_sum_to_zero_sorted takes an array of integers\
    \ as an input.\n * it returns true if there are two distinct elements in the array\
    \ that\n * sum to zero, and false otherwise.\n * >>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\n * false\n * >>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\n *\
    \ false\n * >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\n * false\n * >>>\
    \ pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\n * true\n * >>> pairs_sum_to_zero_sorted(array(1))\n\
    \ * false\n */\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $length = count($l);\n    if ($length < 2) {\n        return false;\n\
    \    }\n    $i = 0;\n    while ($i < $length) {\n        $j = $i + 1;\n      \
    \  while ($j < $length) {\n            if ($l[$i] + $l[$j] == 0) {\n         \
    \       return true;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$l = array_unique($l);\n\
    \t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$s = array_sum($l);\n\
    \tif ($s == 0) {\n\t\treturn true;\n\t}\n\t$m = max($l);\n\tif ($m < 0) {\n\t\t\
    return false;\n\t}\n\t$l = array_map(function($x) use ($m) {\n\t\treturn $m +\
    \ $x;\n\t}, $l);\n\t$s = array_sum($l);\n\tif ($s == 0) {\n\t\treturn true;\n\t\
    }\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll33fp7d.php:64\n\
    Stack trace:\n#0 /tmp/tmpll33fp7d.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpll33fp7d.php\
    \ on line 64\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $len - 1) {\n        $j = $i + 1;\n        while\
    \ ($j < $len) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $len) {\n        $j = $i + 1;\n        while ($j\
    \ < $len) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$s = array_sum($l);\n\
    \tif ($s == 0) {\n\t\treturn true;\n\t}\n\t$m = max($l);\n\tif ($m > 0) {\n\t\t\
    return false;\n\t}\n\t$m = min($l);\n\tif ($m < 0) {\n\t\treturn false;\n\t}\n\
    \t$s = array_sum($l);\n\tif ($s == 0) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkfw18be.php:59\n\
    Stack trace:\n#0 /tmp/tmpdkfw18be.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpdkfw18be.php\
    \ on line 59\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero_hash(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(2, 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\n\
    false\n*/\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/* pairs_sum_to_zero_sorted takes an array of integers as an input.\nit returns\
    \ true if there are two distinct elements in the array that\nsum to zero, and\
    \ false otherwise.\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_sorted(array(1))\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$pairs = array();\n\tforeach ($l as $i) {\n\t\tif (isset($pairs[-$i]))\
    \ {\n\t\t\treturn true;\n\t\t}\n\t\t$pairs[$i] = true;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\t$l = array_values($l);\n\t$len = count($l);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/* pairs_sum_to_zero_hash takes an array of integers as an input.\nit returns\
    \ true if there are two distinct elements in the array that\nsum to zero, and\
    \ false otherwise.\n>>> pairs_sum_to_zero_hash(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_hash(array(1))\nfalse*/\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmphi0m8blk.php on
    line 35

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \twhile ($i < $len - 1) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\
    \t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5,\
    \ 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\
    \t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    $j = $n - 1;\n    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n\
    \        if ($sum == 0) {\n            return true;\n        } else if ($sum <\
    \ 0) {\n            $i++;\n        } else {\n            $j--;\n        }\n  \
    \  }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgwgspnnd.php:56\n\
    Stack trace:\n#0 /tmp/tmpgwgspnnd.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpgwgspnnd.php\
    \ on line 56\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } elseif\
    \ ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n     \
    \   }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5,\
    \ 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvarxcpk.php:55\n\
    Stack trace:\n#0 /tmp/tmpsvarxcpk.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpsvarxcpk.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\t$i = 0;\n\t$j = 0;\n\t$sum = 0;\n\twhile ($i < $count)\
    \ {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\t\t\t$sum = $l[$i] + $l[$j];\n\
    \t\t\tif ($sum == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t\
    $i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \twhile ($i < $len) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$len = count($l);\n\twhile ($i < $len)\
    \ {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i] + $l[$j] == 0)\
    \ {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1;\
    \ $j < $n; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $i = 0;\n    $j = count($l) - 1;\n    while ($i < $j) {\n        if ($l[$i]\
    \ + $l[$j] == 0) {\n            return true;\n        } else if ($l[$i] + $l[$j]\
    \ > 0) {\n            $j--;\n        } else {\n            $i++;\n        }\n\
    \    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zpz9uty.php:50\n\
    Stack trace:\n#0 /tmp/tmp0zpz9uty.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp0zpz9uty.php\
    \ on line 50\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $sum\
    \ = $l[$i] + $l[$j];\n        if ($sum == 0) {\n            return true;\n   \
    \     } elseif ($sum > 0) {\n            $j--;\n        } else {\n           \
    \ $i++;\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7prlh29.php:55\n\
    Stack trace:\n#0 /tmp/tmpe7prlh29.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpe7prlh29.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif($count <= 1) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile($j < $count) {\n\t\
    \t\tif($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\
    \t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $len = count($l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $len) {\n        $j = $i + 1;\n        while ($j\
    \ < $len) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\t$l = array_values($l);\n\t$n = count($l);\n\t\
    for ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } elseif\
    \ ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n     \
    \   }\n    }\n    return false;\n}\n\n/*\n * Given an array of integers, return\
    \ indices of the two numbers such that they add up to a specific target.\n\nYou\
    \ may assume that each input would have exactly one solution, and you may not\
    \ use the same element twice.\n\nExample:\n\nGiven nums = [2, 7, 11, 15], target\
    \ = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n */\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvb5j_9w1.php:55\n\
    Stack trace:\n#0 /tmp/tmpvb5j_9w1.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpvb5j_9w1.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\t$l = array_values($l);\n\t$len = count($l);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$l = array_unique($l);\n\
    \tforeach ($l as $i) {\n\t\tif (in_array(-$i, $l)) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmphi0m8blk.php on
    line 35

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } elseif\
    \ ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n     \
    \   }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5,\
    \ 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvarxcpk.php:55\n\
    Stack trace:\n#0 /tmp/tmpsvarxcpk.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpsvarxcpk.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1;\
    \ $j < $n; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\n/* pairs_sum_to_zero_sorted takes\
    \ an array of integers as an input.\nit returns true if there are two distinct\
    \ elements in the array that\nsum to zero, and false otherwise.\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\t$j = 1;\n\twhile ($i < $count) {\n\t\twhile ($j < $count) {\n\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t\
    }\n\t\t$i++;\n\t\t$j = $i + 1;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $l = array_unique($l);\n  $l = array_values($l);\n  $size = count($l);\n\
    \  for ($i = 0; $i < $size; $i++) {\n    for ($j = $i + 1; $j < $size; $j++) {\n\
    \      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count == 1) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$sum = 0;\n\t$count = 0;\n\t$i = 0;\n\t$j = 0;\n\t$len = count($l);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\
    \t$sum = $l[$i] + $l[$j];\n\t\t\tif ($sum == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\tif ($count > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\n/*\n>>> count_pairs_sum_to_zero(array(1, 3, 5, 0))\n0\n>>> count_pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\n1\n>>> count_pairs_sum_to_zero(array(1, 2, 3, 7))\n0\n>>> count_pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\n2\n>>> count_pairs_sum_to_zero(array(1))\n0\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\t\
    while ($i < $n) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $n) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j = $j + 1;\n\t\t}\n\t\
    \t$i = $i + 1;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < $len) {\n\t\t$j\
    \ = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\
    \treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  if ($n < 2) {\n    return false;\n  }\n  $i = 0;\n \
    \ $j = $n - 1;\n  while ($i < $j) {\n    $sum = $l[$i] + $l[$j];\n    if ($sum\
    \ == 0) {\n      return true;\n    } else if ($sum < 0) {\n      $i++;\n    }\
    \ else {\n      $j--;\n    }\n  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4hhyh41.php:55\n\
    Stack trace:\n#0 /tmp/tmph4hhyh41.php(63): test()\n#1 {main}\n  thrown in /tmp/tmph4hhyh41.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\twhile ($i <\
    \ count($l)) {\n\t\t$j = $i + 1;\n\t\twhile ($j < count($l)) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/* pairs_sum_to_zero_hash takes an array of integers as an input.\nit returns\
    \ true if there are two distinct elements in the array that\nsum to zero, and\
    \ false otherwise.\n>>> pairs_sum_to_zero_hash(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_hash(array(1))\nfalse*/\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $i = 0;\n    $j = 0;\n    $len = count($l);\n    while ($i < $len) {\n\
    \        $j = $i + 1;\n        while ($j < $len) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return true;\n            }\n            $j++;\n  \
    \      }\n        $i++;\n    }\n    return false;\n}\n\n/*\n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 32 in /tmp/tmpxwk_584x.php on
    line 32

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $len = count($l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$result = false;\n\tif (count($l) > 1) {\n\t\t$l = array_unique($l);\n\t\
    \t$l = array_values($l);\n\t\t$i = 0;\n\t\twhile ($i < count($l) && !$result)\
    \ {\n\t\t\t$j = $i + 1;\n\t\t\twhile ($j < count($l) && !$result) {\n\t\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\t\t$result = true;\n\t\t\t\t}\n\t\t\t\t$j++;\n\
    \t\t\t}\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    $j = $n - 1;\n    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n\
    \        if ($sum == 0) {\n            return true;\n        } elseif ($sum <\
    \ 0) {\n            $i++;\n        } else {\n            $j--;\n        }\n  \
    \  }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulsjl7nt.php:56\n\
    Stack trace:\n#0 /tmp/tmpulsjl7nt.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpulsjl7nt.php\
    \ on line 56\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$l\
    \ = array_unique($l);\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn\
    \ false;\n\t}\n\t$l = array_values($l);\n\t$i = 0;\n\twhile ($i < $count) {\n\t\
    \t$j = $i + 1;\n\t\twhile ($j < $count) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4xuu301.php:55\n\
    Stack trace:\n#0 /tmp/tmpc4xuu301.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpc4xuu301.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n   \
    \ }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 73 in /tmp/tmpgtbyb_dd.php on
    line 73

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l) < 2) {\n        return false;\n    }\n    $l = array_unique($l);\n\
    \    $l = array_values($l);\n    $i = 0;\n    $j = count($l) - 1;\n    while ($i\
    \ < $j) {\n        if ($l[$i] + $l[$j] == 0) {\n            return true;\n   \
    \     } else if ($l[$i] + $l[$j] > 0) {\n            $j--;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdokdoq8r.php:56\n\
    Stack trace:\n#0 /tmp/tmpdokdoq8r.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpdokdoq8r.php\
    \ on line 56\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } else\
    \ if ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n  \
    \      }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp5q_6kn.php:55\n\
    Stack trace:\n#0 /tmp/tmpnp5q_6kn.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpnp5q_6kn.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count - 1) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count)\
    \ {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\
    $j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmpd9e2vfxx.php on
    line 34

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\t\
    while ($i < $n) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $n) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$len = count($l);\n\twhile ($i < $len)\
    \ {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i] + $l[$j] == 0)\
    \ {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/* pairs_sum_to_zero_hash takes an array of integers as an input.\nit returns\
    \ true if there are two distinct elements in the array that\nsum to zero, and\
    \ false otherwise.\n>>> pairs_sum_to_zero_hash(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_hash(array(1))\nfalse*/\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $l = array_unique($l);\n    $n = count($l);\n    if ($n < 2) {\n        return\
    \ false;\n    }\n    $l = array_values($l);\n    $l = array_unique($l);\n    $n\
    \ = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    $l = array_values($l);\n\
    \    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        if ($l[$i] + $l[$j] == 0) {\n                return true;\n         \
    \   }\n        }\n    }\n    return false;\n}\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } else\
    \ if ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n  \
    \      }\n    }\n    return false;\n}\n\n/*\n * Given an array of integers, return\
    \ indices of the two numbers such that they add up to a specific target.\n * You\
    \ may assume that each input would have exactly one solution, and you may not\
    \ use the same element twice.\n * Example:\n * Given nums = [2, 7, 11, 15], target\
    \ = 9,\n * Because nums[0] + nums[1] = 2 + 7 = 9,\n * return [0, 1].\n */\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfpzx2kg.php:51\n\
    Stack trace:\n#0 /tmp/tmprfpzx2kg.php(59): test()\n#1 {main}\n  thrown in /tmp/tmprfpzx2kg.php\
    \ on line 51\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/* pairs_sum_to_zero_sorted takes an array of integers as an input.\nit returns\
    \ true if there are two distinct elements in the array that\nsum to zero, and\
    \ false otherwise.\n>>> pairs_sum_to_zero_sorted(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2, 4, -5, 3, 5, 7))\ntrue\n\
    >>> pairs_sum_to_zero_sorted(array(1))\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$sum = 0;\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t\
    for ($j = $i + 1; $j < $len; $j++) {\n\t\t\t$sum = $l[$i] + $l[$j];\n\t\t\tif\
    \ ($sum == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\t$first =\
    \ $l[$i];\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\t\t$second = $l[$j];\n\
    \t\t\tif ($first + $second == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>>\
    \ pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $i = 0;\n    $j = count($l) - 1;\n    while ($i < $j) {\n        if ($l[$i]\
    \ + $l[$j] == 0) {\n            return true;\n        } else if ($l[$i] + $l[$j]\
    \ > 0) {\n            $j--;\n        } else {\n            $i++;\n        }\n\
    \    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp928_teqc.php:51\n\
    Stack trace:\n#0 /tmp/tmp928_teqc.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp928_teqc.php\
    \ on line 51\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n   \
    \ }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n * max_subarray_sum takes an array of integers as an input.\n * it returns\
    \ the maximum sum of a subarray of the input.\n * >>> max_subarray_sum(array(1,\
    \ 2, 3, 4))\n * 10\n * >>> max_subarray_sum(array(1, 2, -3, 4))\n * 4\n * >>>\
    \ max_subarray_sum(array(1, 2, -3, -4))\n * 1\n * >>> max_subarray_sum(array(-1,\
    \ -2, -3, -4))\n * -1\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10))\n * 10\n\
    \ * >>> max_subarray_sum(array(1, 2, 3, 4, -10, 10))\n * 10\n * >>> max_subarray_sum(array(1,\
    \ 2, 3, 4, -10, 10, -10))\n * 10\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10,\
    \ 10, -10, 10))\n * 20\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10, 10, -10,\
    \ 10, -10))\n * 20\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10, 10, -10, 10,\
    \ -10, 10))\n * 30\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10, 10, -10, 10,\
    \ -10, 10, -10))\n * 30\n * >>> max_subarray_sum(array(1, 2, 3, 4, -10, 10, -10,\
    \ 10, -10, 10, -10, 10))\n * 40\n * >>> max_subarray_sum(array(1\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmprnf20oap.php on
    line 27

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $len = count($l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j\
    \ = $i + 1; $j < $len; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n    \
    \            return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    $j = 1;\n    while ($i < $n) {\n        while ($j < $n) {\n  \
    \          if ($l[$i] + $l[$j] == 0) {\n                return true;\n       \
    \     }\n            $j++;\n        }\n        $i++;\n        $j = $i + 1;\n \
    \   }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_fast(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n   \
    \ }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 73 in /tmp/tmpgtbyb_dd.php on
    line 73

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$len = count($l);\n\twhile ($i < $len) {\n\t\t$j\
    \ = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\
    \treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  if ($n < 2) {\n    return false;\n  }\n  $i = 0;\n \
    \ while ($i < $n) {\n    $j = $i + 1;\n    while ($j < $n) {\n      if ($l[$i]\
    \ + $l[$j] == 0) {\n        return true;\n      }\n      $j++;\n    }\n    $i++;\n\
    \  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero_sorted(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_sorted(array(1, 3, -2, 1))\nfalse\n\
    >>> pairs_sum_to_zero_sorted(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_sorted(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_sorted(array(1))\nfalse\n*/\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tfor\
    \ ($j = $i + 1; $j < count($l); $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\
    \t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 66 in /tmp/tmpmw4my_zn.php on
    line 66

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdoyw7vbh.php:43\n\
    Stack trace:\n#0 /tmp/tmpdoyw7vbh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdoyw7vbh.php\
    \ on line 43\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4xuu301.php:55\n\
    Stack trace:\n#0 /tmp/tmpc4xuu301.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpc4xuu301.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  if ($n < 2) {\n    return false;\n  }\n  $i = 0;\n \
    \ $j = $n - 1;\n  while ($i < $j) {\n    $sum = $l[$i] + $l[$j];\n    if ($sum\
    \ == 0) {\n      return true;\n    } else if ($sum < 0) {\n      $i++;\n    }\
    \ else {\n      $j--;\n    }\n  }\n  return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4hhyh41.php:55\n\
    Stack trace:\n#0 /tmp/tmph4hhyh41.php(63): test()\n#1 {main}\n  thrown in /tmp/tmph4hhyh41.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n/*\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n\
    \ *\n *\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmp68j15x3u.php on
    line 26

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$result = false;\n\t$size = count($l);\n\tfor ($i = 0; $i < $size; $i++)\
    \ {\n\t\tfor ($j = $i + 1; $j < $size; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0)\
    \ {\n\t\t\t\t$result = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$sum = 0;\n\t$len = count($l);\n\tfor\
    \ ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\t\
    $sum = $l[$i] + $l[$j];\n\t\t\tif ($sum == 0) {\n\t\t\t\treturn true;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5,\
    \ 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$flag = false;\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\
    \tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\t$flag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $flag;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len == 0) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8e3ixfl.php:55\n\
    Stack trace:\n#0 /tmp/tmpb8e3ixfl.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpb8e3ixfl.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$l = sort($l);\n\
    \t$i = 0;\n\t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\
    \t\tif ($sum == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum < 0) {\n\t\t\t$i++;\n\
    \t\t} else {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type bool in /tmp/tmp8by3jpq2.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type bool in\
    \ /tmp/tmp8by3jpq2.php on line 24\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8by3jpq2.php:54\nStack trace:\n#0 /tmp/tmp8by3jpq2.php(65): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8by3jpq2.php on line 54\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/* pairs_sum_to_zero_fast takes an array\
    \ of integers as an input.\nit returns true if there are two distinct elements\
    \ in the array that\nsum to zero, and false otherwise.\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_fast(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$l = sort($l);\n\t$i =\
    \ 0;\n\t$j = count($l) - 1;\n\twhile ($i < $j) {\n\t\tif ($l[$i] + $l[$j] == 0)\
    \ {\n\t\t\treturn true;\n\t\t} else if ($l[$i] + $l[$j] < 0) {\n\t\t\t$i++;\n\t\
    \t} else {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpq1oxcxc_.php:21\nStack trace:\n\
    #0 /tmp/tmpq1oxcxc_.php(47): pairs_sum_to_zero(true)\n#1 /tmp/tmpq1oxcxc_.php(51):\
    \ candidate(Array)\n#2 /tmp/tmpq1oxcxc_.php(62): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpq1oxcxc_.php on line 21\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\t$count = count($l);\n\tif ($count < 2) {\n\t\t\
    return false;\n\t}\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> count_pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\n0\n>>> count_pairs_sum_to_zero(array(1, 3, -2, 1))\n1\n>>> count_pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n0\n>>> count_pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n2\n>>>\
    \ count_pairs_sum_to_zero(array(1))\n0\n*/\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \t$j = $len - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\tif ($sum\
    \ == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum > 0) {\n\t\t\t$j--;\n\t\t}\
    \ else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n * pairs_sum_to_zero_2\
    \ takes an array of integers as an input.\n * it returns true if there are two\
    \ distinct elements in the array that\n * sum to zero, and false otherwise.\n\
    \ * >>> pairs_sum_to_zero_2(array(1, 3, 5, 0))\n * false\n * >>> pairs_sum_to_zero_2(array(1,\
    \ 3, -2, 1))\n * false\n * >>> pairs_sum_to_zero_2(array(1, 2, 3, 7))\n * false\n\
    \ * >>> pairs_sum_to_zero_2(array(2, 4, -5, 3, 5, 7))\n * true\n * >>> pairs_sum_to_zero_2(array(1))\n\
    \ * false\n */\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0qntdat.php:58\n\
    Stack trace:\n#0 /tmp/tmpv0qntdat.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpv0qntdat.php\
    \ on line 58\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\tif\
    \ ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// $l is an array of integers\n\t// return true if there are two distinct\
    \ elements in the array that sum to zero, and false otherwise\n\t$l1 = array();\n\
    \tforeach ($l as $value) {\n\t\tif (in_array(-$value, $l)) {\n\t\t\tif (!in_array($value,\
    \ $l1)) {\n\t\t\t\t$l1[] = $value;\n\t\t\t}\n\t\t}\n\t}\n\tif (count($l1) > 1)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$l = sort($l);\n\
    \t$i = 0;\n\t$j = $n - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\
    \tif ($sum == 0) {\n\t\t\treturn true;\n\t\t} else if ($sum < 0) {\n\t\t\t$i++;\n\
    \t\t} else {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n * Given a sorted\
    \ array of integers, return the index of the given key.\n * Return -1 if the given\
    \ key is not found in the array.\n *\n * Input:\n * A sorted array of integers\n\
    \ *\n * Output:\n * The index of the given key in the array\n *\n * >>> binary_search(array(1,\
    \ 2, 3, 4, 5), 1)\n * 0\n * >>> binary_search(array(1, 2, 3, 4, 5), 2)\n * 1\n\
    \ * >>> binary_search(array(1, 2, 3, 4, 5), 3)\n * 2\n * >>> binary_search(array(1,\
    \ 2, 3, 4, 5), 4)\n * 3\n * >>> binary_search(array(1, 2, 3, 4, 5), 5)\n * 4\n\
    \ * >>> binary_search(array(1, 2, 3, 4, 5), 6)\n * -1\n * >>> binary_search(array(1,\
    \ 2, 3, 4, 5), 0)\n * -1\n * >>> binary_search(array(1, 2, 3, 4, 5), -1)\n * -1\n\
    \ * >>> binary_search(array(1, 2, 3, 4, 5), -2)\n * -1\n * >>> binary_search(array(1,\
    \ 2, 3, 4, 5), -3)\n * -1\n * >>> binary_search(array(1, 2, 3, 4, 5), -4)\n *\
    \ -1\n * >>> binary_search(array(1, 2, 3, 4, 5), -5)\n *\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 36 in /tmp/tmp4up7iin2.php on
    line 36

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $pairs = array();\n    $count = count($l);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                return true;\n            }\n        }\n \
    \   }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    false\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while\
    \ ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\
    \twhile ($i < $len) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $len) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n\
    >>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) {\n        return false;\n \
    \   }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero_hash(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_hash(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_hash(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_hash(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_hash(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n  \
    \  $s = array_sum($l);\n    if ($s == 0) {\n        return true;\n    }\n    $p\
    \ = array_product($l);\n    if ($p == 0) {\n        return true;\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        if ($l[$i] + $l[$j] == 0) {\n                return true;\n         \
    \   }\n        }\n    }\n    return false;\n}\n\n/*\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 3, -2, 1))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero_fast(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1hs1x99.php:55\n\
    Stack trace:\n#0 /tmp/tmpi1hs1x99.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpi1hs1x99.php\
    \ on line 55\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3,\
    \ 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero_fast(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(2, 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\n\
    false\n*/\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\t\
    while ($i < $n) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $n) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j = $j + 1;\n\t\t}\n\t\
    \t$i = $i + 1;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$sum = 0;\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\t$sum = $l[$i] + $l[$j];\n\t\t\tif ($sum == 0) {\n\t\t\t\treturn true;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5,\
    \ 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    $i = 0;\n    $j = $n - 1;\n    while ($i < $j) {\n\
    \        $sum = $l[$i] + $l[$j];\n        if ($sum == 0) {\n            return\
    \ true;\n        } elseif ($sum < 0) {\n            $i++;\n        } else {\n\
    \            $j--;\n        }\n    }\n    return false;\n}\n\n/*\n * The following\
    \ code is for testing the pairs_sum_to_zero function.\n * It is not part of the\
    \ solution.\n */\n$tests = array(\n    array(1, 3, 5, 0),\n    array(1, 3, -2,\
    \ 1),\n    array(1, 2, 3, 7),\n    array(2, 4, -5, 3, 5, 7),\n    array(1),\n\
    );\n\nforeach ($tests as $test) {\n    $result = pairs_sum_to_zero($test);\n \
    \   if ($result) {\n        echo \"true\\n\";\n    } else {\n        echo \"false\\\
    n\";\n    }\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0571vrie.php:60\nStack trace:\n#0 /tmp/tmp0571vrie.php(68):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0571vrie.php on line 60\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    \n/*\n>>> pairs_sum_to_zero_fast(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero_fast(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero_fast(array(1, 2, 3, 7))\nfalse\n>>>\
    \ pairs_sum_to_zero_fast(array(2, 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero_fast(array(1))\n\
    false\n*/\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\
    \tforeach ($l as $i) {\n\t\tif (in_array(-$i, $l)) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\n\n/* unique_pairs_sum_to_zero takes an array of integers\
    \ as an input.\nit returns true if there are two distinct elements in the array\
    \ that\nsum to zero, and false otherwise.\n>>> unique_pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> unique_pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n\
    >>> unique_pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> unique_pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> unique_pairs_sum_to_zero(array(1))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppofm_046.php:46\n\
    Stack trace:\n#0 /tmp/tmppofm_046.php(57): test()\n#1 {main}\n  thrown in /tmp/tmppofm_046.php\
    \ on line 46\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\t$i\
    \ = 0;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count) {\n\
    \t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j++;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1,\
    \ 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1, 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\ntrue\n>>>\
    \ pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* pairs_sum_to_zero takes an array of integers as an input.\n\
    it returns true if there are two distinct elements in the array that\nsum to zero,\
    \ and false otherwise.\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse*/\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l = array_unique($l);\n\t$l = array_values($l);\n\t$len = count($l);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\n/*\n>>> pairs_sum_to_zero(array(1, 3, 5, 0))\nfalse\n>>> pairs_sum_to_zero(array(1,\
    \ 3, -2, 1))\nfalse\n>>> pairs_sum_to_zero(array(1, 2, 3, 7))\nfalse\n>>> pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7))\ntrue\n>>> pairs_sum_to_zero(array(1))\nfalse\n*/\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778

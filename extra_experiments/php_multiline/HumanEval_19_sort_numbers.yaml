name: HumanEval_19_sort_numbers
language: php
prompt: "<?php\n/* Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\nReturn the string with numbers sorted from smallest to largest\n\
  >>> sort_numbers(\"three one five\")\n\"one three five\"*/\nfunction sort_numbers($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
  \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
  \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\");\
  \ }\n}\n\ntest();"
completions: ["    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\n            'number' => $number,\n            'value' =>\
    \ array_search($number, ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n    usort($numbers,\
    \ function($a, $b) {\n        return $a['value'] - $b['value'];\n    });\n   \
    \ $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "  $numbers\
    \ = explode(\" \", $numbers);\n  $numbers = array_map(function($number) {\n  \
    \  return array_search($number, ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine']);\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n  }, $numbers);\n\
    \  return implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with words in reverse sequence.\n>>> reverse_words(\"\
    This is an example!\")\n\"sihT si na !elpmaxe\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n    },\
    \ $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [$number, array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])];\n\
    \    }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a[1]\
    \ - $b[1];\n    });\n    $numbers = array_map(function($number) {\n        return\
    \ $number[0];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n\
    /* Input is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $number = str_replace(\"zero\", \"0\", $number);\n        $number\
    \ = str_replace(\"one\", \"1\", $number);\n        $number = str_replace(\"two\"\
    , \"2\", $number);\n        $number = str_replace(\"three\", \"3\", $number);\n\
    \        $number = str_replace(\"four\", \"4\", $number);\n        $number = str_replace(\"\
    five\", \"5\", $number);\n        $number = str_replace(\"six\", \"6\", $number);\n\
    \        $number = str_replace(\"seven\", \"7\", $number);\n        $number =\
    \ str_replace(\"eight\", \"8\", $number);\n        $number = str_replace(\"nine\"\
    , \"9\", $number);\n        return $number;\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = str_replace(\"\
    0\", \"zero\", $number);\n        $number = str_replace(\"1\", \"one\", $number);\n\
    \        $number = str_replace(\"2\", \"two\", $number);\n        $number = str_replace(\"\
    3\", \"three\", $number);\n        $number = str_replace(\"4\", \"four\", $number);\n\
    \        $number = str_replace(\"5\", \"five\", $number);\n        $number = str_replace(\"\
    6\", \"six\", $number);\n        $number = str_replace(\"7\", \"seven\", $number);\n\
    \        $number = str_replace(\"8\", \"eight\", $number);\n        $number =\
    \ str_replace(\"9\", \"nine\", $number);\n        return $number;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words sorted from shortest to longest.\n\
    >>> sort_words(\"the quick brown fox jumps over the lazy dog\")\n\"the dog fox\
    \ the lazy over quick brown jumps\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps over the\
    \ lazy dog\")\n\"the dog fox the lazy over quick brown jumps\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $number_map = array(\n        'zero' => 0,\n\
    \        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n        'four'\
    \ => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n  \
    \      'eight' => 8,\n        'nine' => 9\n    );\n    $numbers = array_map(function($number)\
    \ use ($number_map) {\n        return $number_map[$number];\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) use ($number_map)\
    \ {\n        return array_search($number, $number_map);\n    }, $numbers);\n \
    \   return implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_words(\"the quick brown fox jumps over the lazy dog\")\n\"the dog fox\
    \ the lazy over jumps quick brown\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with\
    \ the words sorted from shortest to longest.\n>>> sort_words(\"one two three four\"\
    )\n\"one two three four\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\n            'number' => $number,\n            'value' =>\
    \ array_search($number, ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n    usort($numbers,\
    \ function($a, $b) {\n        return $a['value'] - $b['value'];\n    });\n   \
    \ $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers, separated by spaces.\nReturn the string with the numbers sorted\
    \ from largest to smallest.\n>>> sort_numbers_desc(\"3 1 5\")\n\"5 3 1\"*/", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of letters.\nReturn the string with the letters sorted alphabetically, with\
    \ uppercase letters before lowercase letters.\n>>> sort_letters(\"Hello World\"\
    )\n\"deHllloorW\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/*\nInput is a string of words separated\
    \ by spaces.\nReturn the string with the words reversed.\n>>> reverse_words(\"\
    hello world\")\n\"world hello\"\n*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($n) {\n        return $n == 'zero' ? 0 : $n\
    \ == 'one' ? 1 : $n == 'two' ? 2 : $n == 'three' ? 3 : $n == 'four' ? 4 : $n ==\
    \ 'five' ? 5 : $n == 'six' ? 6 : $n == 'seven' ? 7 : $n == 'eight' ? 8 : $n ==\
    \ 'nine' ? 9 : $n;\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($n)\
    \ {\n        return $n == 0 ? 'zero' : $n == 1 ? 'one' : $n == 2 ? 'two' : $n\
    \ == 3 ? 'three' : $n == 4 ? 'four' : $n == 5 ? 'five' : $n == 6 ? 'six' : $n\
    \ == 7 ? 'seven' : $n == 8 ? 'eight' : $n == 9 ? 'nine' : $n;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words separated by spaces.\nReturn the string with words sorted from shortest\
    \ to longest.\n>>> sort_words(\"the quick brown fox\")\n\"fox the quick brown\"\
    */", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"one\
    \ two three four\")\n\"one two three four\"\n>>> sort_words(\"one two three four\
    \ five\")\n\"one two three four five\"\n>>> sort_words(\"one two three four five\
    \ six\")\n\"one two three four five six\"\n>>> sort_words(\"one two three four\
    \ five six seven\")\n\"one two three four five six seven\"\n>>> sort_words(\"\
    one two three four five six seven eight\")\n\"one two three four five six seven\
    \ eight\"\n>>> sort_words(\"one two three four five six seven eight nine\")\n\"\
    one two three four five six seven eight nine\"\n>>> sort_words(\"one two three\
    \ four five six seven eight nine ten\")\n\"one two three four five six seven eight\
    \ nine ten\"\n>>> sort_words(\"one two three four five six seven eight nine ten\
    \ eleven\")\n\"one two three four five six seven eight nine ten eleven\"\n>>>\
    \ sort_words(\"one two three four five six seven eight nine ten eleven twelve\"\
    )\n\"one two three four five six seven eight nine ten eleven twelve\"\n>>> sort_words(\"\
    one two three four five six seven eight nine ten eleven twelve thirteen\")\n\"\
    one two three four five six seven eight nine ten eleven twelve thirteen\"\n>>>\
    \ sort_words(\"one two three four five six seven eight nine ten eleven twelve\
    \ thirteen fourteen\")\n\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen\"\n>>> sort_words(\"one two three four five six seven\
    \ eight nine ten eleven twelve thirteen fourteen fifteen\")\n\"one", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, [\"zero\", \"one\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers from 'zero' to 'nine'.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    three one five\")\n\"one three five\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers_array\
    \ = explode(\" \", $numbers);\n    $numbers_array = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers_array);\n    sort($numbers_array);\n    $numbers_array\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 0:\n                return 'zero';\n            case 1:\n                return\
    \ 'one';\n            case 2:\n                return 'two';\n            case\
    \ 3:\n                return 'three';\n            case 4:\n                return\
    \ 'four';\n            case 5:\n                return 'five';\n            case\
    \ 6:\n                return 'six';\n            case 7:\n                return\
    \ 'seven';\n            case 8:\n                return 'eight';\n           \
    \ case 9:\n                return 'nine';\n        }\n    }, $numbers_array);\n\
    \    return implode(\" \", $numbers_array);\n}\n\n/* Input is a string of words\
    \ separated by spaces.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_words(\"one two three four five\")\n\"one two three four five\"\n>>>\
    \ sort_words(\"one two three four five six seven eight nine ten\")\n\"one two\
    \ three four five six seven eight nine ten\"\n>>> sort_words(\"one two three four\
    \ five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen\
    \ seventeen eighteen nineteen twenty\")\n\"one two three four five six seven eight\
    \ nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen\
    \ nineteen twenty\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'zero' => 0,\n\
    \            'one' => 1,\n            'two' => 2,\n            'three' => 3,\n\
    \            'four' => 4,\n            'five' => 5,\n            'six' => 6,\n\
    \            'seven' => 7,\n            'eight' => 8,\n            'nine' => 9,\n\
    \        ][$number];\n    }, $numbers);\n    sort($numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"fox the quick brown\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\
    \t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\
    \t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\
    \t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\
    \t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return strlen($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ the words sorted by length.\n>>> sort_words(\"one two three four\")\n\"one two\
    \ four three\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers separated by a comma.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3,1,5\")\n\"1,3,5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated by\
    \ spaces.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"I am\
    \ a cat\")\n\"I a am cat\"*/", "    $numbers = explode(\" \", $numbers);\n   \
    \ $numbers = array_map(function($number) {\n        return $number == 'zero' ?\
    \ 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 : $number\
    \ == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number == 'seven'\
    \ ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : null;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ $number == 0 ? 'zero' : $number == 1 ? 'one' : $number == 2 ? 'two' : $number\
    \ == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ? 'five' : $number ==\
    \ 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight' : $number == 9 ?\
    \ 'nine' : null;\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\
    \n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers\
    \ = explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    $number = str_replace(\"zero\", \"0\", $number);\n\t\t$number = str_replace(\"\
    one\", \"1\", $number);\n\t\t$number = str_replace(\"two\", \"2\", $number);\n\
    \t\t$number = str_replace(\"three\", \"3\", $number);\n\t\t$number = str_replace(\"\
    four\", \"4\", $number);\n\t\t$number = str_replace(\"five\", \"5\", $number);\n\
    \t\t$number = str_replace(\"six\", \"6\", $number);\n\t\t$number = str_replace(\"\
    seven\", \"7\", $number);\n\t\t$number = str_replace(\"eight\", \"8\", $number);\n\
    \t\t$number = str_replace(\"nine\", \"9\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\t$number = str_replace(\"0\", \"zero\", $number);\n\t\t$number = str_replace(\"\
    1\", \"one\", $number);\n\t\t$number = str_replace(\"2\", \"two\", $number);\n\
    \t\t$number = str_replace(\"3\", \"three\", $number);\n\t\t$number = str_replace(\"\
    4\", \"four\", $number);\n\t\t$number = str_replace(\"5\", \"five\", $number);\n\
    \t\t$number = str_replace(\"6\", \"six\", $number);\n\t\t$number = str_replace(\"\
    7\", \"seven\", $number);\n\t\t$number = str_replace(\"8\", \"eight\", $number);\n\
    \t\t$number = str_replace(\"9\", \"nine\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of\
    \ numbers separated by spaces.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/*\
    \ Input is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase\
    \ 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase\
    \ 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase\
    \ 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase\
    \ 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\t\
    case 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t\
    $numbers = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase 0:\n\
    \t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\
    \t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\
    \t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\
    \t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\
    \t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_by_length(\"I am a dog\")\n\"I a am dog\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n    },\
    \ $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words.\nReturn the string with words sorted from shortest to longest.\n>>>\
    \ sort_words(\"one two three four five\")\n\"one two three four five\"\n>>> sort_words(\"\
    one two three four five six seven eight nine ten\")\n\"one two three four five\
    \ six seven eight nine ten\"\n>>> sort_words(\"one two three four five six seven\
    \ eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen\
    \ nineteen twenty\")\n\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\"\
    \n>>> sort_words(\"one two three four five six seven eight nine ten eleven twelve\
    \ thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty twentyone\
    \ twentytwo twentythree twentyfour twentyfive twentysix twentyseven twentyeight\
    \ twentynine thirty\")\n\"one two three four five six seven eight nine ten eleven\
    \ twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\
    \ twentyone twentytwo twentythree twentyfour twentyfive twentysix twentyseven\
    \ twentyeight twentynine thirty\"\n>>> sort_words(\"one two three four five six\
    \ seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen\
    \ eighteen nineteen twenty twentyone twentytwo twentythree twentyfour twentyfive\
    \ twentysix twentyseven twentyeight twentynine thirty thirtyone thirtytwo thirtythree\
    \ thirtyfour thirtyfive thirtysix thirtyseven thirtyeight thirtynine forty\")\n\
    \"one two three four five six seven eight nine ten eleven twelve thirteen fourteen\
    \ fifteen sixteen seventeen eighteen nineteen twenty twentyone twentytwo twentythree\
    \ twentyfour twentyfive twentysix twentyseven twentyeight twentynine thirty thirtyone\
    \ thirtytwo thirtythree thirtyfour thirtyfive thirtysix thirtyseven thirtyeight\
    \ thirtynine forty\"\n>>> sort_words(\"one two three four five six", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return convert_number($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}", "    $numbers =\
    \ explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n  \
    \      return array_search($number, [\"zero\", \"one\", \"two\", \"three\", \"\
    four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with words\
    \ sorted from smallest to largest.\n>>> sort_words(\"one two three\")\n\"one three\
    \ two\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with the numbers sorted from\
    \ smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers\
    \ = explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    return array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_words(\"the quick brown fox\")\n\"the fox quick brown\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"the quick brown fox jumps over the\
    \ lazy dog\")\n\"the dog fox the lazy over jumps quick brown\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, [\"zero\", \"one\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers and operators.\nReturn the\
    \ result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>> calculate(\"1 +\
    \ 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"1 + 2 *\
    \ 3 / 4 - 5\")\n-3.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6\")\n-2.5\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7\")\n12.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7\
    \ / 8\")\n12.625\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9\")\n3.625\n\
    >>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10\")\n13.625\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11\")\n143.625\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12\")\n119.6875\n>>> calculate(\"1 +\
    \ 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13\")\n106.6875\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13 + 14\")\n120.6875\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ str_replace([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of characters.\nReturn the string with the characters sorted from smallest to\
    \ largest.\n>>> sort_characters(\"cba\")\n\"abc\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n    },\
    \ $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'zero'\
    \ => 0,\n            'one' => 1,\n            'two' => 2,\n            'three'\
    \ => 3,\n            'four' => 4,\n            'five' => 5,\n            'six'\
    \ => 6,\n            'seven' => 7,\n            'eight' => 8,\n            'nine'\
    \ => 9,\n        ][$number];\n    }, $numbers);\n    sort($numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated by\
    \ spaces.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $num_array = array();\n    foreach ($numbers as $number) {\n        switch\
    \ ($number) {\n            case \"zero\":\n                $num_array[] = 0;\n\
    \                break;\n            case \"one\":\n                $num_array[]\
    \ = 1;\n                break;\n            case \"two\":\n                $num_array[]\
    \ = 2;\n                break;\n            case \"three\":\n                $num_array[]\
    \ = 3;\n                break;\n            case \"four\":\n                $num_array[]\
    \ = 4;\n                break;\n            case \"five\":\n                $num_array[]\
    \ = 5;\n                break;\n            case \"six\":\n                $num_array[]\
    \ = 6;\n                break;\n            case \"seven\":\n                $num_array[]\
    \ = 7;\n                break;\n            case \"eight\":\n                $num_array[]\
    \ = 8;\n                break;\n            case \"nine\":\n                $num_array[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($num_array);\n    $sorted_numbers\
    \ = array();\n    foreach ($num_array as $num) {\n        switch ($num) {\n  \
    \          case 0:\n                $sorted_numbers[] = \"zero\";\n          \
    \      break;\n            case 1:\n                $sorted_numbers[] = \"one\"\
    ;\n                break;\n            case 2:\n                $sorted_numbers[]\
    \ = \"two\";\n                break;\n            case 3:\n                $sorted_numbers[]\
    \ = \"three\";\n                break;\n            case 4:\n                $sorted_numbers[]\
    \ = \"four\";\n                break;\n            case 5:\n                $sorted_numbers[]\
    \ = \"five\";\n                break;\n            case 6:\n                $sorted_numbers[]\
    \ = \"six\";\n                break;\n            case 7:\n                $sorted_numbers[]\
    \ = \"seven\";\n                break;\n            case 8:\n                $sorted_numbers[]\
    \ = \"eight\";\n                break;\n            case 9:\n                $sorted_numbers[]\
    \ = \"nine\";\n                break;\n        }\n    }", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ strlen($number);\n    }, $numbers);\n    sort($numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words sorted from shortest to longest.\n>>> sort_words(\"\
    banana apple pear\")\n\"pear apple banana\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase\
    \ 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase\
    \ 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase\
    \ 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase\
    \ 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase\
    \ 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\
    \t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\
    \t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\
    \t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\
    \t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\
    \t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from longest to shortest\n>>> sort_by_length(\"the quick brown\
    \ fox\")\n\"quick the brown fox\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words.\nReturn the string with words sorted from\
    \ shortest to longest.\n>>> sort_words(\"I am a cat\")\n\"I a am cat\"*/", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words separated by spaces.\nReturn the string with words sorted from shortest\
    \ to longest.\n>>> sort_words(\"the quick brown fox\")\n\"fox the quick brown\"\
    */", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"one two three four five\")\n\"one two three four\
    \ five\"\n>>> sort_words(\"one two three four five six seven eight nine\")\n\"\
    one two three four five six seven eight nine\"\n>>> sort_words(\"one two three\
    \ four five six seven eight nine ten\")\n\"one two three four five six seven eight\
    \ nine ten\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\t$number = str_replace(\"zero\", \"0\", $number);\n\t\t$number = str_replace(\"\
    one\", \"1\", $number);\n\t\t$number = str_replace(\"two\", \"2\", $number);\n\
    \t\t$number = str_replace(\"three\", \"3\", $number);\n\t\t$number = str_replace(\"\
    four\", \"4\", $number);\n\t\t$number = str_replace(\"five\", \"5\", $number);\n\
    \t\t$number = str_replace(\"six\", \"6\", $number);\n\t\t$number = str_replace(\"\
    seven\", \"7\", $number);\n\t\t$number = str_replace(\"eight\", \"8\", $number);\n\
    \t\t$number = str_replace(\"nine\", \"9\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\t$number = str_replace(\"0\", \"zero\", $number);\n\t\t$number = str_replace(\"\
    1\", \"one\", $number);\n\t\t$number = str_replace(\"2\", \"two\", $number);\n\
    \t\t$number = str_replace(\"3\", \"three\", $number);\n\t\t$number = str_replace(\"\
    4\", \"four\", $number);\n\t\t$number = str_replace(\"5\", \"five\", $number);\n\
    \t\t$number = str_replace(\"6\", \"six\", $number);\n\t\t$number = str_replace(\"\
    7\", \"seven\", $number);\n\t\t$number = str_replace(\"8\", \"eight\", $number);\n\
    \t\t$number = str_replace(\"9\", \"nine\", $number);\n\t\treturn $number;\n\t\
    }, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of\
    \ numbers from 'zero' to 'nine' and 'plus' and 'minus' signs.\nReturn the sum\
    \ of the numbers.\n>>> calculate(\"three plus five minus one\")\n7*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, [\"zero\", \"one\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words sorted by length.\n>>> sort_words(\"the quick brown\
    \ fox\")\n\"fox the brown quick\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase\
    \ 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase\
    \ 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase\
    \ 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase\
    \ 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase\
    \ 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\tswitch($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\
    \t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\
    \t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\
    \t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\
    \treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\
    \t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"fox quick the brown\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with the\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"fox the quick brown\"*/", "    $numbers = explode(\" \", $numbers);\n   \
    \ $numbers = array_map(function($number) {\n        return [$number, array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"])];\n    }, $numbers);\n    usort($numbers, function($a,\
    \ $b) {\n        return $a[1] - $b[1];\n    });\n    $numbers = array_map(function($number)\
    \ {\n        return $number[0];\n    }, $numbers);\n    return implode(\" \",\
    \ $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers_2(\"3 1 5\")\n\"1 3 5\"*/",
  "\t$numbers = explode(\" \", $numbers);\n\t$num_array = array();\n\tforeach ($numbers\
    \ as $number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\t\t\t\t$num_array[]\
    \ = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'one':\n\t\t\t\t$num_array[] = 1;\n\t\t\t\t\
    break;\n\t\t\tcase 'two':\n\t\t\t\t$num_array[] = 2;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ 'three':\n\t\t\t\t$num_array[] = 3;\n\t\t\t\tbreak;\n\t\t\tcase 'four':\n\t\t\
    \t\t$num_array[] = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'five':\n\t\t\t\t$num_array[]\
    \ = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'six':\n\t\t\t\t$num_array[] = 6;\n\t\t\t\t\
    break;\n\t\t\tcase 'seven':\n\t\t\t\t$num_array[] = 7;\n\t\t\t\tbreak;\n\t\t\t\
    case 'eight':\n\t\t\t\t$num_array[] = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\
    \t\t\t\t$num_array[] = 9;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tsort($num_array);\n\t\
    $sorted_numbers = array();\n\tforeach ($num_array as $number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\t$sorted_numbers[] = 'zero';\n\t\t\t\tbreak;\n\t\t\t\
    case 1:\n\t\t\t\t$sorted_numbers[] = 'one';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\
    \t\t\t$sorted_numbers[] = 'two';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$sorted_numbers[]\
    \ = 'three';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$sorted_numbers[] = 'four';",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words in reverse sequence.\n>>> reverse_words(\"Hello World\"\
    )\n\"World Hello\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "  $numbers = explode(\" \", $numbers);\n  $numbers =\
    \ array_map(function($number) {\n    return array_search($number, [\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\"]);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($num)\
    \ {\n\t\treturn array_search($num, array(\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($num) {\n\t\treturn array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\")[$num];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ the numbers sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"\
    1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers and operators.\nReturn the result of the calculation.\n>>> calculate(\"\
    1 + 2\")\n3\n>>> calculate(\"1 - 2\")\n-1\n>>> calculate(\"1 * 2\")\n2\n>>> calculate(\"\
    1 / 2\")\n0.5\n>>> calculate(\"1 / 0\")\n\"Can't divide by zero!\"\n>>> calculate(\"\
    1 + 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5\")\n-2.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6\")\n1.5\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7\")\n14.5\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7\
    \ / 8\")\n14.625\n>>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9\")\n5.625\n\
    >>> calculate(\"1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10\")\n15.625\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11\")\n165.625\n>>> calculate(\"1 + 2\
    \ * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12\")\n138.85416666666667\n>>> calculate(\"\
    1 + 2 * 3 / 4 - 5 + 6 * 7 / 8 - 9 + 10 * 11 / 12 - 13\")\n125.85416666666667\n\
    >>> calculate(\"1 +", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers. Return the\
    \ string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of words, separated by\
    \ spaces.\nReturn the string with the words sorted by length, from shortest to\
    \ longest.\n>>> sort_by_length(\"one two three four\")\n\"one two four three\"\
    */", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\t$number = strtolower($number);\n\
    \t\tswitch ($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\
    \t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\
    \t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\
    \t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\
    \t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\
    \t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with the numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "  $numbers\
    \ = explode(\" \", $numbers);\n  $numbers = array_map(function($number) {\n  \
    \  switch ($number) {\n      case 'zero':\n        return 0;\n      case 'one':\n\
    \        return 1;\n      case 'two':\n        return 2;\n      case 'three':\n\
    \        return 3;\n      case 'four':\n        return 4;\n      case 'five':\n\
    \        return 5;\n      case 'six':\n        return 6;\n      case 'seven':\n\
    \        return 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n\
    \        return 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\n/* Input is a string of numbers, separated by spaces.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $GLOBALS['numbers'][$number];\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, $GLOBALS['numbers']);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n$numbers = [\n    'zero' => 0,\n \
    \   'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9\n];\n\necho sort_numbers(\"three one five\");", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ numeral_to_number($number);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "\t$numbers =\
    \ explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    switch($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\
    \t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\
    \t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\
    \t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\
    \t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\
    \t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"one\
    \ two three four\")\n\"one two three four\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers and operators.\nReturn\
    \ the result of the calculation.\n>>> calculate(\"1 + 2\")\n3\n>>> calculate(\"\
    1 + 2 * 3\")\n7\n>>> calculate(\"1 + 2 * 3 - 4 / 2\")\n5\n>>> calculate(\"1 +\
    \ 2 * 3 - 4 / 2 + 8\")\n13\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4\")\n41\n\
    >>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2\")\n21\n>>> calculate(\"1 + 2 *\
    \ 3 - 4 / 2 + 8 * 4 / 2 - 16\")\n5\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4\
    \ / 2 - 16 / 2\")\n-5\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2\
    \ + 32\")\n27\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2\"\
    )\n15\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 - 64\"\
    )\n-49\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 - 64 /\
    \ 2\")\n-33\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2 + 32 / 2 -\
    \ 64 / 2 + 128\")\n95\n>>> calculate(\"1 + 2 * 3 - 4 / 2 + 8 * 4 / 2 - 16 / 2\
    \ + 32", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words reversed.\n>>> reverse_words(\"\
    This is a test\")\n\"sihT si a tset\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of letters.\nReturn the string with letters sorted from smallest to largest.\n\
    >>> sort_letters(\"cba\")\n\"abc\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/*\
    \ Input is a string of numbers from '0' to '9'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words in reverse order.\n>>> reverse_words(\"\
    hello world\")\n\"world hello\"*/", "\t$numbers = explode(\" \", $numbers);\n\t\
    $numbers = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 0 to 9.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($num) {\n        return array_search($num,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$num];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox\")\n\"fox the quick brown\"*/", "\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of characters.\nReturn the string with\
    \ all vowels removed.\n>>> remove_vowels(\"hello\")\n\"hll\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return number_to_numeral($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return number_to_number($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_word($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return numeral_to_number($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, array(\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of words separated by spaces.\nReturn the string with\
    \ words sorted from shortest to longest.\n>>> sort_words(\"the quick brown fox\"\
    )\n\"the fox quick brown\"*/", "    $numbers = explode(\" \", $numbers);\n   \
    \ $numbers = array_map('strval', $numbers);\n    $numbers = array_map('intval',\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map('strval', $numbers);\n\
    \    $numbers = implode(\" \", $numbers);\n    return $numbers;\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\"\
    \ \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return strlen($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_words(\"banana apple pear\")\n\"pear apple banana\"*/", "\t$numbers =\
    \ explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    return array_search($number, [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn [\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ][$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "  $numbers = explode(\" \", $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\n/* Input is a string of words.\nReturn the string with all\
    \ words capitalized.\n>>> capitalize_words(\"hello world\")\n\"Hello World\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 'zero' to 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"three one five\")\n\"one\
    \ three five\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array(\"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    },\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ '0' to '9'.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3510\")\n\"0135\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn number_to_int($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn int_to_number($number);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n", "  $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    $number = strtolower($number);\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 0:\n        return 'zero';\n      case 1:\n        return 'one';\n\
    \      case 2:\n        return 'two';\n      case 3:\n        return 'three';\n\
    \      case 4:\n        return 'four';\n      case 5:\n        return 'five';\n\
    \      case 6:\n        return 'six';\n      case 7:\n        return 'seven';\n\
    \      case 8:\n        return 'eight';\n      case 9:\n        return 'nine';\n\
    \    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\n/* Input is\
    \ a string of words.\nReturn the string with words sorted from shortest to longest.\n\
    >>> sort_words(\"the quick brown fox jumps over the lazy dog\")\n\"the dog fox\
    \ the lazy over quick brown jumps\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\t$number = strtolower($number);\n\t\t$number = str_replace(\"zero\", \"\
    0\", $number);\n\t\t$number = str_replace(\"one\", \"1\", $number);\n\t\t$number\
    \ = str_replace(\"two\", \"2\", $number);\n\t\t$number = str_replace(\"three\"\
    , \"3\", $number);\n\t\t$number = str_replace(\"four\", \"4\", $number);\n\t\t\
    $number = str_replace(\"five\", \"5\", $number);\n\t\t$number = str_replace(\"\
    six\", \"6\", $number);\n\t\t$number = str_replace(\"seven\", \"7\", $number);\n\
    \t\t$number = str_replace(\"eight\", \"8\", $number);\n\t\t$number = str_replace(\"\
    nine\", \"9\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\t$number = str_replace(\"0\", \"\
    zero\", $number);\n\t\t$number = str_replace(\"1\", \"one\", $number);\n\t\t$number\
    \ = str_replace(\"2\", \"two\", $number);\n\t\t$number = str_replace(\"3\", \"\
    three\", $number);\n\t\t$number = str_replace(\"4\", \"four\", $number);\n\t\t\
    $number = str_replace(\"5\", \"five\", $number);\n\t\t$number = str_replace(\"\
    6\", \"six\", $number);\n\t\t$number = str_replace(\"7\", \"seven\", $number);\n\
    \t\t$number = str_replace(\"8\", \"eight\", $number);\n\t\t$number = str_replace(\"\
    9\", \"nine\", $number);\n\t\treturn $number;\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"I am\
    \ a sentence\")\n\"I a am sentence\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn number_to_int($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn int_to_number($number);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\t$number = str_replace(['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n\
    \t\treturn $number;\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\t$number = str_replace([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], $number);\n\
    \t\treturn $number;\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n\
    /* Input is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return int_to_number($number);\n  \
    \  }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "\t$numbers = explode(\"\
    \ \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers, separated by spaces.\n\
    Return the sum of the numbers.\n>>> sum_numbers(\"one two three\")\n6*/", "  \
    \  $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers from 'zero' to 'nine'.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    three one five\")\n\"one three five\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers and letters.\nReturn the string with all numbers removed.\n\
    >>> remove_numbers(\"abc123\")\n\"abc\"\n>>> remove_numbers(\"abc123def456\")\n\
    \"abcdef\"*/", "    $nums = explode(\" \", $numbers);\n    $num_map = array(\n\
    \        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three'\
    \ => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n   \
    \     'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $nums_int\
    \ = array();\n    foreach ($nums as $num) {\n        $nums_int[] = $num_map[$num];\n\
    \    }\n    sort($nums_int);\n    $nums_str = array();\n    foreach ($nums_int\
    \ as $num) {\n        $nums_str[] = array_search($num, $num_map);\n    }\n   \
    \ return implode(\" \", $nums_str);\n}\n\n/* Input is a string of text.\nReturn\
    \ the string with all vowels removed.\n>>> remove_vowels(\"Hello world!\")\n\"\
    Hll wrld!\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers from 0 to 9.\nReturn the string\
    \ with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"\
    1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return int_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers\
    \ = explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    return array_search($number, array(\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array(\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 'zero':\n                return 0;\n         \
    \   case 'one':\n                return 1;\n            case 'two':\n        \
    \        return 2;\n            case 'three':\n                return 3;\n   \
    \         case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers from 'zero' to 'nine'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"three one five\")\n\"one\
    \ three five\"*/", "    $number_array = explode(\" \", $numbers);\n    $number_array\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $number_array);\n    sort($number_array);\n    $number_array = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $number_array);\n    return implode(\"\
    \ \", $number_array);\n}\n\n/* Input is a string of numbers and operators.\nValid\
    \ operators are '+', '-', '*', '/' and '^'.\nReturn the result of the calculation.\n\
    >>> calculate(\"1 + 2\")\n3\n>>> calculate(\"1 + 2 * 3\")\n7\n>>> calculate(\"\
    1 + 2 * 3 / 4\")\n2.5\n>>> calculate(\"1 + 2 * 3 / 4 ^ 5\")\n1.0009765625\n>>>\
    \ calculate(\"1 + 2 * 3 / 4 ^ 5 + 6\")\n7.0009765625*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 'zero':\n                return 0;\n         \
    \   case 'one':\n                return 1;\n            case 'two':\n        \
    \        return 2;\n            case 'three':\n                return 3;\n   \
    \         case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words in reverse sequence.\n>>> reverse_words(\"hello world\"\
    )\n\"world hello\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with the numbers\
    \ sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "  $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 'zero':\n        return 0;\n      case\
    \ 'one':\n        return 1;\n      case 'two':\n        return 2;\n      case\
    \ 'three':\n        return 3;\n      case 'four':\n        return 4;\n      case\
    \ 'five':\n        return 5;\n      case 'six':\n        return 6;\n      case\
    \ 'seven':\n        return 7;\n      case 'eight':\n        return 8;\n      case\
    \ 'nine':\n        return 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 0:\n   \
    \     return 'zero';\n      case 1:\n        return 'one';\n      case 2:\n  \
    \      return 'two';\n      case 3:\n        return 'three';\n      case 4:\n\
    \        return 'four';\n      case 5:\n        return 'five';\n      case 6:\n\
    \        return 'six';\n      case 7:\n        return 'seven';\n      case 8:\n\
    \        return 'eight';\n      case 9:\n        return 'nine';\n    }\n  }, $numbers);\n\
    \  return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 0 to 9.\nReturn the string with numbers sorted from smallest to largest\n>>>\
    \ sort_numbers(\"3578\")\n\"2357\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from largest to smallest.\n>>> sort_numbers_desc(\"\
    three one five\")\n\"five three one\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"I am a sentence\")\n\"I a am sentence\"\
    */", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return strlen($num);\n    }, $numbers);\n    sort($numbers);\n  \
    \  return implode(\" \", $numbers);\n}\n\n/* Input is a string of characters.\n\
    Return the string with the characters in reverse order.\n>>> reverse_string(\"\
    Hello World\")\n\"dlroW olleH\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($num)\
    \ {\n        $num = strtolower($num);\n        switch ($num) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($num) {\n        switch\
    \ ($num) {\n            case 0:\n                return 'zero';\n            case\
    \ 1:\n                return 'one';\n            case 2:\n                return\
    \ 'two';\n            case 3:\n                return 'three';\n            case\
    \ 4:\n                return 'four';\n            case 5:\n                return\
    \ 'five';\n            case 6:\n                return 'six';\n            case\
    \ 7:\n                return 'seven';\n            case 8:\n                return\
    \ 'eight';\n            case 9:\n                return 'nine';\n        }\n \
    \   }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers separated by spaces.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return strlen($number);\n    }, $numbers);\n    sort($numbers);\n   \
    \ return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from largest to smallest.\n\
    >>> sort_numbers_desc(\"three one five\")\n\"five three one\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        $number = strtolower($number);\n        switch ($number) {\n        \
    \    case 'zero':\n                return 0;\n            case 'one':\n      \
    \          return 1;\n            case 'two':\n                return 2;\n   \
    \         case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\"\
    \ \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/*\
    \ Input is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 'zero':\n                return 0;\n         \
    \   case 'one':\n                return 1;\n            case 'two':\n        \
    \        return 2;\n            case 'three':\n                return 3;\n   \
    \         case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"banana apple pear\")\n\"apple pear\
    \ banana\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map('word_to_number', $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map('number_to_word', $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers separated by spaces.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $number = str_replace(\"zero\", \"0\", $number);\n        $number\
    \ = str_replace(\"one\", \"1\", $number);\n        $number = str_replace(\"two\"\
    , \"2\", $number);\n        $number = str_replace(\"three\", \"3\", $number);\n\
    \        $number = str_replace(\"four\", \"4\", $number);\n        $number = str_replace(\"\
    five\", \"5\", $number);\n        $number = str_replace(\"six\", \"6\", $number);\n\
    \        $number = str_replace(\"seven\", \"7\", $number);\n        $number =\
    \ str_replace(\"eight\", \"8\", $number);\n        $number = str_replace(\"nine\"\
    , \"9\", $number);\n        return $number;\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = str_replace(\"\
    0\", \"zero\", $number);\n        $number = str_replace(\"1\", \"one\", $number);\n\
    \        $number = str_replace(\"2\", \"two\", $number);\n        $number = str_replace(\"\
    3\", \"three\", $number);\n        $number = str_replace(\"4\", \"four\", $number);\n\
    \        $number = str_replace(\"5\", \"five\", $number);\n        $number = str_replace(\"\
    6\", \"six\", $number);\n        $number = str_replace(\"7\", \"seven\", $number);\n\
    \        $number = str_replace(\"8\", \"eight\", $number);\n        $number =\
    \ str_replace(\"9\", \"nine\", $number);\n        return $number;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox jumps over the lazy dog\")\n\"the dog fox the lazy over jumps\
    \ quick brown\"*/", "  $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array_search($number, array(\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    return array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\")[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers\
    \ = explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    switch ($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\
    \t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\
    \t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\
    \t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\
    \t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\
    \t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox\")\n\"fox the quick brown\"*/", "    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words sorted from shortest to longest.\n>>> sort_words(\"\
    the quick brown fox jumps over the lazy dog\")\n\"the dog fox the lazy over quick\
    \ brown jumps\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn str_replace([\"zero\", \"one\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\", \"seven\", \"eight\", \"nine\"], [0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9], $number);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn str_replace([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], $number);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with the numbers sorted from smallest\
    \ to largest.\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ str_replace(['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ str_replace([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "  $numbers = explode(\" \", $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of characters.\nReturn the string with all vowels removed.\n\
    >>> remove_vowels(\"hello\")\n\"hll\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($number) {\n\t\treturn array_search($number, array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\t}, $numbers);\n\treturn\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers.\nReturn the string with numbers sorted from\
    \ smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers\
    \ = explode(\" \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\t\
    return array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from smallest to largest.\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn str_replace(array(\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"), array(0, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9), $number);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn str_replace(array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), array(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"), $number);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by spaces.\nReturn the string with\
    \ the numbers sorted from smallest to largest.\n>>> sort_numbers(\"3 1 5\")\n\"\
    1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase\
    \ 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase\
    \ 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase\
    \ 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase\
    \ 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\t\
    case 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t\
    $numbers = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\
    \t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\
    \t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\
    \t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\
    \t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\
    \t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn\
    \ the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($num) {\n        return str_replace([\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $num);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($num) {\n        return str_replace([0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"], $num);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers, separated\
    \ by spaces.\nReturn the sum of the numbers.\n>>> sum_numbers(\"one two three\"\
    )\n6\n>>> sum_numbers(\"one two three four\")\n10\n>>> sum_numbers(\"one one\"\
    )\n2\n>>> sum_numbers(\"one zero one\")\n2*/", "    $numbers = explode(\" \",\
    \ $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\t\
    \t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\
    \t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\
    \t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\
    \treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\
    \t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\
    \t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\
    \t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\
    \t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\
    \t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\
    \t\t}\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\n/* Input is a\
    \ string of numbers.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of letters.\nReturn the string with\
    \ the letters sorted from smallest to largest.\n>>> sort_letters(\"cba\")\n\"\
    abc\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $number = str_replace(\"zero\", \"0\", $number);\n        $number\
    \ = str_replace(\"one\", \"1\", $number);\n        $number = str_replace(\"two\"\
    , \"2\", $number);\n        $number = str_replace(\"three\", \"3\", $number);\n\
    \        $number = str_replace(\"four\", \"4\", $number);\n        $number = str_replace(\"\
    five\", \"5\", $number);\n        $number = str_replace(\"six\", \"6\", $number);\n\
    \        $number = str_replace(\"seven\", \"7\", $number);\n        $number =\
    \ str_replace(\"eight\", \"8\", $number);\n        $number = str_replace(\"nine\"\
    , \"9\", $number);\n        return $number;\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = str_replace(\"\
    0\", \"zero\", $number);\n        $number = str_replace(\"1\", \"one\", $number);\n\
    \        $number = str_replace(\"2\", \"two\", $number);\n        $number = str_replace(\"\
    3\", \"three\", $number);\n        $number = str_replace(\"4\", \"four\", $number);\n\
    \        $number = str_replace(\"5\", \"five\", $number);\n        $number = str_replace(\"\
    6\", \"six\", $number);\n        $number = str_replace(\"7\", \"seven\", $number);\n\
    \        $number = str_replace(\"8\", \"eight\", $number);\n        $number =\
    \ str_replace(\"9\", \"nine\", $number);\n        return $number;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"I am\
    \ a sentence\")\n\"I a am sentence\"*/", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers separated by a space.\nReturn the string\
    \ with the numbers sorted from largest to smallest.\n>>> sort_numbers_desc(\"\
    3 1 5\")\n\"5 3 1\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"hello world\")\n\"world hello\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return $number === 'zero' ? 0 :\n            $number === 'one' ? 1 :\n\
    \            $number === 'two' ? 2 :\n            $number === 'three' ? 3 :\n\
    \            $number === 'four' ? 4 :\n            $number === 'five' ? 5 :\n\
    \            $number === 'six' ? 6 :\n            $number === 'seven' ? 7 :\n\
    \            $number === 'eight' ? 8 :\n            $number === 'nine' ? 9 :\n\
    \            $number;\n    }, $numbers);\n    sort($numbers);\n    $numbers =\
    \ array_map(function($number) {\n        return $number === 0 ? 'zero' :\n   \
    \         $number === 1 ? 'one' :\n            $number === 2 ? 'two' :\n     \
    \       $number === 3 ? 'three' :\n            $number === 4 ? 'four' :\n    \
    \        $number === 5 ? 'five' :\n            $number === 6 ? 'six' :\n     \
    \       $number === 7 ? 'seven' :\n            $number === 8 ? 'eight' :\n   \
    \         $number === 9 ? 'nine' :\n            $number;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words separated by spaces.\nReturn the string with words sorted from shortest\
    \ to longest.\n>>> sort_words(\"hello world\")\n\"world hello\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 'zero':\n                return 0;\n         \
    \   case 'one':\n                return 1;\n            case 'two':\n        \
    \        return 2;\n            case 'three':\n                return 3;\n   \
    \         case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words sorted\
    \ from shortest to longest.\n>>> sort_words(\"one two three four five\")\n\"one\
    \ two three four five\"\n>>> sort_words(\"one two three four five six seven eight\
    \ nine ten\")\n\"one two three four five six seven eight nine ten\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, array(\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of words separated by spaces.\nReturn\
    \ the string with the words reversed.\n>>> reverse_words(\"hello world\")\n\"\
    world hello\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array(\"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    },\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers separated\
    \ by spaces.\nReturn the string with numbers sorted from smallest to largest\n\
    >>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace(['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers, separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\n            'number' => $number,\n\
    \            'value' => [\n                'zero' => 0,\n                'one'\
    \ => 1,\n                'two' => 2,\n                'three' => 3,\n        \
    \        'four' => 4,\n                'five' => 5,\n                'six' =>\
    \ 6,\n                'seven' => 7,\n                'eight' => 8,\n         \
    \       'nine' => 9,\n            ][$number]\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    return implode(\" \", array_map(function($number) {\n        return\
    \ $number['number'];\n    }, $numbers));\n}\n\n/* Input is a string of words separated\
    \ by spaces.\nReturn the string with the words sorted by length, alphabetically\
    \ if they are the same length.\n>>> sort_words(\"the quick brown fox\")\n\"fox\
    \ quick the brown\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($number) {\n\t\treturn array_search($number, [\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words.\nReturn the string with words sorted from shortest to\
    \ longest.\n>>> sort_words(\"the quick brown fox jumps over the lazy dog\")\n\"\
    the dog fox the lazy over jumps quick brown\"*/", "\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\n/* Input is a string of numbers from 'zero' to 'nine' and 'plus' and 'minus'\
    \ signs.\nReturn the sum of the numbers.\n>>> calculate(\"one plus one\")\n2\n\
    >>> calculate(\"one plus one minus one\")\n1\n>>> calculate(\"two plus two minus\
    \ one\")\n3\n>>> calculate(\"zero plus eight\")\n8\n>>> calculate(\"nine minus\
    \ nine\")\n0\n>>> calculate(\"one plus four minus two\")\n3\n>>> calculate(\"\
    nine minus three plus two\")\n8\n>>> calculate(\"one plus four times two minus\
    \ two\")\n6\n>>> calculate(\"nine minus one times two plus two\")\n8\n>>> calculate(\"\
    zero plus eight divi", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from largest to smallest.\n>>> sort_numbers_desc(\"\
    3 1 5\")\n\"5 3 1\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($num) {\n\t\tswitch ($num) {\n\t\t\tcase 'zero':\n\t\t\t\t\
    return 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn\
    \ 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn\
    \ 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn\
    \ 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn\
    \ 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($num) {\n\t\tswitch ($num) {\n\t\t\tcase 0:\n\t\
    \t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\
    \t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\
    \t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\
    \t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\
    \t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 'zero' to 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"three one five\")\n\"one\
    \ three five\"*/", "  $numbers_array = explode(\" \", $numbers);\n  $numbers_array\
    \ = array_map(function($number) {\n    switch ($number) {\n      case 'zero':\n\
    \        return 0;\n      case 'one':\n        return 1;\n      case 'two':\n\
    \        return 2;\n      case 'three':\n        return 3;\n      case 'four':\n\
    \        return 4;\n      case 'five':\n        return 5;\n      case 'six':\n\
    \        return 6;\n      case 'seven':\n        return 7;\n      case 'eight':\n\
    \        return 8;\n      case 'nine':\n        return 9;\n    }\n  }, $numbers_array);\n\
    \  sort($numbers_array);\n  $numbers_array = array_map(function($number) {\n \
    \   switch ($number) {\n      case 0:\n        return 'zero';\n      case 1:\n\
    \        return 'one';\n      case 2:\n        return 'two';\n      case 3:\n\
    \        return 'three';\n      case 4:\n        return 'four';\n      case 5:\n\
    \        return 'five';\n      case 6:\n        return 'six';\n      case 7:\n\
    \        return 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n\
    \        return 'nine';\n    }\n  }, $numbers_array);\n  return implode(\" \"\
    , $numbers_array);\n}\n\n/* Input is a string of words separated by spaces.\n\
    Return the string with words sorted from shortest to longest.\n>>> sort_words(\"\
    one two three four five\")\n\"one two three four five\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/*\
    \ Input is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\"\
    \ \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn str_replace([\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n\t}, $numbers);\n\
    \tsort($numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"], $number);\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of words.\nReturn\
    \ the string with words sorted from shortest to longest.\n>>> sort_words(\"the\
    \ quick brown fox\")\n\"fox the quick brown\"*/", "    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of words separated by spaces.\nReturn the string with words in reverse\
    \ order.\n>>> reverse_words(\"Hello world\")\n\"world Hello\"*/", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, [\"zero\", \"one\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/",
  "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, array(\"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    },\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the\
    \ string with numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1\
    \ 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map('strtolower',\
    \ $numbers);\n\t$numbers = array_map('number_to_digit', $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map('digit_to_number', $numbers);\n\treturn implode(\" \",\
    \ $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers =\
    \ array_map(function($number) {\n        return array_search($number, array(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers.\n\
    Return the string with numbers sorted from smallest to largest\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers =\
    \ array_map(function($number) {\n\t\treturn array_search($number, [\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\"]);\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n\t}, $numbers);\n\treturn implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers.\nReturn the string with\
    \ numbers sorted from smallest to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3\
    \ 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine']);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of lowercase letters.\nReturn the string with letters sorted from smallest to\
    \ largest.\n>>> sort_letters(\"cba\")\n\"abc\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n    },\
    \ $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input is a string\
    \ of words separated by spaces.\nReturn the string with the words sorted by length,\
    \ shortest first.\n>>> sort_by_length(\"the quick brown fox\")\n\"fox the brown\
    \ quick\"*/", "\t$numbers = explode(\" \", $numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase\
    \ 'one':\n\t\t\t\treturn 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase\
    \ 'three':\n\t\t\t\treturn 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase\
    \ 'five':\n\t\t\t\treturn 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase\
    \ 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\t\
    case 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t\
    $numbers = array_map(function($number) {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\
    \t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\
    \t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\
    \t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\
    \t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\
    \t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\n/* Input is a string of numbers from\
    \ 'zero' to 'nine'.\nValid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\nReturn the string with numbers\
    \ sorted from smallest to largest\n>>> sort_numbers(\"three one five\")\n\"one\
    \ three five\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return int_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch($number) {\n            case 'zero':\n                return 0;\n\
    \            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\n/* Input\
    \ is a string of numbers.\nReturn the string with numbers sorted from smallest\
    \ to largest\n>>> sort_numbers(\"3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array_search($number, array(\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"));\n    }, $numbers);\n  \
    \  sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\")[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with the numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\n/* Input is a string of numbers separated by spaces.\n\
    Return the string with numbers sorted from smallest to largest.\n>>> sort_numbers(\"\
    3 1 5\")\n\"1 3 5\"*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

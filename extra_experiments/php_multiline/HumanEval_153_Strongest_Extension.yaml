name: HumanEval_153_Strongest_Extension
language: php
prompt: "<?php\n/* You will be given the name of a class (a string) and an array of\
  \ extensions.\nThe extensions are to be used to load additional classes to the class.\
  \ The\nstrength of the extension is as follows: Let CAP be the number of the uppercase\n\
  letters in the extension's name, and let SM be the number of lowercase letters \n\
  in the extension's name, the strength is given by the fraction CAP - SM. \nYou should\
  \ find the strongest extension and return a string in this \nformat: ClassName.StrongestExtensionName.\n\
  If there are two or more extensions with the same strength, you should\nchoose the\
  \ one that comes first in the array.\nFor example, if you are given \"Slices\" as\
  \ the class and an array of the\nextensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
  \ then you should\nreturn 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest\
  \ extension \n(its strength is -1).\nExample:\n>>> Strongest_Extension(\"my_class\"\
  , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"*/\nfunction Strongest_Extension($class_name,\
  \ $extensions) {\n"
tests: "function candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
  , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"\
  zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\"\
  , \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
  )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !==\
  \ \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"\
  Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $ext_strength = [];\n    foreach ($extensions as $ext) {\n    \
    \    $ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n    }\n    arsort($ext_strength);\n    return $class_name . '.' . key($ext_strength);\n\
    }\n\n/*", "  $strength = 0;\n  $strongest_extension = '';\n  foreach ($extensions\
    \ as $extension) {\n    $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\
    \    $sm = preg_match_all('/[a-z]/', $extension, $matches);\n    $extension_strength\
    \ = $cap - $sm;\n    if ($extension_strength > $strength) {\n      $strength =\
    \ $extension_strength;\n      $strongest_extension = $extension;\n    }\n  }\n\
    \  return $class_name . '.' . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\",", "    $strongest = 0;\n    $strongest_extension = '';\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.EE\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.FF\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\"))\n\"my_class.GG\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.HH\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF", "    $strongest_extension\
    \ = $extensions[0];\n    $strongest_extension_strength = 0;\n    foreach ($extensions\
    \ as $extension) {\n        $extension_strength = 0;\n        for ($i = 0; $i\
    \ < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } elseif (ctype_lower($extension[$i]))\
    \ {\n                $extension_strength--;\n            }\n        }\n      \
    \  if ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    $result = Strongest_Extension($class_name, $extensions);\n}", "    $strongest_extension\
    \ = '';\n    $strongest_extension_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/*", "\t$strongest = 0;\n\t$strongest_extension\
    \ = \"\";\n\tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my", "\t$extensions_strength = array();\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extensions_strength[$extension] = preg_match_all('/[A-Z]/',\
    \ $extension) - preg_match_all('/[a-z]/', $extension);\n\t}\n\tarsort($extensions_strength);\n\
    \t$strongest_extension = key($extensions_strength);\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\
    \tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength\
    \ = $cap - $sm;\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strength = 0;\n    $strongest = '';\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $str = $cap - $sm;\n        if ($str > $strength) {\n            $strength\
    \ = $str;\n            $strongest = $extension;\n        }\n    }\n    return\
    \ $class_name . '.' . $strongest;\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strength\
    \ = 0;\n        $strongest = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $str = $cap - $sm;\n            if ($str > $strength) {\n                $strength\
    \ = $str;\n                $strongest = $extension;\n            }\n        }\n\
    \        return $class_name . '.' . $strongest;\n    }\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strength\
    \ = 0;\n        $strongest = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $str = $cap - $sm;\n            if ($str > $strength) {\n                $strength\
    \ = $str;\n                $strongest = $extension;\n            }\n        }\n\
    \        return $class_", "\t$ext_strength = array();\n\tforeach ($extensions\
    \ as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\"\
    , \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.FF\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"\
    my_class.FF\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\"\
    , \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\"))\n\"\
    my_class.JJ\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\", \"KK\"))\n\"my_class.JJ\"\
    \n", "\t$strength = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t\
    $sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$extension_strength = $cap\
    \ - $sm;\n\t\tif ($extension_strength > $strength) {\n\t\t\t$strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strength = 0;\n    $strongest = '';\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $ext_strength = $cap - $sm;\n        if ($ext_strength > $strength) {\n\
    \            $strength = $ext_strength;\n            $strongest = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest;\n}\n\n/*\n\n*/\n\
    if(!function_exists('stringToArray'))\n{\n\tfunction stringToArray($str)\n\t{\n\
    \t\treturn explode(' ', $str);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('arrayToString'))\n\
    {\n\tfunction arrayToString($arr)\n\t{\n\t\treturn implode(' ', $arr);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('stringToArray2'))\n{\n\tfunction stringToArray2($str)\n\
    \t{\n\t\treturn preg_split('/\\s+/', $str);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('arrayToString2'))\n\
    {\n\tfunction arrayToString2($arr)\n\t{\n\t\treturn implode(' ', $arr);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('stringToArray3'))\n{\n\tfunction stringToArray3($str)\n\
    \t{\n\t\treturn preg_split('/\\s+/', $str, -1, PREG_SPLIT_NO_EMPTY);\n\t}\n}\n\
    \n/*\n\n*/\nif(!function_exists('arrayToString3'))\n{\n\tfunction arrayToString3($arr)\n\
    \t{\n\t\treturn implode(' ', $arr);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('stringToArray4'))\n\
    {\n", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength = 0;\n\t\
    foreach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\t\tfor ($i\
    \ = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"Slices\", \"Slices\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\", \"Slices\"\
    , \"Slices\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\",\
    \ array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\", \"Slices\", \"\
    Slices\",", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength =\
    \ 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\t\
    \tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "    $strongest = 0;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $strength = 0;\n \
    \       for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest) {\n           \
    \ $strongest = $strength;\n            $strongest_extension = $extension;\n  \
    \      }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n/*",
  "\t$strongest_extension = '';\n\t$strongest_extension_strength = 0;\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extension_strength = 0;\n\t\t$extension_strength = substr_count(strtoupper($extension),\
    \ 'A') - substr_count(strtolower($extension), 'a');\n\t\tif ($extension_strength\
    \ > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}", "    $strength = 0;\n    $strongest_extension =\
    \ \"\";\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \        $extension_strength = $cap - $sm;\n        if ($extension_strength >\
    \ $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;\n         \
    \       $strongest_extension = $extension;\n            }\n        }\n       \
    \ return $class_name . \".\" . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif\
    \ (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;", "\t$strongest\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\
    \t\t\t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strongest) {\n\t\t\t$strongest = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", " \
    \ $extensions_strength = [];\n  foreach ($extensions as $extension) {\n    $extensions_strength[$extension]\
    \ = 0;\n    for ($i = 0; $i < strlen($extension); $i++) {\n      if (ctype_upper($extension[$i]))\
    \ {\n        $extensions_strength[$extension]++;\n      } else {\n        $extensions_strength[$extension]--;\n\
    \      }\n    }\n  }\n  $strongest_extension = array_search(max($extensions_strength),\
    \ $extensions_strength);\n  return $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    ))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SE", "\t\
    $strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$CAP = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$SM = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $CAP - $SM;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\n/*", "  \
    \  $strength = 0;\n    $strongest = '';\n    foreach ($extensions as $extension)\
    \ {\n        $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n       \
    \ $sm = preg_match_all('/[a-z]/', $extension, $matches);\n        $current_strength\
    \ = $cap - $sm;\n        if ($current_strength > $strength) {\n            $strength\
    \ = $current_strength;\n            $strongest = $extension;\n        }\n    }\n\
    \    return $class_name . '.' . $strongest;\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strength\
    \ = 0;\n        $strongest = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $current_strength = $cap - $sm;\n            if ($current_strength > $strength)\
    \ {\n                $strength = $current_strength;\n                $strongest\
    \ = $extension;\n            }\n        }\n        return $class_name . '.' .\
    \ $strongest;\n    }\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strength\
    \ = 0;\n        $strongest = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $current_strength = $cap - $sm;\n            if ($current_strength > $strength)\
    \ {\n                $strength = $current_strength;\n                $strong",
  "    $ext_strength = [];\n    foreach ($extensions as $ext) {\n        $ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n    }\n\
    \    arsort($ext_strength);\n    return $class_name . '.' . key($ext_strength);\n\
    }\n\n/*\n\n*/\nif(!function_exists('show'))\n{\n    function show($message)\n\
    \    {\n        echo \"<pre>\";\n        print_r($message);\n        echo \"</pre>\"\
    ;\n    }\n}\n/*\n\n*/\nif(!function_exists('show_code'))\n{\n    function show_code($message)\n\
    \    {\n        echo \"<pre>\";\n        print_r($message);\n        echo \"</pre>\"\
    ;\n    }\n}\n/*\n\n*/\nif(!function_exists('dd'))\n{\n    function dd($message)\n\
    \    {\n        echo \"<pre>\";\n        print_r($message);\n        echo \"</pre>\"\
    ;\n        die();\n    }\n}\n\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"));", "\t$strongest = 0;\n\t$strongest_extension = '';\n\
    \tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\
    \t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\
    \tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n * Test code\n */\nassert(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")) == \"Slices.SErviNGSliCes\"\
    );\nassert(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\")) ==\
    \ \"my_class.AA\");\nassert(Strongest_Extension(\"my_class\", array(\"AA\", \"\
    Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_", "\t$ext_strength = [];\n\
    \tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    $strongest_ext = array_keys($ext_strength)[0];\n\treturn $class_name . '.' . $strongest_ext;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"Slices\", \"Slices\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\", \"Slices\"\
    , \"Slices\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\",\
    \ array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\", \"Slices\", \"\
    Slices\", \"Slices\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"Slices\", \"Slices\", \"\
    Slices\", \"Slices\", \"Slices\"))\n\"Slices.SErviNGSliC", "    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \    }\n    arsort($extensions_strength);\n    return $class_name . '.' . key($extensions_strength);\n\
    }\n\n/*\n\n*/\nif(!function_exists('string_to_ascii'))\n{\n\tfunction string_to_ascii($string)\n\
    \t{\n\t\t$ascii = NULL;\n\t\t\n\t\tfor ($i = 0; $i < strlen($string); $i++)\n\t\
    \t{\n\t\t\t$ascii += ord($string[$i]);\n\t\t}\n\t\t\n\t\treturn($ascii);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('string_to_ascii'))\n{\n\tfunction string_to_ascii($string)\n\
    \t{\n\t\t$ascii = NULL;\n\t\t\n\t\tfor ($i = 0; $i < strlen($string); $i++)\n\t\
    \t{\n\t\t\t$ascii += ord($string[$i]);\n\t\t}\n\t\t\n\t\treturn($ascii);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('string_to_ascii'))\n{\n\tfunction string_to_ascii($string)\n\
    \t{\n\t\t$ascii = NULL;\n\t\t\n\t\tfor ($i = 0; $i < strlen($string); $i++)\n\t\
    \t{\n\t\t\t$ascii += ord($string[$i]);\n\t\t}\n\t\t\n\t\treturn($ascii);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('string_to_ascii'))\n{\n\tfunction string_to_ascii($string)\n\
    \t{\n\t\t$ascii = NULL;\n\t\t\n", "    $ext_strength = [];\n    foreach ($extensions\
    \ as $ext) {\n        $ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) -\
    \ preg_match_all('/[a-z]/', $ext);\n    }\n    arsort($ext_strength);\n    $strongest_ext\
    \ = key($ext_strength);\n    return $class_name . '.' . $strongest_ext;\n}\n\n\
    /*", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t\
    $sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength = $cap - $sm;\n\t\
    \tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\"))\n\"\
    Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>>\
    \ Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed", "\t$strongest_extension = \"\
    \";\n\t$strongest_strength = 0;\n\tforeach ($extensions as $extension) {\n\t\t\
    $strength = 0;\n\t\t$extension_length = strlen($extension);\n\t\tfor ($i = 0;\
    \ $i < $extension_length; $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\
    \t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\t\
    if ($strength > $strongest_strength) {\n\t\t\t$strongest_strength = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$ext_strength = array();\n\tforeach ($extensions\
    \ as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\",", "    $strongest = 0;\n    $strongest_extension = '';\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE", "    $strongest = 0;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*", "\t$strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$strength = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/',\
    \ $extension);\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\n/*", "    $extensions_strength = [];\n    foreach\
    \ ($extensions as $extension) {\n        $extensions_strength[$extension] = count(preg_grep('/[A-Z]/',\
    \ str_split($extension))) - count(preg_grep('/[a-z]/', str_split($extension)));\n\
    \    }\n    arsort($extensions_strength);\n    return $class_name . '.' . key($extensions_strength);\n\
    }\n\n/*", "    $strength = 0;\n    $strongest = '';\n    foreach ($extensions\
    \ as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\
    \        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n        $ext_strength\
    \ = $cap - $sm;\n        if ($ext_strength > $strength) {\n            $strength\
    \ = $ext_strength;\n            $strongest = $extension;\n        }\n    }\n \
    \   return $class_name . '.' . $strongest;\n}\n\n/*", "    $strongest_extension\
    \ = array_shift($extensions);\n    $strongest_extension_strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $extension_strength = strlen(preg_replace('/[^A-Z]/',\
    \ '', $extension)) - strlen(preg_replace('/[^a-z]/', '', $extension));\n     \
    \   if ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_extension_strength = $extension_strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "\t\
    $strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\n$class_name\
    \ = 'Slices';\n$extensions = ['SErviNGSliCes', 'Cheese', 'StuFfed'];\necho Strongest_Extension($class_name,\
    \ $extensions);", "    $strongest = 0;\n    $strongest_extension = '';\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest) {\n    \
    \        $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE", "    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        $extension_strength = preg_match_all('/[A-Z]/', $extension) -\
    \ preg_match_all('/[a-z]/', $extension);\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/*", "\t$strength = 0;\n\t$strongest = '';\n\
    \tforeach ($extensions as $extension) {\n\t\t$caps = preg_match_all('/[A-Z]/',\
    \ $extension);\n\t\t$smalls = preg_match_all('/[a-z]/', $extension);\n\t\t$ext_strength\
    \ = $caps - $smalls;\n\t\tif ($ext_strength > $strength) {\n\t\t\t$strength =\
    \ $ext_strength;\n\t\t\t$strongest = $extension;\n\t\t}\n\t}\n\treturn $class_name\
    \ . '.' . $strongest;\n}\n\n/*\nYou are given a string of digits. Your task is\
    \ to split the string into groups of three digits.\nThe last group can have only\
    \ one or two digits.\nExample:\n>>> Split_Digits(\"1234567890\")\n\"123 456 789\
    \ 0\"\n*/", "\t$strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\
    \t\t$sm = preg_match_all('/[a-z]/', $extension, $matches);\n\t\t$strength = $cap\
    \ - $sm;\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\
    \t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$strongest_extension = '';\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"));", "    $strongest_extension = '';\n    $strongest_strength = 0;\n\
    \    foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_strength) {\n  \
    \          $strongest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength = 0;\n\
    \tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength\
    \ = $cap - $sm;\n\t\tif ($strength > $strongest_extension_strength) {\n\t\t\t\
    $strongest_extension_strength = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$extensions_strength = [];\n\t\
    foreach ($extensions as $extension) {\n\t\t$extensions_strength[$extension] =\
    \ 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extensions_strength[$extension]++;\n\t\t\t} else {\n\t\t\t\t$extensions_strength[$extension]--;\n\
    \t\t\t}\n\t\t}\n\t}\n\t$strongest_extension = array_keys($extensions_strength,\
    \ max($extensions_strength))[0];\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", " \
    \   $strongest_extension = \"\";\n    $strongest_extension_strength = 0;\n   \
    \ foreach ($extensions as $extension) {\n        $extension_strength = 0;\n  \
    \      for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $strongest\
    \ = 0;\n    $strongest_extension = '';\n    foreach ($extensions as $extension)\
    \ {\n        $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n       \
    \ $sm = preg_match_all('/[a-z]/', $extension, $matches);\n        $strength =\
    \ $cap - $sm;\n        if ($strength > $strongest) {\n            $strongest =\
    \ $strength;\n            $strongest_extension = $extension;\n        }\n    }\n\
    \    return $class_name . '.' . $strongest_extension;\n}\n\n/*", "    $strongest\
    \ = 0;\n    $strongest_extension = '';\n    foreach ($extensions as $extension)\
    \ {\n        $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n       \
    \ $sm = preg_match_all('/[a-z]/', $extension, $matches);\n        $strength =\
    \ $cap - $sm;\n        if ($strength > $strongest) {\n            $strongest =\
    \ $strength;\n            $strongest_extension = $extension;\n        }\n    }\n\
    \    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strongest\
    \ = 0;\n        $strongest_extension = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $strength = $cap - $sm;\n            if ($strength > $strongest) {\n       \
    \         $strongest = $strength;\n                $strongest_extension = $extension;\n\
    \            }\n        }\n        return $class_name . '.' . $strongest_extension;\n\
    \    }\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension')) {\n    function\
    \ Strongest_Extension($class_name, $extensions) {\n        $strongest = 0;\n \
    \       $strongest_extension = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $strength = $cap - $sm;\n            if ($strength > $strongest) {\n", "\t$strongest\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\
    \t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\
    \t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $strongest) {\n\t\t\t\
    $strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\
    \treturn $class_name . \".\" . $strongest_extension;\n}\n\n/*\n * Test code\n\
    \ */\nassert(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\
    \ == \"my_class.AA\");\nassert(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\")) == \"Slices.SErviNGSliCes\");\nassert(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\")) == \"\
    Slices.SErviNGSliCes\");\nassert(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\")) == \"Slices.SErviNGSliCes\"\
    );\nassert(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\")) == \"Slices.SErviNGSliCes\"\
    );\nassert(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\")) == \"S", " \
    \ $strongest = 0;\n  $strongest_extension = '';\n  foreach ($extensions as $extension)\
    \ {\n    $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n    $sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n    $strength = $cap - $sm;\n    if ($strength > $strongest)\
    \ {\n      $strongest = $strength;\n      $strongest_extension = $extension;\n\
    \    }\n  }\n  return $class_name . '.' . $strongest_extension;\n}\n\n/*\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF", "\t$strength\
    \ = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension) {\n\
    \t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$extension_strength = $cap - $sm;\n\t\tif ($extension_strength\
    \ > $strength) {\n\t\t\t$strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", " \
    \   $ext_strength = [];\n    foreach ($extensions as $ext) {\n        $ext_strength[$ext]\
    \ = count(array_filter(str_split($ext), function($v) {\n            return ctype_upper($v);\n\
    \        })) - count(array_filter(str_split($ext), function($v) {\n          \
    \  return ctype_lower($v);\n        }));\n    }\n    $strongest_ext = array_keys($ext_strength,\
    \ max($ext_strength))[0];\n    return $class_name . '.' . $strongest_ext;\n}\n\
    \n/*", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t\
    $sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength = $cap - $sm;\n\t\
    \tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $extensions_strength = [];\n\tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extensions_strength[$extension]++;\n\t\t\t} else {\n\t\t\t\t$extensions_strength[$extension]--;\n\
    \t\t\t}\n\t\t}\n\t}\n\tarsort($extensions_strength);\n\t$strongest_extension =\
    \ array_keys($extensions_strength)[0];\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\"))\n\"\
    Slices.StuFfed\"\n*/", "\t$ext_strength = array();\n\tforeach ($extensions as\
    \ $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tasort($ext_strength);\n\t$strongest_ext = array_pop(array_keys($ext_strength));\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/* Test cases\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\")) . \"\\n\";\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")) . \"\\n\";\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")) . \"\\n\";\n\
    echo Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\", \"GG\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\")) . \"\\n\";\necho\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\", \"HH\", \"II\")) . \"\\n\";\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    , \"JJ\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\", \"\
    Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\", \"KK\"))\
    \ . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\", \"", "    $strongest_extension\
    \ = \"\";\n    $strongest_extension_strength = 0;\n    foreach ($extensions as\
    \ $extension) {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(',', $extensions);\n    echo Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$strongest_extension = $extensions[0];\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension = $extension;\n\t\t\t$strongest_extension_strength\
    \ = $extension_strength;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $strength = 0;\n\t$strongest = \"\";\n\tforeach ($extensions as $extension) {\n\
    \t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n\t\t$current_strength = $cap - $sm;\n\t\tif ($current_strength\
    \ > $strength) {\n\t\t\t$strength = $current_strength;\n\t\t\t$strongest = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "    $strongest = 0;\n    $strongest_extension\
    \ = \"\";\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest) {\n    \
    \        $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\
    \n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $strongest\
    \ = 0;\n    $strongest_extension = \"\";\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest) {\n            $strongest\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    echo Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$ext_strength = array();\n\tforeach ($extensions as $ext)\
    \ {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"BB\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"BB\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"BB\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"BB\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"BB\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"BB\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"BB\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"BB\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))", "    $strongest = 0;\n    $strongest_extension = '';\n  \
    \  foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*", "  $strength = -1;\n  $strongest_extension = \"\";\n  foreach ($extensions\
    \ as $extension) {\n    $cap = preg_match_all(\"/[A-Z]/\", $extension);\n    $sm\
    \ = preg_match_all(\"/[a-z]/\", $extension);\n    $current_strength = $cap - $sm;\n\
    \    if ($current_strength > $strength) {\n      $strength = $current_strength;\n\
    \      $strongest_extension = $extension;\n    }\n  }\n  return $class_name .\
    \ \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\t$extension_strength = substr_count(strtoupper($extension), \"A\") +\n\t\t\t\
    \t\t\t\t  substr_count(strtoupper($extension), \"B\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"C\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension), \"D\") +\n\t\t\
    \t\t\t\t\t  substr_count(strtoupper($extension), \"E\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"F\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension), \"G\") +\n\t\t\
    \t\t\t\t\t  substr_count(strtoupper($extension), \"H\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"I\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension), \"J\") +\n\t\t\
    \t\t\t\t\t  substr_count(strtoupper($extension), \"K\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"L\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension), \"M\") +\n\t\t\
    \t\t\t\t\t  substr_count(strtoupper($extension), \"N\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"O\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension), \"P\") +\n\t\t\
    \t\t\t\t\t  substr_count(strtoupper($extension), \"Q\") +\n\t\t\t\t\t\t\t  substr_count(strtoupper($extension),\
    \ \"R\") +\n\t\t\t\t\t\t\t  substr_count(str", "    $strongest = 0;\n    $strongest_extension\
    \ = \"\";\n    foreach ($extensions as $extension) {\n        $cap = 0;\n    \
    \    $sm = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n       \
    \     if (ctype_upper($extension[$i])) {\n                $cap++;\n          \
    \  } else {\n                $sm++;\n            }\n        }\n        $strength\
    \ = $cap - $sm;\n        if ($strength > $strongest) {\n            $strongest\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\n\
    if (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strongest = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = 0;\n    \
    \        $sm = 0;\n            for ($i = 0; $i < strlen($extension); $i++) {\n\
    \                if (ctype_upper($extension[$i])) {\n                    $cap++;\n\
    \                } else {\n                    $sm++;\n                }\n   \
    \         }\n            $strength = $cap - $sm;\n            if ($strength >\
    \ $strongest) {\n                $strongest = $strength;\n                $strongest_extension\
    \ = $extension;\n            }\n        }\n        return $class_name . \".\"\
    \ . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strongest\
    \ = 0;\n        $strongest_extension = \"\";\n        foreach ($extensions as\
    \ $extension) {\n            $cap = 0;\n            $sm = 0;\n            for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n                if (ctype_upper($extension[",
  "\t$ext_strength = [];\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\t\
    arsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\treturn $class_name\
    \ . '.' . $strongest_ext;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    )));\nprint_r(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGS", "\t$ext_strength = [];\n\t\
    foreach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    return $class_name . '.' . key($ext_strength);\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\")));\nprint_r(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\",", "\t$strongest = 0;\n\t$strongest_extension = \"\
    \";\n\tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength\
    \ = $cap - $sm;\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$ext_strength = [];\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$ext_strength[$extension] = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/',\
    \ $extension);\n\t}\n\tarsort($ext_strength);\n\t$strongest_extension = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my", "\t$ext_strength\
    \ = array();\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\t$strongest_ext = array_keys($ext_strength,\
    \ max($ext_strength))[0];\n\treturn $class_name . '.' . $strongest_ext;\n}\n\n\
    /*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"Dd\", \"EE\"))\n\"my_class.EE\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"Dd\", \"EE\", \"FF\"))\n\"my_class.EE\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.GG\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"Dd\", \"EE\", \"FF\", \"GG\", \"Hh\"))\n\"my_class.GG\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\",\
    \ \"EE\", \"FF\", \"GG\", \"Hh\", \"II\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"EE\", \"FF\", \"GG\", \"Hh\"\
    , \"II\", \"JJ\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"Dd\", \"EE\", \"FF\", \"GG\", \"Hh\", \"II\", \"JJ\",\
    \ \"KK\"))\n\"my_class.KK\"\n>>>", "    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(',', $extensions);\n    echo Strongest_Extension($class_name,\
    \ $extensions);\n}", "    $strongest = 0;\n    $strongest_extension = \"\";\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n     \
    \   $strength = $cap - $sm;\n        if ($strength > $strongest) {\n         \
    \   $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\
    echo Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$strongest\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"));", "\t$strongest\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = 0;\n\t\t$sm = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$cap++;\n\t\t\t} else {\n\
    \t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\t$strength = $cap - $sm;\n\t\tif ($strength\
    \ > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension =\
    \ $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $extensions_strength = [];\n\tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = count(preg_grep('/[A-Z]/', str_split($extension))) - count(preg_grep('/[a-z]/',\
    \ str_split($extension)));\n\t}\n\tarsort($extensions_strength);\n\treturn $class_name\
    \ . '.' . key($extensions_strength);\n}\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"));", "    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $strength = preg_match_all('/[A-Z]/',\
    \ $extension) - preg_match_all('/[a-z]/', $extension);\n        if ($strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(',', $extensions);\n    $result = Strongest_Extension($class_name,\
    \ $extensions);\n}", "  $strongest_extension = '';\n  $strongest_extension_strength\
    \ = 0;\n  foreach ($extensions as $extension) {\n    $extension_strength = 0;\n\
    \    for ($i = 0; $i < strlen($extension); $i++) {\n      if (ctype_upper($extension[$i]))\
    \ {\n        $extension_strength++;\n      } else {\n        $extension_strength--;\n\
    \      }\n    }\n    if ($extension_strength > $strongest_extension_strength)\
    \ {\n      $strongest_extension_strength = $extension_strength;\n      $strongest_extension\
    \ = $extension;\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    ))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGS", "\t$ext_strength = [];\n\tforeach ($extensions as $ext)\
    \ {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Che", "\t$ext_strength = array();\n\tforeach\
    \ ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    $strongest_ext = key($ext_strength);\n\treturn $class_name . '.' . $strongest_ext;\n\
    }\n\n/* Test cases\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"\
    , \"D\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"\
    , \"D\", \"E\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"D\", \"E\", \"F\"));\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"D\", \"E\", \"F\", \"G\"));\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"E\", \"F\", \"G\", \"H\"));\n\
    echo Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"\
    E\", \"F\", \"G\", \"H\", \"I\"));\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"));\necho\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"E\"\
    , \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"));\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"\
    , \"K\", \"L\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"D\", \"E", "\t$ext_strength = array();\n\tforeach ($extensions as\
    \ $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = array_keys($ext_strength)[0];\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"Ee\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"Ee\", \"Ff\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"Ee\", \"Ff\", \"Gg\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\"\
    , \"Ee\", \"Ff\", \"Gg\", \"Hh\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"Dd\", \"Ee\", \"Ff\", \"Gg\", \"Hh\", \"Ii\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"Dd\", \"Ee\", \"Ff\", \"Gg\", \"Hh\", \"Ii\", \"Jj\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"Dd\", \"E", "    $strongest = 0;\n\
    \    $strongest_extension = \"\";\n    foreach ($extensions as $extension) {\n\
    \        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n        $sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n        $strength = $cap - $sm;\n        if ($strength\
    \ > $strongest) {\n            $strongest = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $result = Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$strongest_extension = '';\n\t$strongest_strength = 0;\n\
    \tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\
    \t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\
    \tif ($strength > $strongest_strength) {\n\t\t\t$strongest_strength = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\n/*\n\tTests\n*/\nassert(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) == \"my_class.AA\");\nassert(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")) == \"Slices.SErviNGSliCes\"\
    );\nassert(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"StuFfed\")) == \"Slices.SErviNGSliCes\");\nassert(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    )) == \"Slices.SErviNGSliCes\");\nassert(Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    )) == \"Slices.SErviNGSliCes\");\nassert(Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"Stu", "    $strength = 0;\n    $strongest_extension = '';\n    foreach ($extensions\
    \ as $extension) {\n        $extension_strength = preg_match_all('/[A-Z]/', $extension)\
    \ - preg_match_all('/[a-z]/', $extension);\n        if ($extension_strength >\
    \ $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(!function_exists('stringToArray'))\n{\n\tfunction stringToArray($str)\n\
    \t{\n\t\t$str = str_replace(array('[',']'),'',$str);\n\t\t$str = explode(',',$str);\n\
    \t\treturn $str;\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('arrayToString'))\n\
    {\n\tfunction arrayToString($arr)\n\t{\n\t\t$str = '[';\n\t\t$str .= implode(',',$arr);\n\
    \t\t$str .= ']';\n\t\treturn $str;\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('get_string_between'))\n\
    {\n\tfunction get_string_between($string, $start, $end){\n\t\t$string = ' ' .\
    \ $string;\n\t\t$ini = strpos($string, $start);\n\t\tif ($ini == 0) return '';\n\
    \t\t$ini += strlen($start);\n\t\t$len = strpos($string, $end, $ini) - $ini;\n\t\
    \treturn substr($string, $ini, $len);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('get_string_between_all'))\n\
    {\n\tfunction get_string_between_all($string, $start, $end){\n\t\t$matches = array();\n\
    \t\t$regex = \"/$start([a-zA-Z0-9_]*)$end/\";\n", "\t$extensions_strength = [];\n\
    \tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \t}\n\tarsort($extensions_strength);\n\t$strongest_extension = key($extensions_strength);\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$strongest = 0;\n\t$strongest_extension\
    \ = '';\n\tforeach ($extensions as $extension) {\n\t\t$strength = preg_match_all('/[A-Z]/',\
    \ $extension) - preg_match_all('/[a-z]/', $extension);\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\n/*", "\t\
    $ext_strength = array();\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\t\
    arsort($ext_strength);\n\treturn $class_name . '.' . key($ext_strength);\n}\n\n\
    /* Test cases\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"\
    , \"DD\", \"EE\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\"));\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"));\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\", \"II\"));\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    , \"JJ\"));\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"\
    , \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\", \"KK\"));\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\", \"LL\"));\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"", " \
    \   $strongest_extension = \"\";\n    $strongest_extension_strength = 0;\n   \
    \ foreach ($extensions as $extension) {\n        $extension_strength = 0;\n  \
    \      $extension_strength = preg_match_all('/[A-Z]/', $extension, $matches);\n\
    \        $extension_strength -= preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \    }\n    $strongest_extension = array_search(max($extensions_strength), $extensions_strength);\n\
    \    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $extensions_strength\
    \ = array();\n        foreach ($extensions as $extension) {\n            $extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \        }\n        $strongest_extension = array_search(max($extensions_strength),\
    \ $extensions_strength);\n        return $class_name . '.' . $strongest_extension;\n\
    \    }\n}\n\n/*\n\n*/", "    $max_strength = 0;\n    $max_strength_extension =\
    \ \"\";\n    foreach ($extensions as $extension) {\n        $strength = 0;\n \
    \       for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $max_strength) {\n        \
    \    $max_strength = $strength;\n            $max_strength_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $max_strength_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"D\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"D\", \"Ee\"))\n\"my_class.Ee\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"Ee\", \"FF\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"\
    Ee\", \"FF\", \"G\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\",\
    \ array(\"AA\", \"Be\", \"CC\", \"D\", \"Ee\", \"FF\", \"G\", \"Hh\"))\n\"my_class.Hh\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"\
    Ee\", \"FF\", \"G\", \"Hh\", \"II\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"D\", \"Ee\", \"FF\", \"G\", \"Hh\"\
    , \"II\", \"J\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"my_", "\t$extensions_strength\
    \ = array();\n\tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \t}\n\tarsort($extensions_strength);\n\t$strongest_extension = array_keys($extensions_strength)[0];\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "    $strongest = 0;\n    $strongest_extension\
    \ = \"\";\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest) {\n    \
    \        $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\
    echo Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "   \
    \ $strongest = 0;\n    $strongest_extension = '';\n    foreach ($extensions as\
    \ $extension) {\n        $strength = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/',\
    \ $extension);\n        if ($strength > $strongest) {\n            $strongest\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\n*/\nif(!function_exists('stringToArray'))\n\
    {\n\tfunction stringToArray($str)\n\t{\n\t\treturn explode(' ', $str);\n\t}\n\
    }\n\n/*\n\n*/\nif(!function_exists('arrayToString'))\n{\n\tfunction arrayToString($arr)\n\
    \t{\n\t\treturn implode(' ', $arr);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('stringToArray2'))\n\
    {\n\tfunction stringToArray2($str)\n\t{\n\t\treturn preg_split('/\\s+/', $str);\n\
    \t}\n}\n\n/*\n\n*/\nif(!function_exists('arrayToString2'))\n{\n\tfunction arrayToString2($arr)\n\
    \t{\n\t\treturn implode(' ', $arr);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('stringToArray3'))\n\
    {\n\tfunction stringToArray3($str)\n\t{\n\t\treturn explode(' ', trim($str));\n\
    \t}\n}\n\n/*\n\n*/\nif(!function_exists('arrayToString3'))\n{\n\tfunction arrayToString3($arr)\n\
    \t{\n\t\treturn implode(' ', $arr);\n\t}\n}\n\n/*\n\n*/\nif(!function_exists('stringToArray4'))\n\
    {\n\tfunction stringToArray4($str)\n\t{\n\t\treturn preg_split('/\\s+/', trim($str));\n\
    \t}\n}\n\n/*", "    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\"))\n\"my_class", "\t$strongest_extension\
    \ = \"\";\n\t$strongest_extension_strength = 0;\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\
    \t\t\t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\n\n/*\n * Test code\n */\n$class_name = \"my_class\"\
    ;\n$extensions = array(\"AA\", \"Be\", \"CC\");\necho Strongest_Extension($class_name,\
    \ $extensions);", "    $strength = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $extension_strength\
    \ = $cap - $sm;\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strongest_extension = \"\";\n        $strength = 0;\n\
    \        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;\n         \
    \       $strongest_extension = $extension;\n            }\n        }\n       \
    \ return $class_name . \".\" . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif\
    \ (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strongest_extension = \"\";\n        $strength = 0;\n\
    \        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;", "    $strongest_extension\
    \ = $extensions[0];\n    $strongest_extension_strength = 0;\n    foreach ($extensions\
    \ as $extension) {\n        $extension_strength = 0;\n        for ($i = 0; $i\
    \ < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"))\n\"Slices.SErviNGSliCes\"\n*/", "    $strongest_extension = $extensions[0];\n\
    \    $strongest_extension_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strength = 0;\n    $strongest_extension = \"\"\
    ;\n    foreach ($extensions as $extension) {\n        $extension_strength = 0;\n\
    \        for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "\t$extensions_strength\
    \ = array();\n\tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extensions_strength[$extension]++;\n\t\t\t} else {\n\t\t\t\t$extensions_strength[$extension]--;\n\
    \t\t\t}\n\t\t}\n\t}\n\t$strongest_extension = array_keys($extensions_strength,\
    \ max($extensions_strength))[0];\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/* Test cases\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\")) . \"\\n\";\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\")) . \"\\n\";\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\")) . \"\\n\";\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")) . \"\\n\";\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")) . \"\\n\";\n\
    echo Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\", \"GG\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\")) . \"\\n\";\necho\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\", \"HH\", \"II\")) . \"\\n\";\necho Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    , \"JJ\")) . \"\\", "    $strongest = 0;\n    $strongest_extension = \"\";\n \
    \   foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest) {\n           \
    \ $strongest = $strength;\n            $strongest_extension = $extension;\n  \
    \      }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n", "\t$strength = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t\
    $sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$extension_strength = $cap\
    \ - $sm;\n\t\tif ($extension_strength > $strength) {\n\t\t\t$strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\"))\n\"\
    Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>>\
    \ Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"Stu", "\t$strongest = 0;\n\t$strongest_extension\
    \ = \"\";\n\tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\
    \t$strength = $cap - $sm;\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest\
    \ = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn\
    \ $class_name . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "    $strongest_extension = \"\"\
    ;\n    $strongest_extension_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(\",\", $extensions);\n    echo Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach\
    \ ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$strength = $cap - $sm;\n\
    \t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $ext_strength = [];\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext]\
    \ = substr_count(strtoupper($ext), \"A-Z\") - substr_count(strtolower($ext), \"\
    a-z\");\n\t}\n\tasort($ext_strength);\n\treturn $class_name . \".\" . key($ext_strength);\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.DD\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.EE\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.FF\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.GG\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.HH\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.II\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\"))\n\"my_class.JJ\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"", "    $strength = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $extension_strength\
    \ = $cap - $sm;\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;\n         \
    \       $strongest_extension = $extension;\n            }\n        }\n       \
    \ return $class_name . \".\" . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif\
    \ (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;", "\t$strongest_extension\
    \ = \"\";\n\t$strongest_extension_strength = 0;\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\
    \t\t\t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE", "\t$class_name = strtolower($class_name);\n\t$extensions = array_map('strtolower',\
    \ $extensions);\n\t$strength = array();\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$strength[] = count(array_filter(str_split($extension), function($char)\
    \ {\n\t\t\treturn ctype_upper($char);\n\t\t})) - count(array_filter(str_split($extension),\
    \ function($char) {\n\t\t\treturn ctype_lower($char);\n\t\t}));\n\t}\n\t$strongest\
    \ = max($strength);\n\t$strongest_index = array_search($strongest, $strength);\n\
    \treturn $class_name . '.' . $extensions[$strongest_index];\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"Stu", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = 0;\n\t\t$sm = 0;\n\t\tfor ($i = 0; $i < strlen($extension);\
    \ $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$cap++;\n\t\t\t}\
    \ else {\n\t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\t$strength = $cap - $sm;\n\t\tif\
    \ ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"A\", \"B\", \"C\"))\n\"my_class.A\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"A\", \"B\", \"C\", \"D\"))\n\"my_class.A\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"A\", \"B\", \"C\", \"D\", \"E\"))\n\"my_class.A\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"))\n\"my_class.A\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"A\", \"B\", \"C\", \"D\", \"E\"\
    , \"F\", \"G\"))\n\"my_class.A\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"))\n\"my_class.A\"\n>>> Strongest_Extension(\"",
  "\t$extensions_strength = array();\n\tforeach ($extensions as $extension) {\n\t\t\
    $extensions_strength[$extension] = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/',\
    \ $extension);\n\t}\n\tarsort($extensions_strength);\n\t$strongest_extension =\
    \ key($extensions_strength);\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\n\n/* Test cases\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"\
    Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\")));\nprint_r(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\")));\nprint_", "\t$extensions_strength = array();\n\t\
    foreach ($extensions as $extension) {\n\t\t$extensions_strength[$extension] =\
    \ preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \t}\n\tarsort($extensions_strength);\n\t$strongest_extension = key($extensions_strength);\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\n\n/* Test cases:\necho\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));\necho Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"));\necho Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"));\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"));\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\"));\necho\
    \ Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes", "   \
    \ $strength = 0;\n    $strongest_extension = \"\";\n    foreach ($extensions as\
    \ $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n   \
    \     $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $extension_strength\
    \ = $cap - $sm;\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;\n         \
    \       $strongest_extension = $extension;\n            }\n        }\n       \
    \ return $class_name . \".\" . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif\
    \ (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;", "    $ext_strength\
    \ = [];\n    foreach ($extensions as $ext) {\n        $ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n    }\n    arsort($ext_strength);\n\
    \    return $class_name . '.' . key($ext_strength);\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n*/", "    $strongest = 0;\n    $strongest_extension = \"\";\n    foreach ($extensions\
    \ as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $strength = $cap\
    \ - $sm;\n        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(',', $extensions);\n    $result = Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$strength = 0;\n\t$strongest_extension = \"\";\n\tforeach\
    \ ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$extension_strength =\
    \ $cap - $sm;\n\t\tif ($extension_strength > $strength) {\n\t\t\t$strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(',', $extensions);\n\
    \    $result = Strongest_Extension($class_name, $extensions);\n}", "\t$strongest_extension\
    \ = $extensions[0];\n\t$strongest_extension_strength = 0;\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension);\
    \ $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\
    \t\t\t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strongest_extension_strength) {\n\t\t\t$strongest_extension = $extension;\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t}\n\t}\n\treturn\
    \ $class_name . \".\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"", "\t$ext_strength\
    \ = array();\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = substr_count(strtoupper($ext),\
    \ 'A-Z') - substr_count(strtolower($ext), 'a-z');\n\t}\n\tarsort($ext_strength);\n\
    \treturn $class_name . '.' . key($ext_strength);\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.DD\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.EE\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.FF\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.GG\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.II\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\",", "\t$strongest\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\
    \t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\
    \t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $strongest) {\n\t\t\t\
    $strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\
    \treturn $class_name . \".\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my", "\t$extensions_strength = array();\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$extensions_strength[$extension] = preg_match_all('/[A-Z]/', $extension)\
    \ - preg_match_all('/[a-z]/', $extension);\n\t}\n\tarsort($extensions_strength);\n\
    \t$strongest_extension = key($extensions_strength);\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\")));\nprint_r(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\",", "\t$ext_strength\
    \ = array();\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    $strongest_ext = key($ext_strength);\n\treturn $class_name . '.' . $strongest_ext;\n\
    }\n\n/* Test cases\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\")); // \"my_class.AA\"\necho Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\")); // \"Slices.SErviNGSliCes\"\necho\
    \ Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"StuFfed\")); // \"Slices.SErviNGSliCes\"\necho Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"));\
    \ // \"Slices.SErviNGSliCes\"\necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\")); // \"Slices.SErviNGSliCes\"\
    \necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\")); // \"Slices.SErviNGSliCes\"\
    \necho Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed", "\t$strongest =\
    \ 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension) {\n\t\
    \t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\n/* Test cases\n\
    print Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\")) . \"\\\
    n\";\nprint Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"AA\"\
    , \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\nprint Strongest_Extension(\"my_class\", array(\"\
    AA\", \"", "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension);\
    \ $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$strength++;\n\t\t\
    \t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n}\n\n/*\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.AA\"\n>>> Strongest_Ext", "\t$ext_strength = [];\n\
    \tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    return $class_name . '.' . key($ext_strength);\n}\n\n/* Test cases\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")) . \"\\n\");\n\
    print(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\")) . \"\\n\");\nprint(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\")) . \"\\\
    n\");\nprint(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"\
    DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\")) . \"\\n\");\nprint(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\",\
    \ \"KK\")) . \"\\n\");\nprint(Strongest_Extension(\"my_class\", array(\"AA\",\
    \ \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\", \"KK\"\
    , \"", "\t$strength = 0;\n\t$strongest = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n\t\t$curr_strength = $cap - $sm;\n\t\tif ($curr_strength\
    \ > $strength) {\n\t\t\t$strength = $curr_strength;\n\t\t\t$strongest = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . \".\" . $strongest;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$strongest = 0;\n\t$strongest_extension\
    \ = \"\";\n\tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $strength = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = 0;\n\t\t$sm = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$cap++;\n\t\t\t} else {\n\
    \t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\t$current_strength = $cap - $sm;\n\t\tif ($current_strength\
    \ > $strength) {\n\t\t\t$strength = $current_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"", "\t$strongest_extension = '';\n\
    \t$strongest_strength = 0;\n\tforeach ($extensions as $extension) {\n\t\t$strength\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest_strength) {\n\t\t\t$strongest_strength = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strongest = \"\";\n    $strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $current_strength\
    \ = $cap - $sm;\n        if ($current_strength > $strength) {\n            $strongest\
    \ = $extension;\n            $strength = $current_strength;\n        }\n    }\n\
    \    return $class_name . \".\" . $strongest;\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strongest\
    \ = \"\";\n        $strength = 0;\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all(\"/[A-Z]/\", $extension);\n           \
    \ $sm = preg_match_all(\"/[a-z]/\", $extension);\n            $current_strength\
    \ = $cap - $sm;\n            if ($current_strength > $strength) {\n          \
    \      $strongest = $extension;\n                $strength = $current_strength;\n\
    \            }\n        }\n        return $class_name . \".\" . $strongest;\n\
    \    }\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function\
    \ Strongest_Extension($class_name, $extensions) {\n        $strongest = \"\";\n\
    \        $strength = 0;\n        foreach ($extensions as $extension) {\n     \
    \       $cap = preg_match_all(\"/[A-Z]/\", $extension);\n            $sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n            $current_strength = $cap - $sm;\n       \
    \     if ($current_strength > $strength) {\n                $strongest = $extension;\n\
    \                $strength = $current_strength;\n            }\n        }\n  \
    \      return $class_name . \".\" . $strongest", "\t$ext_strength = [];\n\t$ext_name\
    \ = [];\n\t$ext_count = count($extensions);\n\tfor ($i = 0; $i < $ext_count; $i++)\
    \ {\n\t\t$ext_strength[$i] = 0;\n\t\t$ext_name[$i] = $extensions[$i];\n\t\t$ext_length\
    \ = strlen($extensions[$i]);\n\t\tfor ($j = 0; $j < $ext_length; $j++) {\n\t\t\
    \tif (ctype_upper($extensions[$i][$j])) {\n\t\t\t\t$ext_strength[$i]++;\n\t\t\t\
    } else {\n\t\t\t\t$ext_strength[$i]--;\n\t\t\t}\n\t\t}\n\t}\n\t$max_strength =\
    \ max($ext_strength);\n\t$max_index = array_search($max_strength, $ext_strength);\n\
    \treturn $class_name . \".\" . $ext_name[$max_index];\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSli", "    $strongest_extension = '';\n    $strongest_strength = 0;\n\
    \    foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_strength) {\n  \
    \          $strongest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*", "\t$strongest_extension = '';\n\t$strongest_extension_strength = 0;\n\
    \tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\n\n/*", "\t$strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\
    \t\t$sm = preg_match_all('/[a-z]/', $extension, $matches);\n\t\t$strength = $cap\
    \ - $sm;\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\
    \t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$strength = 0;\n\t$strongest_extension = \"\";\n\t\
    foreach ($extensions as $extension) {\n\t\t$cap = preg_match_all(\"/[A-Z]/\",\
    \ $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\", $extension);\n\t\t$current_strength\
    \ = $cap - $sm;\n\t\tif ($current_strength > $strength) {\n\t\t\t$strength = $current_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . \"\
    .\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$extensions_strength = array();\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extensions_strength[$extension] = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\
    \t\t\t\t$extensions_strength[$extension]++;\n\t\t\t} else {\n\t\t\t\t$extensions_strength[$extension]--;\n\
    \t\t\t}\n\t\t}\n\t}\n\t$max_strength = max($extensions_strength);\n\t$max_strength_extension\
    \ = array_search($max_strength, $extensions_strength);\n\treturn $class_name .\
    \ \".\" . $max_strength_extension;\n}\n\n/*\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class", "\t$strongest = 0;\n\t\
    $strongest_extension = \"\";\n\tforeach ($extensions as $extension) {\n\t\t$strength\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\", \"\
    CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"Be\", \"\
    AA\", \"CC\", \"AA\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"Be\", \"AA\", \"CC\", \"AA\", \"AA\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"AA\", \"AA\", \"AA\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\", \"CC\", \"AA\",\
    \ \"AA\", \"AA\", \"AA\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"Be\", \"AA\", \"CC\", \"AA\", \"AA\", \"AA\", \"AA\", \"AA\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\", \"CC\", \"AA\",\
    \ \"AA\", \"AA\", \"AA\", \"AA\", \"AA\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"AA\", \"AA", "    $strongest_extension\
    \ = '';\n    $strongest_extension_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } elseif (ctype_lower($extension[$i])) {\n                $extension_strength--;\n\
    \            }\n        }\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$extensions_strength = array();\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extensions_strength[$extension] = preg_match_all('/[A-Z]/',\
    \ $extension) - preg_match_all('/[a-z]/', $extension);\n\t}\n\tarsort($extensions_strength);\n\
    \t$strongest_extension = array_keys($extensions_strength)[0];\n\treturn $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\"))", "    $strength = 0;\n    $strongest_extension = '';\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $current_strength = $cap - $sm;\n        if ($current_strength\
    \ > $strength) {\n            $strength = $current_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = '';\n\
    \        foreach ($extensions as $extension) {\n            $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n            $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n            $current_strength = $cap - $sm;\n            if ($current_strength\
    \ > $strength) {\n                $strength = $current_strength;\n           \
    \     $strongest_extension = $extension;\n            }\n        }\n        return\
    \ $class_name . '.' . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif(!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $strength\
    \ = 0;\n        $strongest_extension = '';\n        foreach ($extensions as $extension)\
    \ {\n            $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n   \
    \         $sm = preg_match_all('/[a-z]/', $extension, $matches);\n           \
    \ $current_strength = $cap - $sm;\n            if ($current", "    $strength =\
    \ 0;\n    $strongest_extension = \"\";\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = get_strength($extension);\n        if ($extension_strength\
    \ > $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n", "    $ext_strength = [];\n    foreach ($extensions as $ext) {\n        $ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n    }\n\
    \    arsort($ext_strength);\n    $strongest_ext = array_keys($ext_strength)[0];\n\
    \    return $class_name . '.' . $strongest_ext;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    Be\", \"AA\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\", \"\
    EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"Be\", \"AA\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"", "\t$strongest_extension = '';\n\t$strongest_extension_strength = 0;\n\t\
    foreach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor ($i = 0; $i\
    \ < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\
    \t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif\
    \ ($strength > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength\
    \ = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn\
    \ $class_name . '.' . $strongest_extension;\n}", "    $strongest = 0;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $strength = 0;\n \
    \       for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest) {\n           \
    \ $strongest = $strength;\n            $strongest_extension = $extension;\n  \
    \      }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\
    \n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(',', $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "\t$ext_strength\
    \ = array();\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    $strongest_ext = key($ext_strength);\n\treturn $class_name . '.' . $strongest_ext;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.FF\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\"))\n\"my_class.FF\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.HH\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\",\
    \ \"KK\"))\n\"my_class.KK\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\"\
    ,", "    $extensions_strength = [];\n    foreach ($extensions as $extension) {\n\
    \        $extensions_strength[$extension] = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extensions_strength[$extension]++;\n\
    \            } else {\n                $extensions_strength[$extension]--;\n \
    \           }\n        }\n    }\n    arsort($extensions_strength);\n    return\
    \ $class_name . \".\" . key($extensions_strength);\n}\n\n/*\n\n*/\nif (!debug_backtrace())\
    \ {\n    $class_name = \"my_class\";\n    $extensions = [\"AA\", \"Be\", \"CC\"\
    ];\n    print_r(Strongest_Extension($class_name, $extensions));\n}", "    $strongest_extension\
    \ = \"\";\n    $strongest_extension_strength = 0;\n    foreach ($extensions as\
    \ $extension) {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    $extensions = explode(\",\", $extensions);\n    $result = Strongest_Extension($class_name,\
    \ $extensions);\n}", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese",
  "    $strongest_extension = $extensions[0];\n    $strongest_extension_strength =\
    \ 0;\n    foreach ($extensions as $extension) {\n        $extension_strength =\
    \ 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $strongest_extension\
    \ = \"\";\n    $strongest_extension_strength = 0;\n    foreach ($extensions as\
    \ $extension) {\n        $extension_strength = 0;\n        $extension_strength\
    \ = preg_match_all('/[A-Z]/', $extension, $matches);\n        $extension_strength\
    \ -= preg_match_all('/[a-z]/', $extension, $matches);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(',', $extensions);\n\
    \    $result = Strongest_Extension($class_name, $extensions);\n}", "  $strongest\
    \ = 0;\n  $strongest_extension = '';\n  foreach ($extensions as $extension) {\n\
    \    $cap = preg_match_all('/[A-Z]/', $extension, $matches);\n    $sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n    $strength = $cap - $sm;\n    if ($strength > $strongest)\
    \ {\n      $strongest = $strength;\n      $strongest_extension = $extension;\n\
    \    }\n  }\n  return $class_name . '.' . $strongest_extension;\n}\n\n/*\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF", "\t$ext_strength\
    \ = [];\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    return $class_name . '.' . key($ext_strength);\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\")));\n\
    print_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"\
    , \"EE\", \"FF\", \"GG\", \"HH\")));\nprint_r(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"\
    )));\nprint_r(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\",\
    \ \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\")));\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\", \"KK\")));\nprint_r(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\",\
    \ \"KK\", \"LL\")));\nprint_r", "  $strength = 0;\n  $strongest_extension = \"\
    \";\n  foreach ($extensions as $extension) {\n    $cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n    $sm = preg_match_all(\"/[a-z]/\", $extension);\n    $extension_strength\
    \ = $cap - $sm;\n    if ($extension_strength > $strength) {\n      $strength =\
    \ $extension_strength;\n      $strongest_extension = $extension;\n    }\n  }\n\
    \  return $class_name . \".\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    ))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"St", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*", "\t$ext_strength = [];\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\t\
    arsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\treturn $class_name\
    \ . '.' . $strongest_ext;\n}\n\n/*", "    $strongest = 0;\n    $strongest_extension\
    \ = \"\";\n    foreach ($extensions as $extension) {\n        $strength = 0;\n\
    \        for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest) {\n           \
    \ $strongest = $strength;\n            $strongest_extension = $extension;\n  \
    \      }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strongest = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $strength = 0;\n\
    \            for ($i = 0; $i < strlen($extension); $i++) {\n                if\
    \ (ctype_upper($extension[$i])) {\n                    $strength++;\n        \
    \        } else {\n                    $strength--;\n                }\n     \
    \       }\n            if ($strength > $strongest) {\n                $strongest\
    \ = $strength;\n                $strongest_extension = $extension;\n         \
    \   }\n        }\n        return $class_name . \".\" . $strongest_extension;\n\
    \    }\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function\
    \ Strongest_Extension($class_name, $extensions) {\n        $strongest = 0;\n \
    \       $strongest_extension = \"\";\n        foreach ($extensions as $extension)\
    \ {\n            $strength = 0;\n            for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n                if (ctype_upper($extension[$i])) {\n              \
    \      $strength++;\n                } else {\n                    $strength--;\n\
    \                }\n            }\n            if ($strength > $strongest) {\n\
    \                $", "\t$ext_strength = [];\n\tforeach ($extensions as $ext) {\n\
    \t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/',\
    \ $ext);\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n$class_name = \"my_class\"\
    ;\n$extensions = [\"AA\", \"Be\", \"CC\"];\necho Strongest_Extension($class_name,\
    \ $extensions);", "\t$extensions = array_map('strtolower', $extensions);\n\t$extensions\
    \ = array_map('strtoupper', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\
    \t$extensions = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\
    \t$extensions = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\
    \t$extensions = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\
    \t$extensions = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\
    \t$extensions = array_map('strlen', $extensions);\n\t$extensions = array_map('strlen',\
    \ $extensions);\n\t$extensions = array_map('strlen', $extensions);\n\t$extensions\
    \ = array_map('strlen', $ext", "\t$extensions_strength = array();\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extensions_strength[$extension] = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\
    \t\t\t\t$extensions_strength[$extension]++;\n\t\t\t} else {\n\t\t\t\t$extensions_strength[$extension]--;\n\
    \t\t\t}\n\t\t}\n\t}\n\t$max_strength = max($extensions_strength);\n\t$strongest_extension\
    \ = array_search($max_strength, $extensions_strength);\n\treturn $class_name .\
    \ \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "\t$strongest_extension = '';\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest_extension_strength)\
    \ {\n\t\t\t$strongest_extension_strength = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"\
    EE\", \"FF\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    ))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n\
    >>> Strongest_Ext", "    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/*\n * Test code\n */\n$class_name = 'my_class';\n\
    $extensions = array('AA', 'Be', 'CC');\necho Strongest_Extension($class_name,\
    \ $extensions);", "\t$ext_strength = array();\n\tforeach ($extensions as $ext)\
    \ {\n\t\t$ext_strength[$ext] = substr_count(strtoupper($ext), 'A-Z') - substr_count(strtolower($ext),\
    \ 'a-z');\n\t}\n\tarsort($ext_strength);\n\t$strongest_ext = key($ext_strength);\n\
    \treturn $class_name . '.' . $strongest_ext;\n}\n\n/* Test cases\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\")) . \"\\n\");\n\
    print(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\")) . \"\\n\");\nprint(Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\")) . \"\\\
    n\");\nprint(Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"\
    DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\")) . \"\\n\");\nprint(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\")) . \"\\n\");\nprint(Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\", \"II\", \"JJ\",\
    \ \"KK\")) . \"\\n\");\nprint(Strongest_Ext", "    $strength = 0;\n    $strongest_extension\
    \ = \"\";\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \        $extension_strength = $cap - $sm;\n        if ($extension_strength >\
    \ $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $strength = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"\
    /[a-z]/\", $extension);\n\t\t$current_strength = $cap - $sm;\n\t\tif ($current_strength\
    \ > $strength) {\n\t\t\t$strength = $current_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    ))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SE", " \
    \   $strongest_extension = '';\n    $strongest_extension_strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $strength = 0;\n        for ($i = 0;\
    \ $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*", "\t$strongest_extension = $extensions[0];\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor ($i\
    \ = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength\
    \ = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn\
    \ $class_name . \".\" . $strongest_extension;\n}\n\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "  $strongest = 0;\n  $strongest_extension\
    \ = \"\";\n  foreach ($extensions as $extension) {\n    $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n    $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \    $strength = $cap - $sm;\n    if ($strength > $strongest) {\n      $strongest\
    \ = $strength;\n      $strongest_extension = $extension;\n    }\n  }\n  return\
    \ $class_name . \".\" . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$strongest_extension = '';\n\t\
    $strongest_extension_strength = 0;\n\tforeach ($extensions as $extension) {\n\t\
    \t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\
    \t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\t\t\
    \t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strongest_extension_strength) {\n\t\t\t$strongest_extension_strength = $extension_strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"));", "    $strongest = 0;\n    $strongest_extension = '';\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $sm = preg_match_all('/[a-z]/', $extension,\
    \ $matches);\n        $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    /*\n    ----TESTE----\n*/\n\n$class_name = \"my_class\";\n$extensions = array(\"\
    AA\", \"Be\", \"CC\");\n\necho Strongest_Extension($class_name, $extensions);",
  "\t$strongest = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\
    \t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\
    \t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $strongest) {\n\t\t\t\
    $strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\
    \treturn $class_name . \".\" . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my", "\t$max_strength = 0;\n\t$max_strength_index = 0;\n\tfor ($i = 0; $i < count($extensions);\
    \ $i++) {\n\t\t$strength = 0;\n\t\tfor ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n\t\t\tif (ctype_upper($extensions[$i][$j])) {\n\t\t\t\t$strength++;\n\
    \t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $max_strength)\
    \ {\n\t\t\t$max_strength = $strength;\n\t\t\t$max_strength_index = $i;\n\t\t}\n\
    \t}\n\treturn $class_name . \".\" . $extensions[$max_strength_index];\n}\n\n/*\n\
    >>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n", "\t$extensions_strength = [];\n\
    \tforeach ($extensions as $extension) {\n\t\t$extensions_strength[$extension]\
    \ = preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \t}\n\tarsort($extensions_strength);\n\t$strongest_extension = key($extensions_strength);\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.DD\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.DD\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.FF\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.GG\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.HH\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.HH\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"\
    , \"II\", \"JJ\"))\n\"my_class.JJ\"\n>>> Strongest_Extension(\"my_class\", array",
  "    $strongest_extension = \"\";\n    $strongest_extension_strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $extension_strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['user_input']) && !empty($_POST['user_input'])) {\n\t\
    $user_input = $_POST['user_input'];\n\t$user_input = explode(\" \", $user_input);\n\
    \t$user_input = array_map('trim', $user_input);\n\t$user_input = array_filter($user_input);\n\
    \t$user_input = array_values($user_input);\n\n\tif(count($user_input) < 2) {\n\
    \t\techo \"You need to enter atleast two words.\";\n\t}\n\telse {\n\t\t$class_name\
    \ = $user_input[0];\n\t\t$extensions = array_slice($user_input, 1);\n\t\techo\
    \ Strongest_Extension($class_name, $extensions);\n\t}\n}", "\t$strength = 0;\n\
    \t$strongest_extension = \"\";\n\tforeach ($extensions as $extension) {\n\t\t\
    $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\t\t$sm = preg_match_all(\"/[a-z]/\"\
    , $extension);\n\t\t$extension_strength = $cap - $sm;\n\t\tif ($extension_strength\
    \ > $strength) {\n\t\t\t$strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    ))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes", "\t$strongest\
    \ = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension) {\n\
    \t\t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\t\
    if (ctype_upper($extension[$i])) {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\
    \t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest\
    \ = $strength;\n\t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn\
    \ $class_name . '.' . $strongest_extension;\n}\n\n/*\n * Test code\n */\necho\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\")) . \"\\n\";\n\
    echo Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    )) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\", \"\
    Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"AA\"\
    , \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\necho Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) . \"\\n\";\n", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"AA\", \"BB\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\", \"BB\", \"\
    CC\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\", array(\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\", \"BB\", \"CC\", \"DD\"))\n\"\
    Slices.SErviNGSliCes\"", "    $extensions_strength = [];\n    foreach ($extensions\
    \ as $extension) {\n        $extensions_strength[$extension] = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extensions_strength[$extension]++;\n            } else {\n\
    \                $extensions_strength[$extension]--;\n            }\n        }\n\
    \    }\n    $strongest_extension = array_search(max($extensions_strength), $extensions_strength);\n\
    \    return $class_name . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension'))\
    \ {\n    function Strongest_Extension($class_name, $extensions) {\n        $extensions_strength\
    \ = [];\n        foreach ($extensions as $extension) {\n            $extensions_strength[$extension]\
    \ = 0;\n            for ($i = 0; $i < strlen($extension); $i++) {\n          \
    \      if (ctype_upper($extension[$i])) {\n                    $extensions_strength[$extension]++;\n\
    \                } else {\n                    $extensions_strength[$extension]--;\n\
    \                }\n            }\n        }\n        $strongest_extension = array_search(max($extensions_strength),\
    \ $extensions_strength);\n        return $class_name . \".\" . $strongest_extension;\n\
    \    }\n}\n\n/*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function\
    \ Strongest_Extension($class_name, $extensions) {\n        $extensions_strength\
    \ = [];\n        foreach ($extensions as $extension) {\n            $extensions_strength[$extension]\
    \ = 0;\n            for ($i = 0; $i < strlen($extension); $i++) {\n          \
    \      if (ctype_upper($extension[$i])) {\n                    $extensions_strength[$extension]++;\n\
    \                } else {\n                    $extensions_strength[$extension]",
  "    $strongest_extension = '';\n    $strongest_extension_strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $extension_strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n/*\n\
    \n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(',', $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "\t$strength = 0;\n\
    \t$strongest_extension = '';\n\tforeach ($extensions as $extension) {\n\t\t$cap\
    \ = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$extension_strength = $cap - $sm;\n\t\tif ($extension_strength\
    \ > $strength) {\n\t\t\t$strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $ext_strength = [];\n\tforeach ($extensions as $ext) {\n\t\t$ext_strength[$ext]\
    \ = preg_match_all('/[A-Z]/', $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\t\
    asort($ext_strength);\n\t$strongest_ext = array_keys($ext_strength)[0];\n\treturn\
    \ $class_name . '.' . $strongest_ext;\n}\n\n/* Test cases\nprint_r(Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\")));\nprint_r(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    )));\nprint_r(Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\")));\nprint_r(Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\", \"SE", "    $class_name = strtolower($class_name);\n\
    \    $extensions = array_map('strtolower', $extensions);\n    $extensions = array_map('trim',\
    \ $extensions);\n    $extensions = array_map('str_replace', array_fill(0, count($extensions),\
    \ ' '), array_fill(0, count($extensions), ''), $extensions);\n    $extensions\
    \ = array_map('str_replace', array_fill(0, count($extensions), '_'), array_fill(0,\
    \ count($extensions), ''), $extensions);\n    $extensions = array_map('str_replace',\
    \ array_fill(0, count($extensions), '-'), array_fill(0, count($extensions), ''),\
    \ $extensions);\n    $extensions = array_map('str_replace', array_fill(0, count($extensions),\
    \ '.'), array_fill(0, count($extensions), ''), $extensions);\n    $extensions\
    \ = array_map('str_replace', array_fill(0, count($extensions), ','), array_fill(0,\
    \ count($extensions), ''), $extensions);\n    $extensions = array_map('str_replace',\
    \ array_fill(0, count($extensions), ';'), array_fill(0, count($extensions), ''),\
    \ $extensions);\n    $extensions = array_map('str_replace', array_fill(0, count($extensions),\
    \ ':'), array_fill(0, count($extensions), ''), $extensions);\n    $extensions\
    \ = array_map('str_replace', array_fill(0, count($extensions), '!'), array_fill(0,\
    \ count($extensions), ''), $extensions);\n    $extensions = array_map('str_replace',\
    \ array_fill(0, count($extensions), '?'), array_fill(0, count($extensions), ''),\
    \ $extensions);\n    $extensions = array_map('str_replace', array_fill(0, count($extensions),\
    \ '('), array_fill(0, count($extensions), ''), $extensions);\n    $extensions\
    \ = array_map('", "    $strongest = 0;\n    $strongest_extension = \"\";\n   \
    \ foreach ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\"\
    , $extension);\n        $sm = preg_match_all(\"/[a-z]/\", $extension);\n     \
    \   $strength = $cap - $sm;\n        if ($strength > $strongest) {\n         \
    \   $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\
    \n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    $result = Strongest_Extension($class_name, $extensions);\n}", "\t$strength\
    \ = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$extension_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++)\
    \ {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$extension_strength++;\n\
    \t\t\t} else {\n\t\t\t\t$extension_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength\
    \ > $strength) {\n\t\t\t$strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", " \
    \   $max_strength = -1;\n    $max_strength_index = 0;\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $strength = 0;\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $strength++;\n            } else {\n                $strength--;\n       \
    \     }\n        }\n        if ($strength > $max_strength) {\n            $max_strength\
    \ = $strength;\n            $max_strength_index = $i;\n        }\n    }\n    return\
    \ $class_name . \".\" . $extensions[$max_strength_index];\n}\n\n/*\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_", "    $strongest_extension = '';\n    $strongest_extension_strength = 0;\n\
    \    foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(',', $extensions);\n\
    \    $result = Strongest_Extension($class_name, $extensions);\n}", "\t$strongest\
    \ = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension) {\n\
    \t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$strongest = 0;\n\t$strongest_extension\
    \ = \"\";\n\tforeach ($extensions as $extension) {\n\t\t$strength = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$strength++;\n\t\t\t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t\
    }\n\t\tif ($strength > $strongest) {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\n\n/*\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\"))\n\"\
    Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>>\
    \ Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"StuFfed\", \"StuFfed\"\
    , \"StuFfed\", \"StuFfed\"))\n\"Slices.StuFfed\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SEr", "\t$strongest_extension = \"\";\n\t$strongest_extension_strength\
    \ = 0;\n\tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\
    \t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength++;\n\t\t\t} else {\n\t\t\t\t$extension_strength--;\n\
    \t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strongest_extension_strength) {\n\
    \t\t\t$strongest_extension_strength = $extension_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . \".\" . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $class_name = strtolower($class_name);\n\t$extensions = array_map('strtolower',\
    \ $extensions);\n\t$strength = array();\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$strength[] = substr_count($extension, range('a', 'z')) - substr_count($extension,\
    \ range('A', 'Z'));\n\t}\n\t$max = max($strength);\n\t$key = array_search($max,\
    \ $strength);\n\treturn $class_name . '.' . $extensions[$key];\n}\n\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));\n", "\t$ext_strength = [];\n\tforeach\
    \ ($extensions as $ext) {\n\t\t$ext_strength[$ext] = preg_match_all('/[A-Z]/',\
    \ $ext) - preg_match_all('/[a-z]/', $ext);\n\t}\n\tarsort($ext_strength);\n\t\
    $strongest_ext = key($ext_strength);\n\treturn $class_name . '.' . $strongest_ext;\n\
    }\n\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));",
  "    $ext_strength = [];\n    foreach ($extensions as $ext) {\n        $ext_strength[$ext]\
    \ = substr_count(strtoupper($ext), 'A-Z') - substr_count(strtolower($ext), 'a-z');\n\
    \    }\n    arsort($ext_strength);\n    $strongest_ext = key($ext_strength);\n\
    \    return $class_name . '.' . $strongest_ext;\n}\n\n/*", "\t$strongest_extension\
    \ = '';\n\t$strongest_extension_strength = 0;\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest_extension_strength)\
    \ {\n\t\t\t$strongest_extension_strength = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n\
    }\necho Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t\
    $strongest = 0;\n\t$strongest_extension = '';\n\tforeach ($extensions as $extension)\
    \ {\n\t\t$cap = preg_match_all('/[A-Z]/', $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/',\
    \ $extension, $matches);\n\t\t$strength = $cap - $sm;\n\t\tif ($strength > $strongest)\
    \ {\n\t\t\t$strongest = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\n\n/*", "  \
    \  $strength = 0;\n    $strongest_extension = \"\";\n    foreach ($extensions\
    \ as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $extension_strength\
    \ = $cap - $sm;\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;\n         \
    \       $strongest_extension = $extension;\n            }\n        }\n       \
    \ return $class_name . \".\" . $strongest_extension;\n    }\n}\n\n/*\n\n*/\nif\
    \ (!function_exists('Strongest_Extension')) {\n    function Strongest_Extension($class_name,\
    \ $extensions) {\n        $strength = 0;\n        $strongest_extension = \"\"\
    ;\n        foreach ($extensions as $extension) {\n            $cap = preg_match_all(\"\
    /[A-Z]/\", $extension);\n            $sm = preg_match_all(\"/[a-z]/\", $extension);\n\
    \            $extension_strength = $cap - $sm;\n            if ($extension_strength\
    \ > $strength) {\n                $strength = $extension_strength;", "    $strongest_extension\
    \ = '';\n    $strongest_extension_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/*", "\t$strength = 0;\n\t$strongest_extension\
    \ = '';\n\tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n\t\t$sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \t\t$extension_strength = $cap - $sm;\n\t\tif ($extension_strength > $strength)\
    \ {\n\t\t\t$strength = $extension_strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}\necho Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"));", "\t$extensions_strength = [];\n\t\
    foreach ($extensions as $extension) {\n\t\t$extensions_strength[$extension] =\
    \ preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension);\n\
    \t}\n\tarsort($extensions_strength);\n\t$strongest_extension = key($extensions_strength);\n\
    \treturn $class_name . '.' . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"AA\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\"\
    , array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\", \"BB\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"AA\", \"BB\", \"CC\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\", \"BB\", \"\
    CC\", \"DD\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\",\
    \ array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"AA\", \"BB\", \"CC\", \"\
    DD\", \"EE\"))\n\"Slices.SErviNGSliCes\"\n>>> Strongest_Extension(\"Slices\",\
    \ array(\"SErviNGSliCes", "\t$extensions_strength = array();\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$extensions_strength[$extension] = (substr_count($extension,\
    \ range('A', 'Z')) - substr_count($extension, range('a', 'z')));\n\t}\n\tarsort($extensions_strength);\n\
    \t$strongest_extension = key($extensions_strength);\n\treturn $class_name . '.'\
    \ . $strongest_extension;\n}\n\n/*", "    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\n/*\n\n*/\nif(isset($_POST['submit'])){\n\
    \    $class_name = $_POST['class_name'];\n    $extensions = $_POST['extensions'];\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $strength =\
    \ 0;\n    $strongest_extension = \"\";\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $extension_strength++;\n\
    \            } else {\n                $extension_strength--;\n            }\n\
    \        }\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n\n\
    /*\n\n*/\nif(isset($_POST['submit'])){\n    $class_name = $_POST['class_name'];\n\
    \    $extensions = $_POST['extensions'];\n    $extensions = explode(\",\", $extensions);\n\
    \    echo Strongest_Extension($class_name, $extensions);\n}", "    $strongest\
    \ = 0;\n    $strongest_extension = '';\n    foreach ($extensions as $extension)\
    \ {\n        $strength = count(array_filter(str_split($extension), function($char)\
    \ {\n            return ctype_upper($char);\n        })) - count(array_filter(str_split($extension),\
    \ function($char) {\n            return ctype_lower($char);\n        }));\n  \
    \      if ($strength > $strongest) {\n            $strongest = $strength;\n  \
    \          $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n/*\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    Slices\", array(\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"))\n\"Slices.SErviNGSliCes\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\"))\n\
    \"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\", \"DD\", \"EE\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\"))\n\"my_class.AA\"\n>>>\
    \ Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE\"\
    , \"FF\", \"GG\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\", \"DD\", \"EE\", \"FF\", \"GG\", \"HH\"))\n\"my_class.AA\"\
    \n>>> Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\",\
    \ \"EE\", \"FF\", \"GG\", \"HH\", \"II\"))\n\"my_class.AA\"\n>>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\", \"DD\", \"EE"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

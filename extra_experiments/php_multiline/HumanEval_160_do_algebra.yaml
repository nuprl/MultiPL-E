name: HumanEval_160_do_algebra
language: php
prompt: "<?php\n/* Given two arrays operator, and operand. The first array has basic\
  \ algebra operations, and \nthe second array is an array of integers. Use the two\
  \ given arrays to build the algebric \nexpression and return the evaluation of this\
  \ expression.\nThe basic algebra operations:\nAddition ( + ) \nSubtraction ( - )\
  \ \nMultiplication ( * ) \nFloor division ( // ) \nExponentiation ( ** ) \nExample:\n\
  operator['+', '*', '-']\narray = [2, 3, 4, 5]\nresult = 2 + 3 * 4 - 5\n=> result\
  \ = 9\nNote:\nThe length of operator array is equal to the length of operand array\
  \ minus one.\nOperand is an array of of non-negative integers.\nOperator array has\
  \ at least one operator, and operand array has at least two operands.*/\nfunction\
  \ do_algebra($operator, $operand) {\n"
tests: "function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
  \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*\nGiven a string, return the sum of the numbers appearing\
    \ in the string, ignoring all other characters. \nA number is a series of 1 or\
    \ more digit chars in a row. (Note: Character.isDigit(char) tests if a char is\
    \ one of the chars '0', '1', .. '9'. Integer.parseInt(string) converts a string\
    \ to an int.)\nExample:\nsumNumbers(\"abc123xyz\") \u2192 123\nsumNumbers(\"aa11b33\"\
    ) \u2192 44\nsumNumbers(\"7 11\") \u2192 18\n*/", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", "\t\
    $result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/*", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $res = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n    \
    \    switch ($operator[$i]) {\n            case '+':\n                $res +=\
    \ $operand[$i + 1];\n                break;\n            case '-':\n         \
    \       $res -= $operand[$i + 1];\n                break;\n            case '*':\n\
    \                $res *= $operand[$i + 1];\n                break;\n         \
    \   case '//':\n                $res = floor($res / $operand[$i + 1]);\n     \
    \           break;\n            case '**':\n                $res = pow($res, $operand[$i\
    \ + 1]);\n                break;\n        }\n    }\n    return $res;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = $operand[0];\n  \
    \  for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\n\
    Given a string, return the sum of the numbers appearing in the string, ignoring\
    \ all other characters. \nA number is a series of 1 or more digit chars in a row.\
    \ (Note: Character.isDigit(char) tests if a char is one of the chars '0', '1',\
    \ .. '9'. \nInteger.parseInt(string) converts a string to an int.)\n\nsumNumbers(\"\
    abc123xyz\") \u2192 123\nsumNumbers(\"aa11b33\") \u2192 44\nsumNumbers(\"7 11\"\
    ) \u2192 18\n*/", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\n\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "\t$result = $operand[0];\n\tfor\
    \ ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\t\
    case '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\
    \t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t\
    $result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\t$result\
    \ = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\
    \t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "  $result = $operand[0];\n  for ($i =\
    \ 0; $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case\
    \ '+':\n        $result += $operand[$i + 1];\n        break;\n      case '-':\n\
    \        $result -= $operand[$i + 1];\n        break;\n      case '*':\n     \
    \   $result *= $operand[$i + 1];\n        break;\n      case '//':\n        $result\
    \ = floor($result / $operand[$i + 1]);\n        break;\n      case '**':\n   \
    \     $result = pow($result, $operand[$i + 1]);\n        break;\n    }\n  }\n\
    \  return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\
    \ Given an array of integers, return an array of the same size where the element\
    \ at each index \nis the product of all the elements in the original array except\
    \ for the element at that index.\nFor example, an input of [1, 2, 3, 4, 5] should\
    \ return [120, 60, 40, 30, 24].\nYou cannot use division in this problem.\nExample:\n\
    input = [1, 2, 3, 4, 5]\nresult = [120, 60, 40, 30, 24]\nNote:\nThe length of\
    \ input array is equal to the length of result array.\nThe input array is not\
    \ empty.\nThe result array is not empty.\nThe input array has at least two elements.\n\
    The result array has at least two elements.\nThe input array has at least two\
    \ different elements.\nThe result array has at least two different elements.\n\
    The input array has no duplicate elements.\nThe result array has no duplicate\
    \ elements.*/", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5]);", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "\t$result = $operand[0];\n\tfor\
    \ ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\t\
    case '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\
    \t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t\
    $result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\t$result\
    \ = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\
    \t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result /= $operand[$i + 1];\n                break;\n           \
    \ case '**':\n                $result **= $operand[$i + 1];\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result /= $operand[$i + 1];\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0;\
    \ $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n         \
    \   case '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n/*\n * Test cases\n\
    \ */\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]) . PHP_EOL; // 9\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5, 6]) . PHP_EOL; // 11\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5, 6, 7]) . PHP_EOL; // 13\necho do_algebra(['+', '*', '-'], [2, 3,\
    \ 4, 5, 6, 7, 8]) . PHP_EOL; // 15\necho do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5, 6, 7, 8, 9]) . PHP_EOL; // 17\necho do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]) . PHP_EOL; // 19\necho do_algebra(['+', '*', '-'], [2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11]) . PHP_EOL; // 21\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) . PHP_EOL; //", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\
    \ Test cases", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n/*", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++)\
    \ {\n        switch ($operator[$i]) {\n            case '+':\n               \
    \ $result += $operand[$i + 1];\n                break;\n            case '-':\n\
    \                $result -= $operand[$i + 1];\n                break;\n      \
    \      case '*':\n                $result *= $operand[$i + 1];\n             \
    \   break;\n            case '//':\n                $result = floor($result /\
    \ $operand[$i + 1]);\n                break;\n            case '**':\n       \
    \         $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * Test cases\n */\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6]) . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6,\
    \ 7]) . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8])\
    \ . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9]) .\
    \ '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10])\
    \ . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) . '<br>'; // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12]) . '<br>'; // 9", "    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ /= $operand[$i + 1];\n                break;\n            case '**':\n     \
    \           $result **= $operand[$i + 1];\n                break;\n        }\n\
    \    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2,\
    \ 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = (int)($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "\t$result = $operand[0];\n\tfor\
    \ ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\t\
    case '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\
    \t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t\
    $result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\t$result\
    \ = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\
    \t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n/*", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "\t$result = $operand[0];\n\tfor\
    \ ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\t\
    case '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\
    \t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t\
    $result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\t$result\
    \ = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\
    \t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]) . PHP_EOL;\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5, 6]) . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6, 7]) . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6,\
    \ 7, 8]) . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9])\
    \ . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10]) .\
    \ PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\
    \ . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12]) . PHP_EOL;\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = $operand[0];\n  \
    \  for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*\n * Test cases\n */\n\nassert(do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4, 5])\
    \ == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9);\nassert(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]) == 9);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "\t$result = $operand[0];\n\
    \tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\
    \t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\
    \t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\
    \t$result = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\
    \t\t\t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\n\
    \ * Test cases\n */\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand); // 9\n\n$operator = ['//', '**', '+'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand); // 1\n\n$operator\
    \ = ['*', '+', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\
    \ // -3\n\n$operator = ['//', '**', '+'];\n$operand = [2, 3, 4, 5, 6];\necho do_algebra($operator,\
    \ $operand); // 1\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5, 6];\n\
    echo do_algebra($operator, $operand); // -3\n\n$operator = ['//', '**', '+'];\n\
    $operand = [2, 3, 4, 5, 6, 7];\necho do_algebra($operator, $operand); // 1\n\n\
    $operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5, 6, 7];\necho do_algebra($operator,\
    \ $operand); // -3\n", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        if ($operator[$i] ==\
    \ '+') {\n            $result += $operand[$i + 1];\n        } elseif ($operator[$i]\
    \ == '-') {\n            $result -= $operand[$i + 1];\n        } elseif ($operator[$i]\
    \ == '*') {\n            $result *= $operand[$i + 1];\n        } elseif ($operator[$i]\
    \ == '//') {\n            $result = floor($result / $operand[$i + 1]);\n     \
    \   } elseif ($operator[$i] == '**') {\n            $result = pow($result, $operand[$i\
    \ + 1]);\n        }\n    }\n    return $result;\n}\necho do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]) . \"\\n\"; // 9\necho do_algebra(['+', '*', '-'], [2, 3,\
    \ 4, 5, 6]) . \"\\n\"; // 11\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6,\
    \ 7]) . \"\\n\"; // 13\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8])\
    \ . \"\\n\"; // 15\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9])\
    \ . \"\\n\"; // 17\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]) . \"\\n\"; // 19\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]) . \"\\n\"; // 21\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12]) . \"\\n\"; // 23\necho do_algebra(", "    $result =\
    \ $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "  $result = $operand[0];\n  for ($i = 0; $i < count($operator);\
    \ $i++) {\n    switch ($operator[$i]) {\n      case '+':\n        $result += $operand[$i\
    \ + 1];\n        break;\n      case '-':\n        $result -= $operand[$i + 1];\n\
    \        break;\n      case '*':\n        $result *= $operand[$i + 1];\n     \
    \   break;\n      case '//':\n        $result = floor($result / $operand[$i +\
    \ 1]);\n        break;\n      case '**':\n        $result = pow($result, $operand[$i\
    \ + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = (int)($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-', '//', '**'];\n$operand\
    \ = [2, 3, 4, 5, 6];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result /= $operand[$i + 1];\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = (int)($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0;\
    \ $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n         \
    \   case '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ /= $operand[$i + 1];\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "\t$result = $operand[0];\n\
    \tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\
    \t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\
    \t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\
    \t$result = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\
    \t\t\t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "  $result = $operand[0];\n  for ($i =\
    \ 0; $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case\
    \ '+':\n        $result += $operand[$i + 1];\n        break;\n      case '-':\n\
    \        $result -= $operand[$i + 1];\n        break;\n      case '*':\n     \
    \   $result *= $operand[$i + 1];\n        break;\n      case '//':\n        $result\
    \ = floor($result / $operand[$i + 1]);\n        break;\n      case '**':\n   \
    \     $result = pow($result, $operand[$i + 1]);\n        break;\n    }\n  }\n\
    \  return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n/*", "  $result = $operand[0];\n  for ($i = 0; $i < count($operator); $i++)\
    \ {\n    switch ($operator[$i]) {\n      case '+':\n        $result += $operand[$i\
    \ + 1];\n        break;\n      case '-':\n        $result -= $operand[$i + 1];\n\
    \        break;\n      case '*':\n        $result *= $operand[$i + 1];\n     \
    \   break;\n      case '//':\n        $result = floor($result / $operand[$i +\
    \ 1]);\n        break;\n      case '**':\n        $result = pow($result, $operand[$i\
    \ + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n", "\t$result = $operand[0];\n\
    \tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\
    \t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\
    \t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\
    \t$result = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\
    \t\t\t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result /= $operand[$i + 1];\n                break;\n           \
    \ case '**':\n                $result **= $operand[$i + 1];\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "  $result = $operand[0];\n\
    \  for ($i = 0; $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n\
    \      case '+':\n        $result += $operand[$i + 1];\n        break;\n     \
    \ case '-':\n        $result -= $operand[$i + 1];\n        break;\n      case\
    \ '*':\n        $result *= $operand[$i + 1];\n        break;\n      case '//':\n\
    \        $result = floor($result / $operand[$i + 1]);\n        break;\n      case\
    \ '**':\n        $result = pow($result, $operand[$i + 1]);\n        break;\n \
    \   }\n  }\n  return $result;\n}\n", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = $operand[0];\n    for ($i = 0; $i <\
    \ count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\n\
    \    ----TESTE----\n*/\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    \necho do_algebra($operator, $operand);", "    $result = $operand[0];\n    for\
    \ ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n\
    \            case '+':\n                $result += $operand[$i + 1];\n       \
    \         break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]);", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/*", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * Test cases\n */\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    echo \"\\n\";\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5, 6];\necho\
    \ do_algebra($operator, $operand);\necho \"\\n\";\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5, 6, 7];\necho do_algebra($operator, $operand);\necho \"\
    \\n\";\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5, 6, 7, 8];\necho\
    \ do_algebra($operator, $operand);\necho \"\\n\";\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5, 6, 7, 8, 9];\necho do_algebra($operator, $operand);\n\
    echo \"\\n\";\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\necho do_algebra($operator, $operand);\necho \"\\n\";\n\n$operator =\
    \ ['+', '*', '-'];", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "  $result = $operand[0];\n\
    \  for ($i = 0; $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n\
    \      case '+':\n        $result += $operand[$i + 1];\n        break;\n     \
    \ case '-':\n        $result -= $operand[$i + 1];\n        break;\n      case\
    \ '*':\n        $result *= $operand[$i + 1];\n        break;\n      case '//':\n\
    \        $result = floor($result / $operand[$i + 1]);\n        break;\n      case\
    \ '**':\n        $result = pow($result, $operand[$i + 1]);\n        break;\n \
    \   }\n  }\n  return $result;\n}\n\n/*\nGiven an array of integers, return the\
    \ sum of the integers that are divisible by 3.\nExample:\narray = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]\nresult = 3 + 6 + 9\n=> result = 18\n*/", "    $result =\
    \ $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n/*", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = $operand[0];\n    for ($i = 0; $i <\
    \ count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i\
    \ < count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = $operand[0];\n    for ($i = 0; $i <\
    \ count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = $operand[0];\n    for ($i = 0; $i <\
    \ count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0;\
    \ $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n         \
    \   case '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = $operand[0];\n    for ($i = 0; $i <\
    \ count($operator); $i++) {\n        switch ($operator[$i]) {\n            case\
    \ '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n$operator = ['+', '*',\
    \ '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n/*\n\
    \    ----TESTE----\n*/\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    \necho do_algebra($operator, $operand);", "    $result = $operand[0];\n    for\
    \ ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n\
    \            case '+':\n                $result += $operand[$i + 1];\n       \
    \         break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result /= $operand[$i + 1];\n                break;\n           \
    \ case '**':\n                $result = pow($result, $operand[$i + 1]);\n    \
    \            break;\n        }\n    }\n    return $result;\n}\n\n/*\n * Test cases\n\
    \ */\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]); // 9\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5, 6]); // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5, 6, 7]); // 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8]); //\
    \ 9\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9]); // 9\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10]); // 9\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]); // 9\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]); // 9\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]); // 9\necho do_algebra(", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5]);", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "  $result = $operand[0];\n\
    \  for ($i = 0; $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n\
    \      case '+':\n        $result += $operand[$i + 1];\n        break;\n     \
    \ case '-':\n        $result -= $operand[$i + 1];\n        break;\n      case\
    \ '*':\n        $result *= $operand[$i + 1];\n        break;\n      case '//':\n\
    \        $result = floor($result / $operand[$i + 1]);\n        break;\n      case\
    \ '**':\n        $result = pow($result, $operand[$i + 1]);\n        break;\n \
    \   }\n  }\n  return $result;\n}\n", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch\
    \ ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\
    \t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\
    \t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\t\t\t\
    \tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n\
    $operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result = floor($result / $operand[$i + 1]);\n      \
    \          break;\n            case '**':\n                $result = pow($result,\
    \ $operand[$i + 1]);\n                break;\n        }\n    }\n    return $result;\n\
    }\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator,\
    \ $operand);", "\t$result = $operand[0];\n\tfor ($i = 0; $i < count($operator);\
    \ $i++) {\n\t\tswitch ($operator[$i]) {\n\t\t\tcase '+':\n\t\t\t\t$result += $operand[$i\
    \ + 1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\
    \t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\t\
    break;\n\t\t\tcase '//':\n\t\t\t\t$result = floor($result / $operand[$i + 1]);\n\
    \t\t\t\tbreak;\n\t\t\tcase '**':\n\t\t\t\t$result = pow($result, $operand[$i +\
    \ 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n\
    \        switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n/*", "    $result = $operand[0];\n    for ($i = 0;\
    \ $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n         \
    \   case '+':\n                $result += $operand[$i + 1];\n                break;\n\
    \            case '-':\n                $result -= $operand[$i + 1];\n       \
    \         break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "  $result = $operand[0];\n  for ($i = 0; $i < count($operator); $i++) {\n    switch\
    \ ($operator[$i]) {\n      case '+':\n        $result += $operand[$i + 1];\n \
    \       break;\n      case '-':\n        $result -= $operand[$i + 1];\n      \
    \  break;\n      case '*':\n        $result *= $operand[$i + 1];\n        break;\n\
    \      case '//':\n        $result = floor($result / $operand[$i + 1]);\n    \
    \    break;\n      case '**':\n        $result = pow($result, $operand[$i + 1]);\n\
    \        break;\n    }\n  }\n  return $result;\n}\n\necho do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\n\
    echo do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'],\
    \ [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\n\
    echo do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\necho do", "    $result = $operand[0];\n\
    \    for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "    $result = $operand[0];\n \
    \   for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i + 1];\n   \
    \             break;\n            case '-':\n                $result -= $operand[$i\
    \ + 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);",
  "    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n \
    \       switch ($operator[$i]) {\n            case '+':\n                $result\
    \ += $operand[$i + 1];\n                break;\n            case '-':\n      \
    \          $result -= $operand[$i + 1];\n                break;\n            case\
    \ '*':\n                $result *= $operand[$i + 1];\n                break;\n\
    \            case '//':\n                $result = floor($result / $operand[$i\
    \ + 1]);\n                break;\n            case '**':\n                $result\
    \ = pow($result, $operand[$i + 1]);\n                break;\n        }\n    }\n\
    \    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4,\
    \ 5];\necho do_algebra($operator, $operand);", "  $result = $operand[0];\n  for\
    \ ($i = 0; $i < count($operator); $i++) {\n    if ($operator[$i] == '+') {\n \
    \     $result += $operand[$i + 1];\n    } elseif ($operator[$i] == '-') {\n  \
    \    $result -= $operand[$i + 1];\n    } elseif ($operator[$i] == '*') {\n   \
    \   $result *= $operand[$i + 1];\n    } elseif ($operator[$i] == '//') {\n   \
    \   $result = floor($result / $operand[$i + 1]);\n    } elseif ($operator[$i]\
    \ == '**') {\n      $result = pow($result, $operand[$i + 1]);\n    }\n  }\n  return\
    \ $result;\n}\n\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5]);", "    $result\
    \ = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        switch\
    \ ($operator[$i]) {\n            case '+':\n                $result += $operand[$i\
    \ + 1];\n                break;\n            case '-':\n                $result\
    \ -= $operand[$i + 1];\n                break;\n            case '*':\n      \
    \          $result *= $operand[$i + 1];\n                break;\n            case\
    \ '//':\n                $result /= $operand[$i + 1];\n                break;\n\
    \            case '**':\n                $result **= $operand[$i + 1];\n     \
    \           break;\n        }\n    }\n    return $result;\n}\n\n/*\n  Given a\
    \ string, return the first character that is not repeated anywhere in the string.\n\
    \  For example, given \"abcdab\", return \"c\".\n  Given \"xyzxyz\", return \"\
    y\".\n  Given \"aabb\", return \"\".\n  If there are no unique characters, return\
    \ an empty string.\n*/", "    $result = $operand[0];\n    for ($i = 0; $i < count($operator);\
    \ $i++) {\n        switch ($operator[$i]) {\n            case '+':\n         \
    \       $result += $operand[$i + 1];\n                break;\n            case\
    \ '-':\n                $result -= $operand[$i + 1];\n                break;\n\
    \            case '*':\n                $result *= $operand[$i + 1];\n       \
    \         break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i + 1]);\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand\
    \ = [2, 3, 4, 5];\necho do_algebra($operator, $operand);", "\t$result = $operand[0];\n\
    \tfor ($i = 0; $i < count($operator); $i++) {\n\t\tswitch ($operator[$i]) {\n\t\
    \t\tcase '+':\n\t\t\t\t$result += $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '-':\n\t\t\t\t$result -= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\
    \t\t\t\t$result *= $operand[$i + 1];\n\t\t\t\tbreak;\n\t\t\tcase '//':\n\t\t\t\
    \t$result = floor($result / $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t\tcase '**':\n\
    \t\t\t\t$result = pow($result, $operand[$i + 1]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\n$operator = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\n\
    echo do_algebra($operator, $operand);", "    $result = $operand[0];\n    for ($i\
    \ = 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n    \
    \        case '+':\n                $result += $operand[$i + 1];\n           \
    \     break;\n            case '-':\n                $result -= $operand[$i +\
    \ 1];\n                break;\n            case '*':\n                $result\
    \ *= $operand[$i + 1];\n                break;\n            case '//':\n     \
    \           $result = floor($result / $operand[$i + 1]);\n                break;\n\
    \            case '**':\n                $result = pow($result, $operand[$i +\
    \ 1]);\n                break;\n        }\n    }\n    return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

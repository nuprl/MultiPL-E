name: HumanEval_73_smallest_change
language: php
prompt: "<?php\n/* Given an array arr of integers, find the minimum number of elements\
  \ that\nneed to be changed to make the array palindromic. A palindromic array is\
  \ an array that\nis read the same backwards and forwards. In one change, you can\
  \ change one element to any other element.\nFor example:\n>>> smallest_change(array(1,\
  \ 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1, 2, 3, 4, 3, 2, 2))\n1\n\
  >>> smallest_change(array(1, 2, 3, 2, 1))\n0*/\nfunction smallest_change($arr) {\n"
tests: "function candidate(...$args) {\n    return smallest_change(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 4, 7, 9, 6)) !==\
  \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
  \ 4, 3, 2, 2)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 4, 2)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 4, 4, 2)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 1, 1, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $count = 0;\n    for ($i = 0; $i < count($arr) / 2; $i++) {\n \
    \       if ($arr[$i] != $arr[count($arr) - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_length = count($arr);\n    $arr_half = floor($arr_length\
    \ / 2);\n    $changes = 0;\n    for ($i = 0; $i < $arr_half; $i++) {\n       \
    \ if ($arr[$i] != $arr[$arr_length - $i - 1]) {\n            $changes++;\n   \
    \     }\n    }\n    return $changes;\n}\n\n/* Given an array arr of integers,\
    \ find the minimum number of elements that\nneed to be changed to make the array\
    \ palindromic. A palindromic array is an array that\nis read the same backwards\
    \ and forwards. In one change, you can change one element to any other element.\n\
    For example:\n>>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1,\
    \ 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "  $len\
    \ = count($arr);\n  $left = 0;\n  $right = $len - 1;\n  $changes = 0;\n  while\
    \ ($left < $right) {\n    if ($arr[$left] != $arr[$right]) {\n      $changes++;\n\
    \    }\n    $left++;\n    $right--;\n  }\n  return $changes;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr) . \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) . \"\\n\";\n$arr = array(1, 2,\
    \ 3, 2, 1);\necho smallest_change($arr) . \"\\n\";", "  $count = 0;\n  $len =\
    \ count($arr);\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($arr[$i] != $arr[$len\
    \ - $i - 1]) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n\
    \    $mid = floor($arr_len / 2);\n    $left = 0;\n    $right = $arr_len - 1;\n\
    \    $changes = 0;\n    while ($left < $mid) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $changes++;\n        }\n        $left++;\n        $right--;\n\
    \    }\n    return $changes;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n    $i = 0;\n\
    \    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);",
  "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n   \
    \ while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $n = count($arr);\n    $i = 0;\n\
    \    $j = $n - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $n = count($arr);\n\
    \    $i = 0;\n    $j = $n - 1;\n    $count = 0;\n    while ($i < $j) {\n     \
    \   if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n/* Given an array arr of integers,\
    \ find the minimum number of elements that\nneed to be changed to make the array\
    \ palindromic. A palindromic array is an array that\nis read the same backwards\
    \ and forwards. In one change, you can change one element to any other element.\n\
    For example:\n>>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1,\
    \ 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "\t\
    $len = count($arr);\n\t$count = 0;\n\tfor ($i = 0; $i < $len / 2; $i++) {\n\t\t\
    if ($arr[$i] != $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n",
  "    $count = 0;\n    $i = 0;\n    $j = count($arr) - 1;\n    while ($i < $j) {\n\
    \        if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3,\
    \ 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n\
    \    $arr_reversed = array_reverse($arr);\n    $arr_len_half = floor($arr_len\
    \ / 2);\n    $count = 0;\n    for ($i = 0; $i < $arr_len_half; $i++) {\n     \
    \   if ($arr[$i] != $arr_reversed[$i]) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n\
    \    $changes = 0;\n    while ($left < $right) {\n        if ($arr[$left] == $arr[$right])\
    \ {\n            $left++;\n            $right--;\n        } else {\n         \
    \   $changes++;\n            if ($arr[$left + 1] == $arr[$right]) {\n        \
    \        $left++;\n            } else if ($arr[$left] == $arr[$right - 1]) {\n\
    \                $right--;\n            } else {\n                $left++;\n \
    \               $right--;\n            }\n        }\n    }\n    return $changes;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_len = count($arr);\n    $arr_rev = array_reverse($arr);\n\
    \    $count = 0;\n    for ($i = 0; $i < $arr_len; $i++) {\n        if ($arr[$i]\
    \ != $arr_rev[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n", " \
    \   $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n  \
    \  while ($i < $j) {\n        if ($arr[$i] == $arr[$j]) {\n            $i++;\n\
    \            $j--;\n        } else {\n            $count++;\n            if ($arr[$i]\
    \ < $arr[$j]) {\n                $i++;\n            } else {\n               \
    \ $j--;\n            }\n        }\n    }\n    return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "  $count = 0;\n\
    \  $len = count($arr);\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n    $count\
    \ = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $count++;\n        }\n        $left++;\n        $right--;\n \
    \   }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $count = 0;\n    $i = 0;\n    $j =\
    \ $len - 1;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n    \
    \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n", "    $len = count($arr);\n\
    \    $count = 0;\n    for ($i = 0; $i < $len/2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len-$i-1]) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_length\
    \ = count($arr);\n    $left = 0;\n    $right = $arr_length - 1;\n    $changes\
    \ = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $changes++;\n        }\n        $left++;\n        $right--;\n\
    \    }\n    return $changes;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len -\
    \ $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "\t$count = 0;\n\t$len = count($arr);\n\tfor ($i = 0; $i < $len / 2; $i++)\
    \ {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n    while ($left < $right)\
    \ {\n        if ($arr[$left] != $arr[$right]) {\n            $count++;\n     \
    \   }\n        $left++;\n        $right--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n   \
    \ while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $changes = 0;\n \
    \   while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $changes++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $changes;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n\
    \    while ($left < $right) {\n        if ($arr[$left] != $arr[$right]) {\n  \
    \          $count++;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n\
    \    $count = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $count++;\n        }\n        $left++;\n        $right--;\n \
    \   }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $start = 0;\n    $end = $len - 1;\n\
    \    $changes = 0;\n    while ($start < $end) {\n        if ($arr[$start] != $arr[$end])\
    \ {\n            $changes++;\n        }\n        $start++;\n        $end--;\n\
    \    }\n    return $changes;\n}\n", "    $len = count($arr);\n    $min = $len;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for ($j = 0;\
    \ $j < $len; $j++) {\n            if ($arr[$i + $j] != $arr[$len - 1 - $j]) {\n\
    \                $count++;\n            }\n        }\n        if ($count < $min)\
    \ {\n            $min = $count;\n        }\n    }\n    return $min;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n", "\t$len = count($arr);\n\t$i = 0;\n\
    \t$j = $len - 1;\n\t$count = 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i] != $arr[$j])\
    \ {\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn $count;\n}\n\n\
    $arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n\
    \    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len -\
    \ $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "\t$count = 0;\n\t$len = count($arr);\n\tfor ($i = 0; $i < $len / 2; $i++)\
    \ {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\
    \treturn $count;\n}\n", "    $count = 0;\n    $len = count($arr);\n    $mid =\
    \ floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i\
    \ < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "\t$len = count($arr);\n\
    \t$i = 0;\n\t$j = $len - 1;\n\t$count = 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i]\
    \ != $arr[$j]) {\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n\
    \    $i = 0;\n    $j = $arr_len - 1;\n    $count = 0;\n    while ($i < $j) {\n\
    \        if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $count;\n}\n", "\t$count = 0;\n\t\
    $len = count($arr);\n\tfor ($i = 0; $i < $len / 2; $i++) {\n\t\tif ($arr[$i] !=\
    \ $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    $arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr) . \"\\n\";\n\
    $arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) . \"\\n\";\n$arr\
    \ = array(1, 2, 3, 2, 1);\necho smallest_change($arr) . \"\\n\";", "  $len = count($arr);\n\
    \  $left = 0;\n  $right = $len - 1;\n  $changes = 0;\n  while ($left < $right)\
    \ {\n    if ($arr[$left] != $arr[$right]) {\n      $changes++;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return $changes;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr) . \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr) . \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr)\
    \ . \"\\n\";", "\t$len = count($arr);\n\t$i = 0;\n\t$j = $len - 1;\n\t$count =\
    \ 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i] != $arr[$j]) {\n\t\t\t$count++;\n\t\
    \t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5,\
    \ 4, 7, 9, 6);\necho smallest_change($arr);", "    $count = 0;\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len -\
    \ $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "\t$arr_len = count($arr);\n\t$i = 0;\n\t$j = $arr_len - 1;\n\t$changes =\
    \ 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i] != $arr[$j]) {\n\t\t\t$changes++;\n\
    \t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn $changes;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "\t$len = count($arr);\n\
    \t$left = 0;\n\t$right = $len - 1;\n\t$count = 0;\n\twhile ($left < $right) {\n\
    \t\tif ($arr[$left] != $arr[$right]) {\n\t\t\t$count++;\n\t\t}\n\t\t$left++;\n\
    \t\t$right--;\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $i = 0;\n    $j\
    \ = count($arr) - 1;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j])\
    \ {\n            $count++;\n        }\n        $i++;\n        $j--;\n    }\n \
    \   return $count;\n}\n", "    $count = 0;\n    $len = count($arr);\n    for ($i\
    \ = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"<br>\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"<br>\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"<br>\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\n$arr\
    \ = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);", "  $len = count($arr);\n  $i = 0;\n\
    \  $j = $len - 1;\n  $count = 0;\n  while ($i < $j) {\n    if ($arr[$i] != $arr[$j])\
    \ {\n      $count++;\n    }\n    $i++;\n    $j--;\n  }\n  return $count;\n}\n\n\
    $arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "\t$count = 0;\n\t$len = count($arr);\n\
    \tfor ($i = 0; $i < $len / 2; $i++) {\n\t\tif ($arr[$i] != $arr[$len - $i - 1])\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3,\
    \ 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Given an array arr of integers, find the minimum\
    \ number of elements that\nneed to be changed to make the array palindromic. A\
    \ palindromic array is an array that\nis read the same backwards and forwards.\
    \ In one change, you can change one element to any other element.\nFor example:\n\
    >>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1,\
    \ 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "  \
    \  $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n   \
    \ while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Given an array arr of integers,\
    \ find the minimum number of elements that\nneed to be changed to make the array\
    \ palindromic. A palindromic array is an array that\nis read the same backwards\
    \ and forwards. In one change, you can change one element to any other element.\n\
    For example:\n>>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1,\
    \ 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "  \
    \  $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n    $i = 0;\n\
    \    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "  $len = count($arr);\n  $count = 0;\n  for ($i = 0; $i < $len /\
    \ 2; $i++) {\n    if ($arr[$i] != $arr[$len - $i - 1]) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n    $count\
    \ = 0;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len\
    \ - $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n\
    \    $count = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $count++;\n        }\n        $left++;\n        $right--;\n \
    \   }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_length = count($arr);\n    $left = 0;\n    $right = $arr_length\
    \ - 1;\n    $count = 0;\n    while ($left < $right) {\n        if ($arr[$left]\
    \ != $arr[$right]) {\n            $count++;\n        }\n        $left++;\n   \
    \     $right--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $length = count($arr);\n    for ($i = 0; $i\
    \ < $length / 2; $i++) {\n        if ($arr[$i] != $arr[$length - $i - 1]) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_len = count($arr);\n    $arr_mid = floor($arr_len / 2);\n\
    \    $arr_left = array_slice($arr, 0, $arr_mid);\n    $arr_right = array_slice($arr,\
    \ $arr_mid + ($arr_len % 2), $arr_mid);\n    $arr_right = array_reverse($arr_right);\n\
    \    $arr_left_len = count($arr_left);\n    $arr_right_len = count($arr_right);\n\
    \    $arr_left_mid = floor($arr_left_len / 2);\n    $arr_right_mid = floor($arr_right_len\
    \ / 2);\n    $arr_left_left = array_slice($arr_left, 0, $arr_left_mid);\n    $arr_left_right\
    \ = array_slice($arr_left, $arr_left_mid + ($arr_left_len % 2), $arr_left_mid);\n\
    \    $arr_right_left = array_slice($arr_right, 0, $arr_right_mid);\n    $arr_right_right\
    \ = array_slice($arr_right, $arr_right_mid + ($arr_right_len % 2), $arr_right_mid);\n\
    \    $arr_left_left_len = count($arr_left_left);\n    $arr_left_right_len = count($arr_left_right);\n\
    \    $arr_right_left_len = count($arr_right_left);\n    $arr_right_right_len =\
    \ count($arr_right_right);\n    $arr_left_left_mid = floor($arr_left_left_len\
    \ / 2);\n    $arr_left_right_mid = floor($arr_left_right_len / 2);\n    $arr_right_left_mid\
    \ = floor($arr_right_left_len / 2);\n    $arr_right_right_mid = floor($arr_right_right_len\
    \ / 2);\n    $arr_left_left_left = array_slice($arr_left_left, 0, $arr_left_left_mid);\n\
    \    $arr_left_left_right = array_slice($arr_left_left,", "    $len = count($arr);\n\
    \    $count = 0;\n    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n   \
    \     if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    $mid = floor($len / 2);\n    for ($i = 0; $i < $mid;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);", "\t$len = count($arr);\n\t$i = 0;\n\t$j =\
    \ $len - 1;\n\t$count = 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i] != $arr[$j])\
    \ {\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn $count;\n}\n\n\
    $arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n", "    $arr_len\
    \ = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $arr_len / 2; $i++) {\n\
    \        if ($arr[$i] != $arr[$arr_len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);", "    $count = 0;\n    $len = count($arr);\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1])\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr =\
    \ array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n\
    \n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "  $len = count($arr);\n  $start = 0;\n  $end = $len - 1;\n  $count = 0;\n  while\
    \ ($start < $end) {\n    if ($arr[$start] != $arr[$end]) {\n      $count++;\n\
    \    }\n    $start++;\n    $end--;\n  }\n  return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "  $count = 0;\n\
    \  $length = count($arr);\n  for ($i = 0; $i < $length / 2; $i++) {\n    if ($arr[$i]\
    \ != $arr[$length - $i - 1]) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "\t$count = 0;\n\tfor ($i = 0; $i < count($arr) / 2; $i++) {\n\t\t\
    if ($arr[$i] != $arr[count($arr) - 1 - $i]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);",
  "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n   \
    \ while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "\t$len = count($arr);\n\
    \t$i = 0;\n\t$j = $len - 1;\n\t$count = 0;\n\twhile ($i < $j) {\n\t\tif ($arr[$i]\
    \ != $arr[$j]) {\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_len = count($arr);\n    $i = 0;\n    $j = $arr_len - 1;\n\
    \    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n\
    \            $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n/* Given an array arr\
    \ of integers, find the minimum number of elements that\nneed to be changed to\
    \ make the array palindromic. A palindromic array is an array that\nis read the\
    \ same backwards and forwards. In one change, you can change one element to any\
    \ other element.\nFor example:\n>>> smallest_change(array(1, 2, 3, 5, 4, 7, 9,\
    \ 6))\n4\n>>> smallest_change(array(1, 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1,\
    \ 2, 3, 2, 1))\n0*/", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n\
    \    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n\
    \            $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);", "    $arr_len = count($arr);\n    $count\
    \ = 0;\n    for ($i = 0; $i < $arr_len / 2; $i++) {\n        if ($arr[$i] != $arr[$arr_len\
    \ - $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $arr_len = count($arr);\n    $left = 0;\n    $right = $arr_len\
    \ - 1;\n    $count = 0;\n    while ($left < $right) {\n        if ($arr[$left]\
    \ != $arr[$right]) {\n            $count++;\n        }\n        $left++;\n   \
    \     $right--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $n = count($arr);\n \
    \   $i = 0;\n    $j = $n - 1;\n    $count = 0;\n    while ($i < $j) {\n      \
    \  if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $count = 0;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "  \
    \  $count = 0;\n    $len = count($arr);\n    $mid = floor($len / 2);\n    for\
    \ ($i = 0; $i < $mid; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "  $len = count($arr);\n\
    \  $i = 0;\n  $j = $len - 1;\n  $count = 0;\n  while ($i < $j) {\n    if ($arr[$i]\
    \ != $arr[$j]) {\n      $count++;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n$arr1 = array(1, 2, 3, 4, 3, 2, 2);\n\
    $arr2 = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";\necho\
    \ smallest_change($arr1);\necho \"\\n\";\necho smallest_change($arr2);\necho \"\
    \\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len\
    \ / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);", "    $count = 0;\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len -\
    \ $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $len = count($arr);\n    $min_changes = 0;\n    for ($i = 0; $i < $len\
    \ / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $min_changes++;\n\
    \        }\n    }\n    return $min_changes;\n}\n\n$arr = array(1, 2, 3, 5, 4,\
    \ 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2,\
    \ 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n    while ($left < $right)\
    \ {\n        if ($arr[$left] != $arr[$right]) {\n            $count++;\n     \
    \   }\n        $left++;\n        $right--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $arr_len = count($arr);\n    $i = 0;\n    $j = $arr_len - 1;\n    $count =\
    \ 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n           \
    \ $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "\t$len = count($arr);\n\t$i = 0;\n\t$j = $len - 1;\n\t$count = 0;\n\
    \twhile ($i < $j) {\n\t\tif ($arr[$i] != $arr[$j]) {\n\t\t\t$count++;\n\t\t}\n\
    \t\t$i++;\n\t\t$j--;\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4,\
    \ 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2,\
    \ 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "  $len = count($arr);\n\
    \  $start = 0;\n  $end = $len - 1;\n  $count = 0;\n  while ($start < $end) {\n\
    \    if ($arr[$start] != $arr[$end]) {\n      $count++;\n    }\n    $start++;\n\
    \    $end--;\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "\t$len = count($arr);\n\t$count = 0;\n\
    \tfor ($i = 0; $i < $len / 2; $i++) {\n\t\tif ($arr[$i] != $arr[$len - $i - 1])\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3,\
    \ 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Given an array arr of integers, find the minimum\
    \ number of elements that\nneed to be changed to make the array palindromic. A\
    \ palindromic array is an array that\nis read the same backwards and forwards.\
    \ In one change, you can change one element to any other element.\nFor example:\n\
    >>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1,\
    \ 2, 3, 4, 3, 2, 2))\n1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "  \
    \  $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n   \
    \ while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "    $len =\
    \ count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i\
    \ < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n      \
    \  }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n\
    \    $left = 0;\n    $right = $arr_len - 1;\n    $changes = 0;\n    while ($left\
    \ < $right) {\n        if ($arr[$left] != $arr[$right]) {\n            $changes++;\n\
    \        }\n        $left++;\n        $right--;\n    }\n    return $changes;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\nprint_r(smallest_change(array(1,\
    \ 2, 3, 5, 4, 7, 9, 6)));\nprint_r(smallest_change(array(1, 2, 3, 4, 3, 2, 2)));\n\
    print_r(smallest_change(array(1, 2, 3, 2, 1)));", "\t$arr_length = count($arr);\n\
    \t$arr_reverse = array_reverse($arr);\n\t$count = 0;\n\tfor ($i = 0; $i < $arr_length;\
    \ $i++) {\n\t\tif ($arr[$i] != $arr_reverse[$i]) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr)\
    \ . \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) .\
    \ \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr) . \"\\n\"\
    ;", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Given an array of integers, find\
    \ the maximum sum of subsequence of given array\nwhere subsequence contains no\
    \ adjacent elements.\nFor example:\n>>> max_sum_subsequence(array(1, 2, 3, 4,\
    \ 5))\n9\n>>> max_sum_subsequence(array(5, 1, 1, 5))\n10\n>>> max_sum_subsequence(array(5,\
    \ 5, 10, 100, 10, 5))\n110\n*/", "    $len = count($arr);\n    $i = 0;\n    $j\
    \ = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i] !=\
    \ $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n \
    \   $count = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n\
    \            $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $start = 0;\n    $end = $len - 1;\n    $count = 0;\n    while ($start < $end)\
    \ {\n        if ($arr[$start] != $arr[$end]) {\n            $count++;\n      \
    \  }\n        $start++;\n        $end--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n\
    \    while ($left < $right) {\n        if ($arr[$left] != $arr[$right]) {\n  \
    \          $count++;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "  $count = 0;\n  $len = count($arr);\n  for ($i = 0; $i < $len /\
    \ 2; $i++) {\n    if ($arr[$i] != $arr[$len - $i - 1]) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"<br>\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"<br>\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"<br>\";", "  $count = 0;\n  $i = 0;\n  $j = count($arr)\
    \ - 1;\n  while ($i < $j) {\n    if ($arr[$i] != $arr[$j]) {\n      $count++;\n\
    \    }\n    $i++;\n    $j--;\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3,\
    \ 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n", "    $len = count($arr);\n    $i = 0;\n    $j = $len\
    \ - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j])\
    \ {\n            $count++;\n        }\n        $i++;\n        $j--;\n    }\n \
    \   return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n/* Given a string, find the length of the longest substring without repeating\
    \ characters.\nFor example:\n>>> longest_substring('abcabcbb')\n3\n>>> longest_substring('bbbbb')\n\
    1\n>>> longest_substring('pwwkew')\n3*/", "    $count = 0;\n    $size = count($arr);\n\
    \    for ($i = 0; $i < $size/2; $i++) {\n        if ($arr[$i] != $arr[$size -\
    \ $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "  $count\
    \ = 0;\n  $len = count($arr);\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr) . \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr) . \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr)\
    \ . \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    $mid = floor($len\
    \ / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($arr[$i] != $arr[$len\
    \ - $i - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n/* Given an array of integers, find the minimum number of elements that need\
    \ to be changed to make the array palindromic.\nA palindromic array is an array\
    \ that is read the same backwards and forwards. In one change, you can change\
    \ one element to any other element.\nFor example:\n>>> smallest_change(array(1,\
    \ 2, 3, 5, 4, 7, 9, 6))\n4\n>>> smallest_change(array(1, 2, 3, 4, 3, 2, 2))\n\
    1\n>>> smallest_change(array(1, 2, 3, 2, 1))\n0*/", "    $len = count($arr);\n\
    \    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n    while ($left < $right)\
    \ {\n        if ($arr[$left] != $arr[$right]) {\n            $count++;\n     \
    \   }\n        $left++;\n        $right--;\n    }\n    return $count;\n}\n", " \
    \   $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n  \
    \  while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n\
    \        }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr\
    \ = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "\t$arr_len = count($arr);\n\t$arr_rev\
    \ = array_reverse($arr);\n\t$diff_count = 0;\n\tfor ($i = 0; $i < $arr_len; $i++)\
    \ {\n\t\tif ($arr[$i] != $arr_rev[$i]) {\n\t\t\t$diff_count++;\n\t\t}\n\t}\n\t\
    return $diff_count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "  $len = count($arr);\n \
    \ $i = 0;\n  $j = $len - 1;\n  $count = 0;\n  while ($i < $j) {\n    if ($arr[$i]\
    \ != $arr[$j]) {\n      $count++;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n\
    \    $changes = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $changes++;\n        }\n        $left++;\n        $right--;\n\
    \    }\n    return $changes;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n    $i\
    \ = 0;\n    $j = $arr_len - 1;\n    $change_count = 0;\n    while ($i < $j) {\n\
    \        if ($arr[$i] != $arr[$j]) {\n            $change_count++;\n        }\n\
    \        $i++;\n        $j--;\n    }\n    return $change_count;\n}\n\n$arr = array(1,\
    \ 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    \n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);", "    $len = count($arr);\n    $i\
    \ = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if\
    \ ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Given an array of integers, find the maximum sum of a subsequence\
    \ with the constraint that no 2 numbers in the sequence should be adjacent in\
    \ the array.\nSo 3 2 7 10 should return 13 (sum of 3 and 10) or 3 2 5 10 7 should\
    \ return 15 (sum of 3, 5 and 7).\nAnswer the question in most efficient way.\n\
    For example:\n>>> max_sum_no_adjacent(array(5, 5, 10, 100, 10, 5))\n110\n>>> max_sum_no_adjacent(array(1,\
    \ 2, 3))\n4\n>>> max_sum_no_adjacent(array(1, 20, 3))\n20*/", "  $count = 0;\n\
    \  $len = count($arr);\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\nprint_r(smallest_change($arr));\n\n$arr\
    \ = array(1, 2, 3, 4, 3, 2, 2);\nprint_r(smallest_change($arr));\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\nprint_r(smallest_change($arr));", "    $count = 0;\n    $len =\
    \ count($arr);\n    $mid = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++)\
    \ {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);", "    $count = 0;\n    $len = count($arr);\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1])\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr =\
    \ array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"<br>\";\n\
    $arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"<br>\"\
    ;\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"<br>\";",
  "  $len = count($arr);\n  $count = 0;\n  for ($i = 0; $i < $len / 2; $i++) {\n \
    \   if ($arr[$i] != $arr[$len - $i - 1]) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);",
  "    $arr_len = count($arr);\n    $i = 0;\n    $j = $arr_len - 1;\n    $count =\
    \ 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n           \
    \ $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "  $len = count($arr);\n  $i = 0;\n  $j = $len - 1;\n  $count = 0;\n\
    \  while ($i < $j) {\n    if ($arr[$i] != $arr[$j]) {\n      $count++;\n    }\n\
    \    $i++;\n    $j--;\n  }\n  return $count;\n}\n", "    $len = count($arr);\n\
    \    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n   \
    \     if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $n = count($arr);\n\
    \    $count = 0;\n    for ($i = 0; $i < $n / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$n - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Given an array of integers, find the maximum sum of a subsequence\
    \ with the constraint that no 2 numbers in the sequence should be adjacent in\
    \ the array.\nSo 3 2 7 10 should return 13 (sum of 3 and 10) or 3 2 5 10 7 should\
    \ return 15 (sum of 3, 5 and 7).\nAnswer the question in most efficient way.\n\
    For example:\n>>> max_sum(array(3, 2, 7, 10))\n13\n>>> max_sum(array(3, 2, 5,\
    \ 10, 7))\n15\n>>> max_sum(array(5, 5, 10, 100, 10, 5))\n110\n>>> max_sum(array(1,\
    \ 2, 3))\n4\n>>> max_sum(array(1, 20, 3))\n20*/", "    $count = 0;\n    $len =\
    \ count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "\t$len = count($arr);\n\t$left = 0;\n\t$right = $len - 1;\n\t\
    $count = 0;\n\twhile ($left < $right) {\n\t\tif ($arr[$left] != $arr[$right])\
    \ {\n\t\t\t$count++;\n\t\t}\n\t\t$left++;\n\t\t$right--;\n\t}\n\treturn $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $arr_length = count($arr);\n    for ($i = 0;\
    \ $i < $arr_length / 2; $i++) {\n        if ($arr[$i] != $arr[$arr_length - $i\
    \ - 1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    $arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\
    \\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\"\
    ;", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $arr_len = count($arr);\n\
    \    $i = 0;\n    $j = $arr_len - 1;\n    $count = 0;\n    while ($i < $j) {\n\
    \        if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3,\
    \ 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr)\
    \ . \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) .\
    \ \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr) . \"\\n\"\
    ;", "\t$count = 0;\n\t$len = count($arr);\n\tfor ($i = 0; $i < $len / 2; $i++)\
    \ {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "  $count = 0;\n  $len = count($arr);\n  for ($i = 0; $i < $len /\
    \ 2; $i++) {\n    if ($arr[$i] != $arr[$len - $i - 1]) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n    $i = 0;\n\
    \    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "\t$count = 0;\n\t$len = count($arr);\n\tfor ($i = 0; $i < $len;\
    \ $i++) {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\
    \t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr) . \"\\\
    n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) . \"\\n\"\
    ;\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr) . \"\\n\";", "   \
    \ $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n    $count = 0;\n\
    \    while ($left < $right) {\n        if ($arr[$left] != $arr[$right]) {\n  \
    \          $count++;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "\t$count = 0;\n\t$len = count($arr);\n\t$mid = floor($len/2);\n\t\
    for ($i = 0; $i < $mid; $i++) {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4,\
    \ 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2,\
    \ 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n   \
    \     if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1, 2, 3,\
    \ 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n\
    \    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n   \
    \     if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4,\
    \ 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3,\
    \ 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);",
  "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    $count = 0;\n    while\
    \ ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n\n$arr =\
    \ array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n\
    $arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\"\
    ;\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";",
  "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len = count($arr);\n\
    \    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len / 2; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2,\
    \ 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);", "    $len = count($arr);\n\
    \    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n   \
    \     if ($arr[$i] != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7,\
    \ 9, 6);\necho smallest_change($arr);", "    $arr_length = count($arr);\n    $left\
    \ = 0;\n    $right = $arr_length - 1;\n    $changes = 0;\n    while ($left < $right)\
    \ {\n        if ($arr[$left] != $arr[$right]) {\n            $changes++;\n   \
    \     }\n        $left++;\n        $right--;\n    }\n    return $changes;\n}\n\
    \n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr) . \"\\n\"\
    ;\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr) . \"\\n\";\n\
    $arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr) . \"\\n\";", "    $len\
    \ = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count = 0;\n    while\
    \ ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n            $count++;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return $count;\n}\n", "\t$n\
    \ = count($arr);\n\t$i = 0;\n\t$j = $n - 1;\n\t$count = 0;\n\twhile ($i < $j)\
    \ {\n\t\tif ($arr[$i] != $arr[$j]) {\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\t\t\
    $j--;\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho\
    \ smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\n\
    echo smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho\
    \ smallest_change($arr);\necho \"\\n\";", "    $len = count($arr);\n    $i = 0;\n\
    \    $j = $len - 1;\n    $count = 0;\n    while ($i < $j) {\n        if ($arr[$i]\
    \ != $arr[$j]) {\n            $count++;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $i = 0;\n    $j = $len - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    $count\
    \ = 0;\n    while ($i < $j) {\n        if ($arr[$i] != $arr[$j]) {\n         \
    \   $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count;\n\
    }\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\necho\
    \ \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "\t$count = 0;\n\t$len = count($arr);\n\t$mid = floor($len/2);\n\t\
    for ($i = 0; $i < $mid; $i++) {\n\t\tif ($arr[$i] != $arr[$len - $i - 1]) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(1, 2, 3, 5, 4,\
    \ 7, 9, 6);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1, 2,\
    \ 3, 4, 3, 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n\n$arr = array(1,\
    \ 2, 3, 2, 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if\
    \ ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $len = count($arr);\n    $left = 0;\n    $right = $len - 1;\n\
    \    $count = 0;\n    while ($left < $right) {\n        if ($arr[$left] != $arr[$right])\
    \ {\n            $count++;\n        }\n        $left++;\n        $right--;\n \
    \   }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9, 6);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 4, 3, 2, 2);\necho smallest_change($arr);\n\
    echo \"\\n\";\n$arr = array(1, 2, 3, 2, 1);\necho smallest_change($arr);\necho\
    \ \"\\n\";", "    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($arr[$i] != $arr[$len - $i - 1]) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$arr = array(1, 2, 3, 5, 4, 7, 9,\
    \ 6);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 4, 3,\
    \ 2, 2);\necho smallest_change($arr);\necho \"\\n\";\n$arr = array(1, 2, 3, 2,\
    \ 1);\necho smallest_change($arr);\necho \"\\n\";", "    $count = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($arr[$i]\
    \ != $arr[$len - $i - 1]) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_62_derivative
results:
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $xs[$i] * $i;\n    }\n    return\
    \ $ys;\n}\n\n/*\n>>> poly_eval(array(1, 2, 3), 5)\n86\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $derivative = array();\n    for ($i = 1; $i < $n; $i++) {\n        $derivative[$i\
    \ - 1] = $i * $xs[$i];\n    }\n    return $derivative;\n}\n\n/* Return the value\
    \ of a polynomial at x.\n>>> value(array(3, 1, 2, 4, 5), 2)\n69\n>>> value(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $derivative = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)\n>>> integral(array(1,\
    \ 2, 3, 4))\narray(0, 1, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn value of this polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn the value of the polynomial at\
    \ x.\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3),\
    \ 2)\n17*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $res = array();\n    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n\
    \    }\n    return $res;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> polynomial(array(1, 2, 3), 2)\n17\n>>> polynomial(array(1,\
    \ 2, 3), 3)\n34\n>>> polynomial(array(1, 2, 3), 4)\n57\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 1, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 2, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return a polynomial that is the product of the\
    \ two given polynomials.\n>>> multiply(array(1, 2, 3), array(2, 3, 4))\narray(2,\
    \ 7, 16, 15)\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n  $ys = array();\n  $n =\
    \ count($xs);\n  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n\
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n * Return the value of the polynomial at x.\n * >>> evaluate(array(1,\
    \ 2, 3), 4)\n * 57\n * >>> evaluate(array(1, 2, 3), 0)\n * 1\n * >>> evaluate(array(1,\
    \ 2, 3), 1)\n * 6\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return a polynomial with the same roots as xs.\n\
    >>> horner(array(1, 2, 3))\narray(1, -6, 11)\n>>> horner(array(1, 2, 3, 4))\n\
    array(1, -10, 35, -50)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 5)\n76\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $xs[$i] * $i;\n    }\n    return\
    \ $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 5)\n86\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $derivative = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\n/*\n>>> polyval(array(1, 2, 3), 2)\n17\n\
    >>> polyval(array(1, 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(1,\
    \ 2, 3), 2)\n17\n>>> value(array(1, 2, 3), 3)\n34\n>>> value(array(1, 2, 3), 4)\n\
    57*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(3,\
    \ 1, 2, 4, 5), 2)\n39\n>>> value(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 1.25)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * Return the value of a polynomial at x.\n\
    \ * >>> polyval(array(1, 2, 3), 5)\n * 86\n */\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 3)\n65\n>>> evaluate(array(1, 2, 3), 3)\n18*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at a given point.\n>>>\
    \ evaluate(array(3, 1, 2, 4, 5), 1)\n15\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n\
    49\n>>> evaluate(array(3, 1, 2, 4, 5), 3)\n115\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n\
    >>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* Return the value of a polynomial at x.\n\
    >>> value(array(1, 2, 3), 2)\n17\n>>> value(array(1, 2, 3), 3)\n34\n>>> value(array(1,\
    \ 2, 3), 4)\n57\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> polyval(array(1,\
    \ 2, 3), 4)\n57\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 1)\n15\n\
    >>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(3, 1, 2, 4, 5),\
    \ 3)\n115\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    if (count($xs) < 2) {\n\
    \        return array();\n    }\n    $derivative = array();\n    for ($i = 1;\
    \ $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n    }\n   \
    \ return $derivative;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the\
    \ same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 1)\n6\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 3)\n34\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at a given point.\n>>>\
    \ evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n * Return the value of a polynomial at x.\n * >>> value(array(3,\
    \ 1, 2, 4, 5), 2)\n * 43\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 1.25)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)\n>>> integral(array(1,\
    \ 2, 3, 4))\narray(0, 1, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return an array of coefficients of the polynomial\nxs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n>>> poly(array(1, 2, 3))\narray(1, 2, 3)\n\
    >>> poly(array(1, 2, 3, 4))\narray(1, 2, 3, 4)\n>>> poly(array(1, 2, 3, 4, 5))\n\
    array(1, 2, 3, 4, 5)\n>>> poly(array(1, 2, 3, 4, 5, 6))\narray(1, 2, 3, 4, 5,\
    \ 6)\n>>> poly(array(1, 2, 3, 4, 5, 6, 7))\narray(1, 2, 3, 4, 5, 6, 7)\n>>> poly(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8))\narray(1, 2, 3, 4, 5, 6, 7, 8)\n>>> poly(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9))\narray(1, 2, 3, 4, 5, 6, 7, 8, 9)\n>>> poly(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10))\narray(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n>>> poly(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\narray(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)\n\
    >>> poly(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\narray(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12)\n>>> poly(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13))\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 17 in /tmp/tmptdr1cgtv.php on
    line 17

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$result = array();\n\t\
    for ($i = 1; $i < count($xs); $i++) {\n\t\t$result[] = $i * $xs[$i];\n\t}\n\t\
    return $result;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n47\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 1, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 2, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> polynomial(array(1, 2, 3), 2)\n17\n\
    >>> polynomial(array(1, 2, 3), 0)\n1\n>>> polynomial(array(1, 2, 3), 1)\n6\n*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n * Return the value of a polynomial at x.\n\
    \ * >>> evaluate(array(1, 2, 3), 5)\n * 76\n */\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)\n>>> integral(array(1,\
    \ 2, 3, 4))\narray(0, 1, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$result = array();\n\t\
    for ($i = 1; $i < count($xs); $i++) {\n\t\t$result[] = $i * $xs[$i];\n\t}\n\t\
    return $result;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> value(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(1,\
    \ 2, 3), 4)\n57\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n47\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $derivative = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\n/* Return the value of a polynomial at a\
    \ point.\n>>> evaluate(array(3, 1, 2, 4, 5), 1)\n15\n>>> evaluate(array(3, 1,\
    \ 2, 4, 5), 2)\n49\n>>> evaluate(array(3, 1, 2, 4, 5), 3)\n111*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $result = array();\n    for ($i = 1; $i < $n; $i++) {\n        $result[] =\
    \ $i * $xs[$i];\n    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2,\
    \ 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(1,\
    \ 2, 3), 4)\n57\n>>> value(array(1, 2, 3), 0)\n1\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(3,\
    \ 1, 2, 4, 5), 2)\n55\n>>> value(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $res = array();\n    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n\
    \    }\n    return $res;\n}\n\n/*\n * xs represent coefficients of a polynomial.\n\
    \ * xs[0] + xs[1] * x + xs[2] * x^2 + ....\n * Return integral of this polynomial\
    \ in the same form.\n * >>> integral(array(3, 1, 2, 4, 5))\n * array(0, 3, 0.5,\
    \ 2, 1, 5)\n * >>> integral(array(1, 2, 3))\n * array(0, 1, 1, 1)\n */\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n/*\n>>> evaluate(array(1, 2, 3), 1)\n6\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 3)\n34\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $derivative = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\n/* Return the value of a polynomial at x.\n\
    >>> value(array(1, 2, 3), 3)\n40\n>>> value(array(1, 2, 3), 0)\n1\n>>> value(array(1,\
    \ 2, 3), 1)\n6\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n * Return the value of a polynomial at x.\n\
    \ * >>> evaluate(array(1, 2, 3), 4)\n * 57\n */\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of the polynomial at x.\n>>>\
    \ value(array(3, 1, 2, 4, 5), 2)\n49\n>>> value(array(1, 2, 3), 2)\n17\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* Return the value of the polynomial at x.\n\
    >>> evaluate(array(3, 1, 2, 4, 5), 2)\n41\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $derivative = array();\n    for ($i = 1; $i < $n; $i++) {\n        $derivative[$i\
    \ - 1] = $i * $xs[$i];\n    }\n    return $derivative;\n}\n\n/*\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$n = count($xs);\n\t$ys\
    \ = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ys[] = $xs[$i] * $i;\n\t}\n\
    \treturn $ys;\n}\n\n/*\n>>> horner(array(3, 1, 2, 4, 5), 2)\n49\n>>> horner(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$n = count($xs);\n\t$ys\
    \ = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ys[] = $xs[$i] * $i;\n\t}\n\
    \treturn $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at a given point.\n\
    >>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> value(array(1,\
    \ 2, 3), 2)\n17\n>>> value(array(1, 2, 3), 0)\n1\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n        $result[] =\
    \ $i * $xs[$i];\n    }\n    return $result;\n}\n\n/* xs represent coefficients\
    \ of a polynomial.\nxs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of\
    \ this polynomial in the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0,\
    \ 3, 0.5, 2, 1, 5)\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 1, 2, 4, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 2, 3)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> polyval(array(1,\
    \ 2, 3), 4)\n57\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)\n>>> integral(array(1,\
    \ 2, 3, 4))\narray(0, 1, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 0)\n1\n>>> evaluate(array(1, 2,\
    \ 3), 1)\n6\n>>> evaluate(array(1, 2, 3), -1)\n2*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * xs represent coefficients of a polynomial.\n\
    \ * xs[0] + xs[1] * x + xs[2] * x^2 + ....\n * Return the value of this polynomial\
    \ at x.\n * >>> evaluate(array(3, 1, 2, 4, 5), 2)\n * 41\n * >>> evaluate(array(1,\
    \ 2, 3), 2)\n * 17\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of the polynomial at x.\n>>>\
    \ evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of the polynomial at x.\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 0)\n1\n>>> evaluate(array(1, 2,\
    \ 3), 1)\n6\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * Return the value of a polynomial at a\
    \ given point.\n * >>> evaluate(array(1, 2, 3), 4)\n * 57\n * >>> evaluate(array(1,\
    \ 2, 3), 0)\n * 1\n * >>> evaluate(array(1, 2, 3), -1)\n * -4\n * >>> evaluate(array(1,\
    \ 2, 3), -2)\n * -11\n * >>> evaluate(array(1, 2, 3), -3)\n * -22\n * >>> evaluate(array(1,\
    \ 2, 3), -4)\n * -37\n * >>> evaluate(array(1, 2, 3), -5)\n * -56\n * >>> evaluate(array(1,\
    \ 2, 3), -6)\n * -79\n * >>> evaluate(array(1, 2, 3), -7)\n * -106\n * >>> evaluate(array(1,\
    \ 2, 3), -8)\n * -137\n * >>> evaluate(array(1, 2, 3), -9)\n * -172\n * >>> evaluate(array(1,\
    \ 2, 3), -10)\n * -211\n * >>> evaluate(array(1, 2, 3), -11)\n * -254\n * >>>\
    \ evaluate(array(1, 2, 3), -12)\n * -301\n * >>> evaluate(array(1, 2, 3), -13)\n\
    \ * -352\n * >>> evaluate(array(1, 2, 3), -14)\n * -407\n * >>> evaluate(array(1,\
    \ 2, 3), -15)\n * -466\n * >>> evaluate(array(1, 2, 3), -16)\n * -529\n * >>>\
    \ evaluate(array(1, 2, 3), -17)\n * -596\n * >>> evaluate(array(1, 2, 3), -18)\n\
    \ * -667\n * >>> evaluate(array(1, 2, 3), -19)\n * -742\n * >>> evaluate(array(1,\
    \ 2, 3), -20)\n * -821\n * >>> evaluate\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 17 in /tmp/tmp4pgqkkj3.php on
    line 17

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>>\
    \ evaluate(array(1, 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 1, 1.25)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 3)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $xs[$i] * $i;\n    }\n    return\
    \ $ys;\n}\n\n/* Return the value of a polynomial at a given point.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(3, 1, 2, 4, 5), 0)\n3\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 1)\n11\n>>> evaluate(array(3, 1, 2, 4, 5), -1)\n3\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), -2)\n-5\n>>> evaluate(array(3, 1, 2, 4, 5), -3)\n-23\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), -4)\n-55\n>>> evaluate(array(3, 1, 2, 4, 5), -5)\n-111\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)\n>>> integral(array(1,\
    \ 2, 3, 4))\narray(0, 1, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $res = array();\n   \
    \ $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n\
    \    }\n    return $res;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n>>> evaluate(array(1, 2, 3), 1)\n6\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $res = array();\n   \
    \ for ($i = 1; $i < count($xs); $i++) {\n        $res[] = $i * $xs[$i];\n    }\n\
    \    return $res;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 1)\n15\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n61\n>>> evaluate(array(3, 1, 2, 4, 5), 3)\n139\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$ys = array();\n\tfor ($i\
    \ = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t}\n\treturn $ys;\n\
    }\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\nReturn integral of this polynomial in the same form.\n>>> integral(array(3,\
    \ 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 4, 5)\n>>> integral(array(1, 2, 3))\narray(0,\
    \ 1, 1, 3)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $derivative = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\n/* Return the value of a polynomial at x.\n\
    >>> evaluate(array(3, 1, 2, 4, 5), 2)\n43\n>>> evaluate(array(1, 2, 3), 2)\n11*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of the polynomial represented by xs at\
    \ x.\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3),\
    \ 2)\n17*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $res = array();\n    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n\
    \    }\n    return $res;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(1,\
    \ 2, 3), 5)\n86\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at a point.\n\
    >>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $len = count($xs);\n\
    \    $res = array();\n    for ($i = 1; $i < $len; $i++) {\n        $res[] = $xs[$i]\
    \ * $i;\n    }\n    return $res;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * Returns the value of a polynomial at\
    \ a given point.\n * >>> evaluate(array(1, 2, 3), 4)\n * 57\n * >>> evaluate(array(1,\
    \ 2, 3), 0)\n * 1\n * >>> evaluate(array(1, 2, 3), -1)\n * -4\n */\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at a given point.\n>>>\
    \ evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 0)\n1\n\
    >>> evaluate(array(1, 2, 3), 1)\n6\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 3)\n34\n>>> evaluate(array(1, 2, 3), 4)\n57*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $xs[$i] * $i;\n    }\n    return\
    \ $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1, 2,\
    \ 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$result = array();\n\t\
    for ($i = 1; $i < count($xs); $i++) {\n\t\t$result[] = $i * $xs[$i];\n\t}\n\t\
    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return a polynomial that is the sum of the given\
    \ polynomials.\n>>> add(array(1, 2, 3), array(4, 5, 6))\narray(5, 7, 9)\n>>> add(array(1,\
    \ 2, 3), array(4, 5, 6, 7))\narray(5, 7, 9, 7)\n>>> add(array(1, 2, 3, 4), array(4,\
    \ 5, 6))\narray(5, 7, 9, 4)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n41\n>>> evaluate(array(1, 2, 3), 0)\n1\n>>> evaluate(array(1,\
    \ 2, 3), 1)\n6\n>>> evaluate(array(1, 2, 3), 2)\n17*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 5)\n76\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 1.25)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 0.6666666666666666, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n\
    49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> polyval(array(1,\
    \ 2, 3), 2)\n17\n>>> polyval(array(1, 2, 3), 0)\n1\n>>> polyval(array(1, 2, 3),\
    \ 1)\n6\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $len = count($xs);\n\
    \    $res = array();\n    for ($i = 1; $i < $len; $i++) {\n        $res[] = $xs[$i]\
    \ * $i;\n    }\n    return $res;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $derivative = array();\n    for ($i = 1; $i < $n; $i++) {\n        $derivative[$i\
    \ - 1] = $i * $xs[$i];\n    }\n    return $derivative;\n}\n\n/* xs represent coefficients\
    \ of a polynomial.\nxs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of\
    \ this polynomial in the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0,\
    \ 3, 0.5, 2, 1, 5)\n>>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n * Return the value of a polynomial at a given point.\n\
    \ * >>> evaluate(array(3, 1, 2, 4, 5), 2)\n * 37\n * >>> evaluate(array(1, 2,\
    \ 3), 2)\n * 17\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    $n\
    \ = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n        $ys[$i - 1] = $i *\
    \ $xs[$i];\n    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at\
    \ x.\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 0)\n1\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> roots(array(1, 2, 3))\narray(-1, -3)\n>>>\
    \ roots(array(1, -2, 1))\narray(1)\n>>> roots(array(1, -2, -3, 4))\narray(1, -4)\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn the value of this polynomial at\
    \ x.\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n41\n>>> evaluate(array(1, 2, 3),\
    \ 3)\n22*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n\
    39\n>>> evaluate(array(3, 1, 2, 4, 5), 0)\n3\n>>> evaluate(array(3, 1, 2, 4, 5),\
    \ 1)\n11\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 1.25)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at a point.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of the polynomial at x.\n>>>\
    \ value(array(3, 1, 2, 4, 5), 2)\n49\n>>> value(array(1, 2, 3), 2)\n17\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$n = count($xs);\n\t$ys\
    \ = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t}\n\
    \treturn $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $len = count($xs);\n\
    \    $result = array();\n    for ($i = 1; $i < $len; $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\n/*\n>>> poly_eval(array(1,\
    \ 2, 3), 2)\n17\n>>> poly_eval(array(1, 2, 3), 0)\n1\n>>> poly_eval(array(1, 2,\
    \ 3), 1)\n6\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* Return the value of the polynomial at x.\n\
    >>> value(array(3, 1, 2, 4, 5), 1)\n15\n>>> value(array(3, 1, 2, 4, 5), 2)\n54\n\
    >>> value(array(3, 1, 2, 4, 5), 3)\n123\n>>> value(array(3, 1, 2, 4, 5), 4)\n\
    228\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * Return the value of a polynomial at x.\n\
    \ * >>> poly(array(3, 1, 2, 4, 5), 2)\n * 37\n * >>> poly(array(1, 2, 3), 5)\n\
    \ * 76\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $result = array();\n    for ($i = 1; $i < $n; $i++) {\n        $result[] =\
    \ $i * $xs[$i];\n    }\n    return $result;\n}\n\n/* Return the value of the polynomial\
    \ at x.\n>>> value(array(3, 1, 2, 4, 5), 2)\n43\n>>> value(array(1, 2, 3), 2)\n\
    17\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>>\
    \ evaluate(array(1, 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> evaluate(array(3,\
    \ 1, 2, 4, 5), 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $len = count($xs);\n\
    \    $res = array();\n    for ($i = 1; $i < $len; $i++) {\n        $res[] = $xs[$i]\
    \ * $i;\n    }\n    return $res;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5),\
    \ 2)\n49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 1)\n6\n>>> evaluate(array(1,\
    \ 2, 3), 2)\n17\n>>> evaluate(array(1, 2, 3), 3)\n34\n*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n * Return the value of the polynomial at x.\n\
    \ */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $ys = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n  \
    \  return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in the same form.\n\
    >>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1,\
    \ 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n * Evaluate a polynomial at x.\n * >>> evaluate(array(1,\
    \ 2, 3), 2)\n * 17\n * >>> evaluate(array(1, 2, 3), 0)\n * 1\n * >>> evaluate(array(1,\
    \ 2, 3), 1)\n * 6\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* Return the value of a polynomial at x.\n>>> polyval(array(1,\
    \ 2, 3), 4)\n57\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/*\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n\
    49\n>>> evaluate(array(1, 2, 3), 2)\n17\n*/\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> poly_eval(array(1, 2, 3), 5)\n86\n*/\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n>>> evaluate(array(1,\
    \ 2, 3), 0)\n1\n*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n\t$ys = array();\n\tfor ($i\
    \ = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t}\n\treturn $ys;\n\
    }\n\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\nReturn integral of this polynomial in the same form.\n>>> integral(array(3,\
    \ 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n>>> integral(array(1, 2, 3))\narray(0,\
    \ 1, 1, 1)*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $len = count($xs);\n\
    \    $ys = array();\n    for ($i = 1; $i < $len; $i++) {\n        $ys[] = $xs[$i]\
    \ * $i;\n    }\n    return $ys;\n}\n\n/*\n>>> evaluate(array(1, 2, 3), 2)\n17\n\
    */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn the value of this polynomial at\
    \ x.\n>>> evaluate(array(3, 1, 2, 4, 5), 2)\n55\n>>> evaluate(array(1, 2, 3),\
    \ 2)\n17*/\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* xs represent coefficients of a polynomial.\nxs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\nReturn derivative of this polynomial in the same form.\n\
    >>> derivative(array(3, 1, 2, 4, 5))\narray(1, 4, 12, 20)\n>>> derivative(array(1,\
    \ 2, 3))\narray(2, 6)*/\nfunction derivative($xs) {\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\n/* xs represent coefficients of a polynomial.\n\
    xs[0] + xs[1] * x + xs[2] * x^2 + ....\nReturn integral of this polynomial in\
    \ the same form.\n>>> integral(array(3, 1, 2, 4, 5))\narray(0, 3, 0.5, 2, 1, 5)\n\
    >>> integral(array(1, 2, 3))\narray(0, 1, 1, 1)*/\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777

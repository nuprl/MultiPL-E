name: HumanEval_159_eat
language: php
prompt: "<?php\n/* You're a hungry rabbit, and you already have eaten a certain number\
  \ of carrots,\nbut now you need to eat more carrots to complete the day's meals.\n\
  you should return an array of [ total number of eaten carrots after your meals,\n\
  the number of carrots left after your meals ]\nif there are not enough remaining\
  \ carrots, you will eat all remaining carrots, but will still be hungry.\nExample:\n\
  >>> eat(5, 6, 10)\narray(11, 4)\n>>> eat(4, 8, 9)\narray(12, 1)\n>>> eat(1, 10,\
  \ 10)\narray(11, 0)\n>>> eat(2, 11, 5)\narray(7, 0)\nVariables:\n@number : integer\n\
  the number of carrots that you have eaten.\n@need : integer\nthe number of carrots\
  \ that you need to eat.\n@remaining : integer\nthe number of remaining carrots thet\
  \ exist in stock\nConstrain:\n* 0 <= number <= 1000\n* 0 <= need <= 1000\n* 0 <=\
  \ remaining <= 1000\nHave fun :)*/\nfunction eat($number, $need, $remaining) {\n"
tests: "function candidate(...$args) {\n    return eat(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(5, 6, 10) !== array(11, 4)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 9) !== array(12, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 10, 10) !== array(11, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 11, 5) !== array(7, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 7) !== array(9, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 1) !== array(5, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  $total = $number + $need;\n  if ($total <= $remaining) {\n    return\
    \ [$total, $remaining - $total];\n  } else {\n    return [$remaining + $number,\
    \ 0];\n  }\n}\n\n/*", "  $total = $number + $need;\n  if ($total > $remaining)\
    \ {\n    $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining\
    \ -= $total;\n  }\n  return [$total, $remaining];\n}", "    if ($remaining >=\
    \ $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    $left\
    \ = $remaining - $need;\n    if ($left < 0) {\n        $left = 0;\n    }\n   \
    \ return array($total, $left);\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\"\
    ;\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    $total\
    \ = $number + $need;\n    if ($total <= $remaining) {\n        return [$total,\
    \ $remaining - $total];\n    } else {\n        return [$remaining, 0];\n    }\n\
    }", "    $total = $number + $need;\n    $left = $remaining - $need;\n    if ($left\
    \ < 0) {\n        $total = $total + $left;\n        $left = 0;\n    }\n    return\
    \ [$total, $left];\n}", "    if ($remaining >= $need) {\n        return [$number\
    \ + $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "    $eaten = $number + $need;\n    if ($eaten > $remaining)\
    \ {\n        $eaten = $remaining;\n    }\n    return [$eaten, $remaining - $eaten];\n\
    }", "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total\
    \ = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -=\
    \ $total;\n    }\n    return [$total, $remaining];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  if ($remaining >= $need) {\n    return [$number + $need, $remaining - $need];\n\
    \  } else {\n    return [$number + $remaining, 0];\n  }\n}\n", "    $total = $number\
    \ + $need;\n    $left = $remaining - $need;\n    if ($left < 0) {\n        $left\
    \ = 0;\n    }\n    return [$total, $left];\n}", "    if ($need > $remaining) {\n\
    \        return [$number + $remaining, 0];\n    } else {\n        return [$number\
    \ + $need, $remaining - $need];\n    }\n}", "    $total = $number + $need;\n \
    \   $remaining = $remaining - $need;\n    if ($remaining < 0) {\n        $remaining\
    \ = 0;\n    }\n    return [$total, $remaining];\n}", "  $total = $number + $need;\n\
    \  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n\
    \  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}",
  "    if ($remaining >= $need) {\n        return [$number + $need, $remaining - $need];\n\
    \    } else {\n        return [$number + $remaining, 0];\n    }\n}", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n\
    \        $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n\
    \    return [$total, $remaining];\n}", "    $eaten = $number + $need;\n    $left\
    \ = $remaining - $need;\n    if ($left < 0) {\n        $eaten = $eaten + $left;\n\
    \        $left = 0;\n    }\n    return [$eaten, $left];\n}", "    if($remaining\
    \ >= $need){\n        $remaining -= $need;\n        $number += $need;\n    }else{\n\
    \        $number += $remaining;\n        $remaining = 0;\n    }\n    return [$number,\
    \ $remaining];\n}", "  if ($remaining >= $need) {\n    return [$number + $need,\
    \ $remaining - $need];\n  } else {\n    return [$number + $remaining, 0];\n  }\n\
    }\n\n/*", "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left\
    \ < 0) {\n    $left = 0;\n  }\n  return [$total, $left];\n}\n\n/*", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "    if($remaining\
    \ >= $need){\n        return [$number + $need, $remaining - $need];\n    }\n \
    \   else{\n        return [$number + $remaining, 0];\n    }\n}", "    $total =\
    \ $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n\
    \        $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n\
    \    return [$total, $remaining];\n}", "    if($remaining >= $need){\n       \
    \ return [$number + $need, $remaining - $need];\n    }\n    else{\n        return\
    \ [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"\
    <pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    if\
    \ ($remaining >= $need) {\n        return [$number + $need, $remaining - $need];\n\
    \    } else {\n        return [$number + $remaining, 0];\n    }\n}", "  $total\
    \ = $number + $need;\n  if ($total <= $remaining) {\n    return [$total, $remaining\
    \ - $total];\n  } else {\n    return [$remaining + $number, 0];\n  }\n}\n\n/*",
  "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "    $total = $number + $need;\n\
    \    if ($total <= $remaining) {\n        return array($total, $remaining - $total);\n\
    \    } else {\n        return array($remaining + $number, 0);\n    }\n}\n\n/*\n\
    \    ----TESTE----\n*/\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(eat(1, 10, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11,\
    \ 5));\necho \"</pre>\";", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  \
    \  if ($remaining >= $need) {\n        return [$number + $need, $remaining - $need];\n\
    \    } else {\n        return [$number + $remaining, 0];\n    }\n}", "    $total\
    \ = $number + $need;\n    if ($total <= $remaining) {\n        return [$total,\
    \ $remaining - $total];\n    } else {\n        return [$remaining + $number, 0];\n\
    \    }\n}", "    $total = $number + $need;\n    if ($total > $remaining) {\n \
    \       $total = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining\
    \ -= $total;\n    }\n    return [$total, $remaining];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n  } else {\n\
    \    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}", "    if($remaining\
    \ >= $need){\n        $remaining -= $need;\n        $number += $need;\n    }else{\n\
    \        $number += $remaining;\n        $remaining = 0;\n    }\n    return [$number,\
    \ $remaining];\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $left = 0;\n    }\n    return [$total, $left];\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2,\
    \ 11, 5));\necho \"</pre>\";", "    if ($remaining >= $need) {\n        $remaining\
    \ -= $need;\n        $number += $need;\n    } else {\n        $number += $remaining;\n\
    \        $remaining = 0;\n    }\n    return [$number, $remaining];\n}", "  $total\
    \ = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "  $eaten = $number + $need;\n  $left = $remaining - $need;\n\
    \  if ($left < 0) {\n    $eaten = $eaten + $left;\n    $left = 0;\n  }\n  return\
    \ [$eaten, $left];\n}", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  \
    \  $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "  $total = $number + $need;\n \
    \ if ($total > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n\
    \  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}",
  "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "    $total = $number + $need;\n\
    \    if ($total > $remaining) {\n        $total = $remaining;\n        $remaining\
    \ = 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "    if ($remaining >= $need) {\n        return [$number +\
    \ $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n\
    \    $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining -=\
    \ $total;\n  }\n  return [$total, $remaining];\n}", "    if($remaining >= $need){\n\
    \        return [$number + $need, $remaining - $need];\n    }else{\n        return\
    \ [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"\
    <pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    if($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "    $eaten = $number + $need;\n    $remaining = $remaining - $need;\n   \
    \ if ($remaining < 0) {\n        $remaining = 0;\n    }\n    return [$eaten, $remaining];\n\
    }", "    if ($remaining >= $need) {\n        return [$number + $need, $remaining\
    \ - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}",
  "    $total = $number + $need;\n    $left = $remaining - $need;\n    if ($left <\
    \ 0) {\n        $total = $total + $left;\n        $left = 0;\n    }\n    return\
    \ [$total, $left];\n}", "    $total = $number + $need;\n    $left = $remaining\
    \ - $need;\n    if ($left < 0) {\n        $total = $total + $left;\n        $left\
    \ = 0;\n    }\n    return [$total, $left];\n}", "    $total = $number + $need;\n\
    \    if ($total > $remaining) {\n        $total = $remaining;\n        $remaining\
    \ = 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "  if ($remaining >= $need) {\n    return [$number + $need,\
    \ $remaining - $need];\n  } else {\n    return [$number + $remaining, 0];\n  }\n\
    }\n\n/*", "    $total = $number + $need;\n    if ($total <= $remaining) {\n  \
    \      return [$total, $remaining - $total];\n    } else {\n        return [$remaining\
    \ + $number, 0];\n    }\n}", "    $total = $number + $need;\n    if ($remaining\
    \ >= $need) {\n        $remaining = $remaining - $need;\n    } else {\n      \
    \  $remaining = 0;\n    }\n    return [$total, $remaining];\n}", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "    if($remaining\
    \ >= $need){\n        $remaining -= $need;\n        $number += $need;\n    }else{\n\
    \        $number += $remaining;\n        $remaining = 0;\n    }\n    return [$number,\
    \ $remaining];\n}", "    if($remaining >= $need){\n        return [$number + $need,\
    \ $remaining - $need];\n    }\n    return [$number + $remaining, 0];\n}", "  \
    \  $total = $number + $need;\n    $left = $remaining - $need;\n    if ($left <\
    \ 0) {\n        $total = $total + $left;\n        $left = 0;\n    }\n    return\
    \ [$total, $left];\n}", "    $total = $number + $need;\n    $left = $remaining\
    \ - $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $left = 0;\n    }\n    return [$total, $left];\n}", "  $total = $number\
    \ + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    if ($remaining >= $need) {\n        return [$number +\
    \ $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "  if ($need <= $remaining) {\n    return [$number + $need,\
    \ $remaining - $need];\n  } else {\n    return [$number + $remaining, 0];\n  }\n\
    }\n\n/*", "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left\
    \ < 0) {\n    $total = $total + $left;\n    $left = 0;\n  }\n  return array($total,\
    \ $left);\n}\n\n/*", "    if ($remaining >= $need) {\n        return [$number\
    \ + $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  \
    \  $total = $number + $need;\n    $left = $remaining - $need;\n    if ($left <\
    \ 0) {\n        $left = 0;\n    }\n    return [$total, $left];\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "    if ($remaining >= $need) {\n        $remaining -= $need;\n        $number\
    \ += $need;\n    } else {\n        $number += $remaining;\n        $remaining\
    \ = 0;\n    }\n    return [$number, $remaining];\n}", "    if ($remaining >= $need)\
    \ {\n        $remaining -= $need;\n        $number += $need;\n    } else {\n \
    \       $number += $remaining;\n        $remaining = 0;\n    }\n    return [$number,\
    \ $remaining];\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $total = $total + $left;\n        $left = 0;\n\
    \    }\n    return [$total, $left];\n}", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n  } else {\n\
    \    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}", "  if($remaining\
    \ >= $need){\n    return [$number + $need, $remaining - $need];\n  }else{\n  \
    \  return [$number + $remaining, 0];\n  }\n}", "  if ($remaining >= $need) {\n\
    \    return [$number + $need, $remaining - $need];\n  } else {\n    return [$number\
    \ + $remaining, 0];\n  }\n}\n\n/*", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left <\
    \ 0) {\n    $left = 0;\n  }\n  return [$total, $left];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  if ($remaining >= $need) {\n    return [$number + $need, $remaining - $need];\n\
    \  } else {\n    return [$number + $remaining, 0];\n  }\n}\n\n/*", "    if ($remaining\
    \ < $need) {\n        return [$number + $remaining, 0];\n    } else {\n      \
    \  return [$number + $need, $remaining - $need];\n    }\n}", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $total = $number\
    \ + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n\
    }", "    if($remaining >= $need){\n        return [$number + $need, $remaining\
    \ - $need];\n    }else{\n        return [$number + $remaining, 0];\n    }\n}",
  "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left < 0) {\n\
    \    $left = 0;\n  }\n  return [$total, $left];\n}\n\n/*", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $total = $number\
    \ + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n\
    }", "    if ($need <= $remaining) {\n        return [$number + $need, $remaining\
    \ - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}",
  "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left < 0) {\n\
    \    $total = $total + $left;\n    $left = 0;\n  }\n  return array($total, $left);\n\
    }", "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total\
    \ = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -=\
    \ $total;\n    }\n    return [$total, $remaining];\n}", "    if ($remaining >=\
    \ $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $total = $number\
    \ + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n\
    }", "  $eaten = $number + $need;\n  if ($eaten > $remaining) {\n    $eaten = $remaining;\n\
    \  }\n  $left = $remaining - $eaten;\n  return [$eaten, $left];\n}", "    if ($need\
    \ <= $remaining) {\n        return [$number + $need, $remaining - $need];\n  \
    \  } else {\n        return [$number + $remaining, 0];\n    }\n}", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n\
    \        $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n\
    \    return [$total, $remaining];\n}", "    $total = $number + $need;\n    if\
    \ ($total > $remaining) {\n        $total = $remaining;\n        $remaining =\
    \ 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "  $total = $number + $need;\n  $left = $remaining - $need;\n\
    \  if ($left < 0) {\n    $left = 0;\n  }\n  return array($total, $left);\n}",
  "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "  $total = $number + $need;\n \
    \ if ($total > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n\
    \  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}",
  "    if ($remaining >= $need) {\n        $remaining -= $need;\n        $number +=\
    \ $need;\n    } else {\n        $number += $remaining;\n        $remaining = 0;\n\
    \    }\n    return [$number, $remaining];\n}", "    $total = $number + $need;\n\
    \    $left = $remaining - $need;\n    if ($left < 0) {\n        $total += $left;\n\
    \        $left = 0;\n    }\n    return [$total, $left];\n}", "    if($remaining\
    \ >= $need){\n        return [$number + $need, $remaining - $need];\n    }\n \
    \   else{\n        return [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "    if ($remaining >= $need) {\n        return [$number + $need, $remaining\
    \ - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}",
  "    if ($remaining >= $need) {\n        return [$number + $need, $remaining - $need];\n\
    \    }\n    return [$number + $remaining, 0];\n}", "    if($remaining >= $need)\
    \ {\n        return [$number + $need, $remaining - $need];\n    } else {\n   \
    \     return [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\
    \necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total\
    \ = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -=\
    \ $total;\n    }\n    return [$total, $remaining];\n}", "    if ($remaining >=\
    \ $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $total = $number\
    \ + $need;\n  $left = $remaining - $need;\n  if ($left < 0) {\n    $left = 0;\n\
    \  }\n  return [$total, $left];\n}", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "    $total = $number + $need;\n    if ($total <= $remaining) {\n        return\
    \ [$total, $remaining - $total];\n    } else {\n        return [$remaining + $number,\
    \ 0];\n    }\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n\
    \    $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining -=\
    \ $total;\n  }\n  return [$total, $remaining];\n}", "  if ($remaining >= $need)\
    \ {\n    return [$number + $need, $remaining - $need];\n  } else {\n    return\
    \ [$number + $remaining, 0];\n  }\n}\n\n/*", "  $total = $number + $need;\n  if\
    \ ($total <= $remaining) {\n    return [$total, $remaining - $total];\n  } else\
    \ {\n    return [$remaining + $number, 0];\n  }\n}\n\n/*", "  $total = $number\
    \ + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n\
    }", "    if($remaining >= $need){\n        return [$number + $need, $remaining\
    \ - $need];\n    }else{\n        return [$number + $remaining, 0];\n    }\n}\n\
    \n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    if ($remaining >= $need) {\n\
    \        return [$number + $need, $remaining - $need];\n    } else {\n       \
    \ return [$number + $remaining, 0];\n    }\n}", "  $total = $number + $need;\n\
    \  $left = $remaining - $need;\n  if ($left < 0) {\n    $left = 0;\n  }\n  return\
    \ [$total, $left];\n}\n", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  $total\
    \ = $number + $need;\n  $left = $remaining - $need;\n  if ($left < 0) {\n    $left\
    \ = 0;\n  }\n  return [$total, $left];\n}\n\n/*", "    if($remaining >= $need){\n\
    \        return [$number + $need, $remaining - $need];\n    }else{\n        return\
    \ [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"\
    <pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n\
    \        $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n\
    \    return [$total, $remaining];\n}", "    if ($remaining >= $need) {\n     \
    \   $remaining -= $need;\n        $number += $need;\n    } else {\n        $number\
    \ += $remaining;\n        $remaining = 0;\n    }\n    return [$number, $remaining];\n\
    }", "\t$total = $number + $need;\n\t$left = $remaining - $need;\n\tif ($total\
    \ > $remaining) {\n\t\t$total = $remaining;\n\t\t$left = 0;\n\t}\n\treturn [$total,\
    \ $left];\n}\n\n/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "  $total = $number + $need;\n\
    \  if ($total > $remaining) {\n    $total = $remaining;\n    $remaining = 0;\n\
    \  } else {\n    $remaining -= $total;\n  }\n  return [$total, $remaining];\n}",
  "    $eaten = $number + $need;\n    $remaining = $remaining - $need;\n    if ($remaining\
    \ < 0) {\n        $remaining = 0;\n    }\n    return [$eaten, $remaining];\n}",
  "    $total = $number + $need;\n    $left = $remaining - $need;\n    if ($left <\
    \ 0) {\n        $total += $left;\n        $left = 0;\n    }\n    return [$total,\
    \ $left];\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n  \
    \  $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining -= $total;\n\
    \  }\n  return [$total, $remaining];\n}", "  $total = $number + $need;\n  $left\
    \ = $remaining - $need;\n  if ($left < 0) {\n    $left = 0;\n  }\n  return [$total,\
    \ $left];\n}\n\n/*", "  $total = $number + $need;\n  if ($total <= $remaining)\
    \ {\n    return [$total, $remaining - $total];\n  } else {\n    return [$remaining\
    \ + $number, 0];\n  }\n}\n\n/*", "    $eaten = $number + $need;\n    $left = $remaining\
    \ - $need;\n    if ($left < 0) {\n        $eaten = $number + $remaining;\n   \
    \     $left = 0;\n    }\n    return [$eaten, $left];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    $remaining\
    \ = $remaining - $need;\n    if ($remaining < 0) {\n        $remaining = 0;\n\
    \    }\n    return array($total, $remaining);\n}\n\n/*\n    ----TESTE----\n*/\n\
    \necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    if ($remaining >= $need) {\n        return [$number +\
    \ $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $total = $total + $left;\n        $left = 0;\n\
    \    }\n    return [$total, $left];\n}", "    $eaten = $number + $need;\n    $remaining\
    \ = $remaining - $need;\n    if ($remaining < 0) {\n        $remaining = 0;\n\
    \    }\n    return [$eaten, $remaining];\n}", "    if($number + $need <= $remaining){\n\
    \        return [$number + $need, $remaining - ($number + $need)];\n    }else{\n\
    \        return [$remaining + $number, 0];\n    }\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $total = $number + $need;\n    if ($total <= $remaining)\
    \ {\n        return [$total, $remaining - $total];\n    } else {\n        return\
    \ [$remaining, 0];\n    }\n}", "    if ($remaining >= $need) {\n        $remaining\
    \ -= $need;\n        $number += $need;\n    } else {\n        $number += $remaining;\n\
    \        $remaining = 0;\n    }\n    return [$number, $remaining];\n}", "    if($remaining\
    \ >= $need){\n        return [$number + $need, $remaining - $need];\n    }else{\n\
    \        return [$number + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10,\
    \ 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\"\
    ;", "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total\
    \ = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -=\
    \ $total;\n    }\n    return [$total, $remaining];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    if ($remaining >= $need) {\n       \
    \ return [$number + $need, $remaining - $need];\n    } else {\n        return\
    \ [$number + $remaining, 0];\n    }\n}", "    $total = $number + $need;\n    if\
    \ ($total > $remaining) {\n        $total = $remaining;\n        $remaining =\
    \ 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "  $total = $number + $need;\n  if ($total <= $remaining)\
    \ {\n    return [$total, $remaining - $total];\n  } else {\n    return [$remaining\
    \ + $number, 0];\n  }\n}\n\n/*", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  \
    \  if ($remaining >= $need) {\n        return [$number + $need, $remaining - $need];\n\
    \    } else {\n        return [$number + $remaining, 0];\n    }\n}", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $total = $number\
    \ + $need;\n  $remaining = $remaining - $need;\n  if ($remaining < 0) {\n    $remaining\
    \ = 0;\n  }\n  return [$total, $remaining];\n}\n\n/*", "    $total = $number +\
    \ $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n     \
    \   $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n    return\
    \ [$total, $remaining];\n}", "    $total = $number + $need;\n    if ($total >\
    \ $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n    }\
    \ else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  \
    \  $total = $number + $need;\n    $left = $remaining - $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $left = 0;\n    }\n \
    \   return [$total, $left];\n}", "    if ($remaining >= $need) {\n        return\
    \ [$number + $need, $remaining - $need];\n    } else {\n        return [$number\
    \ + $remaining, 0];\n    }\n}", "    if ($remaining >= $need) {\n        return\
    \ [$number + $need, $remaining - $need];\n    } else {\n        return [$number\
    \ + $remaining, 0];\n    }\n}", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "    if($remaining >= $need) {\n        return [$number + $need, $remaining\
    \ - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2,\
    \ 11, 5));\necho \"</pre>\";", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total\
    \ = $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -=\
    \ $total;\n    }\n    return [$total, $remaining];\n}", "    if ($remaining >=\
    \ $need) {\n        $remaining -= $need;\n        $number += $need;\n    } else\
    \ {\n        $number += $remaining;\n        $remaining = 0;\n    }\n    return\
    \ [$number, $remaining];\n}", "    $total = $number + $need;\n    if ($total >\
    \ $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n    }\
    \ else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "    if ($remaining >= $need) {\n        return [$number + $need, $remaining\
    \ - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}",
  "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "    $total = $number + $need;\n\
    \    if ($total <= $remaining) {\n        return [$total, $remaining - $total];\n\
    \    } else {\n        return [$remaining + $number, 0];\n    }\n}", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n\
    \        $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n\
    \    return [$total, $remaining];\n}", "    $total = $number + $need;\n    if\
    \ ($total > $remaining) {\n        $total = $remaining;\n        $remaining =\
    \ 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n\
    \    $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining -=\
    \ $total;\n  }\n  return [$total, $remaining];\n}", "    $total = $number + $need;\n\
    \    if ($total > $remaining) {\n        $total = $remaining;\n        $remaining\
    \ = 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "  $total = $number + $need;\n  $left = $remaining - $need;\n\
    \  if ($left < 0) {\n    $left = 0;\n  }\n  return [$total, $left];\n}\n\n/*",
  "    $total = $number + $need;\n    if ($total > $remaining) {\n        $total =\
    \ $remaining;\n        $remaining = 0;\n    } else {\n        $remaining -= $total;\n\
    \    }\n    return [$total, $remaining];\n}", "    $total = $number + $need;\n\
    \    if ($total > $remaining) {\n        $total = $remaining;\n        $remaining\
    \ = 0;\n    } else {\n        $remaining -= $total;\n    }\n    return [$total,\
    \ $remaining];\n}", "    if ($remaining >= $need) {\n        return [$number +\
    \ $need, $remaining - $need];\n    } else {\n        return [$number + $remaining,\
    \ 0];\n    }\n}", "    $total = $number + $need;\n    if ($total > $remaining)\
    \ {\n        $total = $remaining;\n        $remaining = 0;\n    } else {\n   \
    \     $remaining -= $total;\n    }\n    return [$total, $remaining];\n}", "  $total\
    \ = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $eaten = $number + $need;\n    $remaining = $remaining\
    \ - $need;\n    if ($remaining < 0) {\n        $remaining = 0;\n    }\n    return\
    \ [$eaten, $remaining];\n}", "  if ($remaining >= $need) {\n    return [$number\
    \ + $need, $remaining - $need];\n  } else {\n    return [$number + $remaining,\
    \ 0];\n  }\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $left = 0;\n    }\n    return [$total, $left];\n\
    }\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\nprint_r(eat(5, 6, 10));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4, 8, 9));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(2,\
    \ 11, 5));\necho \"</pre>\";", "    if($remaining >= $need) {\n        return\
    \ [$number + $need, $remaining - $need];\n    } else {\n        return [$number\
    \ + $remaining, 0];\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\n\
    print_r(eat(5, 6, 10));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(eat(4, 8,\
    \ 9));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "  $total\
    \ = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $total = $total + $left;\n        $left = 0;\n\
    \    }\n    return array($total, $left);\n}\n\n/*\n    ----TESTE----\n*/\n\necho\
    \ \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "    if($number\
    \ + $need <= $remaining){\n        return [$number + $need, $remaining - ($number\
    \ + $need)];\n    }else{\n        return [$remaining + $number, 0];\n    }\n}\n\
    \n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\n    print_r(eat(5, 6, 10));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\n    print_r(eat(4, 8, 9));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\n    print_r(eat(1, 10, 10));\necho \"</pre>\";\n\necho \"\
    <pre>\";\n    print_r(eat(2, 11, 5));\necho \"</pre>\";", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    $left\
    \ = $remaining - $need;\n    if ($left < 0) {\n        $total = $total + $left;\n\
    \        $left = 0;\n    }\n    return [$total, $left];\n}", "    $total = $number\
    \ + $need;\n    if ($total > $remaining) {\n        $total = $remaining;\n   \
    \     $remaining = 0;\n    } else {\n        $remaining -= $total;\n    }\n  \
    \  return [$total, $remaining];\n}", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining;\n        $remaining = 0;\n   \
    \ } else {\n        $remaining -= $total;\n    }\n    return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining;\n\
    \    $remaining = 0;\n  } else {\n    $remaining -= $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    $total = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($left < 0) {\n        $total = $total + $left;\n        $left = 0;\n\
    \    }\n    return array($total, $left);\n}\n\n/*\n    ----TESTE----\n*/\n\necho\
    \ \"<pre>\";\nprint_r(eat(5, 6, 10));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(4,\
    \ 8, 9));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(eat(1, 10, 10));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(eat(2, 11, 5));\necho \"</pre>\";", "  if($remaining\
    \ >= $need){\n    return [$number + $need, $remaining - $need];\n  }\n  else{\n\
    \    return [$number + $remaining, 0];\n  }\n}", "    if ($remaining >= $need)\
    \ {\n        return [$number + $need, $remaining - $need];\n    } else {\n   \
    \     return [$number + $remaining, 0];\n    }\n}", "    if ($remaining >= $need)\
    \ {\n        $remaining -= $need;\n        $number += $need;\n    } else {\n \
    \       $number += $remaining;\n        $remaining = 0;\n    }\n    return [$number,\
    \ $remaining];\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n\
    \    $total = $remaining;\n    $remaining = 0;\n  } else {\n    $remaining -=\
    \ $total;\n  }\n  return [$total, $remaining];\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_76_is_simple_power
results:
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\necho is_simple_power(1, 4);\n\
    echo is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\n ?>\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpli040qln.php on line 28

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\n\n/*\n\
    >>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8,\
    \ 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n\
    >>> is_simple_power(5, 3)\nfalse\n*/\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x==1){\n    return true;\n  }\n  if($x%$n==0){\n\
    \    return is_simple_power($x/$n,$n);\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while($n**$i < $x) {\n    $i++;\n  }\n  if($n**$i == $x) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $int = 0;\n    while ($x > 1) {\n        $x /=\
    \ $n;\n        $int++;\n    }\n    return $x == 1;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  $i = 1;\n  while ($i < $x)\
    \ {\n    if ($n ** $i == $x) {\n      $result = true;\n    }\n    $i++;\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynoga3k4.php:42\n\
    Stack trace:\n#0 /tmp/tmpynoga3k4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpynoga3k4.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  return $int == floor($int);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0efksvl.php:35\n\
    Stack trace:\n#0 /tmp/tmpz0efksvl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0efksvl.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if(is_int($int)){\n    return\
    \ true;\n  }\n  return false;\n}\n\n/*\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmpfz4taqbw.php on
    line 26

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\necho is_simple_power(1, 4);\n\
    echo is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp3xv2sfdw.php on line 28

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $power = log($x, $n);\n  return $power == (int)$power;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxetcth8.php:35\n\
    Stack trace:\n#0 /tmp/tmpuxetcth8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuxetcth8.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x==1){\n    return true;\n  }\n  if($x%$n==0){\n\
    \    return is_simple_power($x/$n,$n);\n  }\n  return false;\n}\n\n/*\n  function\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($n ** $i <= $x) {\n     \
    \ if ($n ** $i == $x) {\n        return true;\n      }\n      $i++;\n    }\n \
    \   return false;\n  }\n*/\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1,\
    \ 4)\ntrue\n>>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n\
    >>> is_simple_power(3, 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5,\
    \ 3)\nfalse\n*/\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = 1;\n  while ($result < $x)\
    \ {\n    $result = $n ** $i;\n    $i++;\n  }\n  if ($result == $x) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1 && $n == 1) {\n    return true;\n \
    \ }\n  if ($x == 1 && $n != 1) {\n    return false;\n  }\n  if ($x == $n) {\n\
    \    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n  }\n  return\
    \ is_simple_power($x / $n, $n);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeat9i7s_.php:48\n\
    Stack trace:\n#0 /tmp/tmpeat9i7s_.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpeat9i7s_.php\
    \ on line 48\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  return $int == intval($int);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7eu_pss3.php:35\n\
    Stack trace:\n#0 /tmp/tmp7eu_pss3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7eu_pss3.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while (pow($n, $i) <= $x) {\n    if\
    \ (pow($n, $i) == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gql_f05.php:42\n\
    Stack trace:\n#0 /tmp/tmp5gql_f05.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5gql_f05.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  $i = 1;\n  while ($i <= $x)\
    \ {\n    if ($i ** $n == $x) {\n      $result = true;\n    }\n    $i++;\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpql4rm6iu.php:37\n\
    Stack trace:\n#0 /tmp/tmpql4rm6iu.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpql4rm6iu.php\
    \ on line 37\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n\tif ($x == 1) {\n\t\treturn true;\n\t}\n\tif ($n\
    \ == 1) {\n\t\treturn false;\n\t}\n\t$i = 1;\n\twhile ($i < $x) {\n\t\t$i *= $n;\n\
    \t}\n\tif ($i == $x) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = 1;\n  while ($result < $x)\
    \ {\n    $result = $n ** $i;\n    $i++;\n  }\n  if ($result == $x) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if($x == 1) return true;\n    $i = 1;\n    while(pow($n,\
    \ $i) <= $x) {\n        if(pow($n, $i) == $x) return true;\n        $i++;\n  \
    \  }\n    return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i <= $x) {\n        if ($n ** $i == $x) {\n        \
    \    return true;\n        }\n        $i++;\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1) {\n    return true;\n  }\n  if($x ==\
    \ $n) {\n    return true;\n  }\n  $i = 1;\n  while($i < $x) {\n    $i *= $n;\n\
    \    if($i == $x) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while (pow($n, $i) <= $x) {\n    if\
    \ (pow($n, $i) == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gql_f05.php:42\n\
    Stack trace:\n#0 /tmp/tmp5gql_f05.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5gql_f05.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  return $x == pow($n, round(log($x) / log($n)));\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmptank5pma.php:19\n\
    Stack trace:\n#0 /tmp/tmptank5pma.php(22): is_simple_power(1, 1)\n#1 /tmp/tmptank5pma.php(34):\
    \ candidate(1, 1)\n#2 /tmp/tmptank5pma.php(38): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmptank5pma.php on line 19\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: -1
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\necho is_simple_power(1, 4);\necho is_simple_power(2,\
    \ 2);\necho is_simple_power(8, 2);\necho is_simple_power(3, 2);\necho is_simple_power(3,\
    \ 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111'
  timestamp: 1660220793
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $int = log($x, $n);\n    if (is_int($int)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4y7gnzg.php:31\n\
    Stack trace:\n#0 /tmp/tmph4y7gnzg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph4y7gnzg.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $int = log($x, $n);\n    if (is_int($int)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4y7gnzg.php:31\n\
    Stack trace:\n#0 /tmp/tmph4y7gnzg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph4y7gnzg.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while (pow($n, $i) < $x) {\n    $i++;\n\
    \  }\n  return pow($n, $i) == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpb2scip.php:39\n\
    Stack trace:\n#0 /tmp/tmpcpb2scip.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcpb2scip.php\
    \ on line 39\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $i = 1;\n    while ($i <= $x) {\n      if ($n ** $i\
    \ == $x) {\n        $result = true;\n        break;\n      }\n      $i++;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while (pow($n, $i) <= $x) {\n  \
    \      if (pow($n, $i) == $x) {\n            return true;\n        }\n       \
    \ $i++;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ea6874l.php:42\n\
    Stack trace:\n#0 /tmp/tmp6ea6874l.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6ea6874l.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n\t$x = (int)$x;\n\t$n = (int)$n;\n\tif ($x == 1)\
    \ {\n\t\treturn true;\n\t}\n\tif ($n == 1) {\n\t\treturn false;\n\t}\n\tif ($x\
    \ == $n) {\n\t\treturn true;\n\t}\n\t$i = 1;\n\twhile ($i < $x) {\n\t\t$i *= $n;\n\
    \t\tif ($i == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  $i = 1;\n  while ($i <= $x)\
    \ {\n    if ($n ** $i == $x) {\n      $result = true;\n    }\n    $i++;\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnl0b1xv_.php:43\n\
    Stack trace:\n#0 /tmp/tmpnl0b1xv_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnl0b1xv_.php\
    \ on line 43\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x==1) return true;\n  $i=1;\n  while($i<$x){\n\
    \    $i*=$n;\n  }\n  return $i==$x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2, 2)\ntrue\n\
    >>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n>>> is_simple_power(3,\
    \ 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    for ($i = 2; $i <= $x; $i++) {\n      if ($x == pow($n,\
    \ $i)) {\n        $result = true;\n      }\n    }\n  }\n  return $result;\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i <= $x) {\n        if ($i\
    \ == $x) {\n            return true;\n        }\n        $i *= $n;\n    }\n  \
    \  return false;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $power = $n;\n  while ($power <= $x)\
    \ {\n    if ($power == $x) {\n      return true;\n    }\n    $power *= $n;\n \
    \ }\n  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uvj6j4u.php:43\n\
    Stack trace:\n#0 /tmp/tmp9uvj6j4u.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9uvj6j4u.php\
    \ on line 43\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1) return true;\n  if($x == 0) return\
    \ false;\n  if($n == 1) return false;\n  if($n == 0) return false;\n  if($x ==\
    \ $n) return true;\n  if($x % $n == 0) {\n    return is_simple_power($x / $n,\
    \ $n);\n  } else {\n    return false;\n  }\n}\n\necho is_simple_power(1, 4);\n\
    echo is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  return (log($x, $n) == round(log($x, $n)));\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t5wszmr.php:34\n\
    Stack trace:\n#0 /tmp/tmp_t5wszmr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_t5wszmr.php\
    \ on line 34\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i <= $x) {\n        if ($n\
    \ ** $i == $x) {\n            return true;\n        }\n        $i++;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5lyx1a3t.php:42\n\
    Stack trace:\n#0 /tmp/tmp5lyx1a3t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5lyx1a3t.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: -1
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = $n;\n  while ($result < $x)\
    \ {\n    $result *= $n;\n    $i++;\n  }\n  if ($result == $x) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\n\necho is_simple_power(1, 4);\necho is_simple_power(2,\
    \ 2);\necho is_simple_power(8, 2);\necho is_simple_power(3, 2);\necho is_simple_power(3,\
    \ 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '11'
  timestamp: 1660220793
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  $i = 1;\n  while ($i < $x)\
    \ {\n    if ($n ** $i == $x) {\n      $result = true;\n    }\n    $i++;\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynoga3k4.php:42\n\
    Stack trace:\n#0 /tmp/tmpynoga3k4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpynoga3k4.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  return $int == floor($int);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0efksvl.php:35\n\
    Stack trace:\n#0 /tmp/tmpz0efksvl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0efksvl.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $i = 1;\n    while ($i < $x) {\n      $i *= $n;\n \
    \     if ($i == $x) {\n        $result = true;\n      }\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 0;\n  while (pow($n, $i) <= $x) {\n    if\
    \ (pow($n, $i) == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  $i = 1;\n  while ($i < $x)\
    \ {\n    if ($i ** $n == $x) {\n      $result = true;\n    }\n    $i++;\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqxnj4lmy.php:37\n\
    Stack trace:\n#0 /tmp/tmpqxnj4lmy.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqxnj4lmy.php\
    \ on line 37\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $result = false;\n    if ($x == 1) {\n      \
    \  $result = true;\n    } elseif ($x % $n == 0) {\n        $result = is_simple_power($x\
    \ / $n, $n);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 0;\n  while ($i < $x) {\n    $i++;\n    if\
    \ ($n ** $i == $x) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3b5385u.php:42\n\
    Stack trace:\n#0 /tmp/tmpm3b5385u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpm3b5385u.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while ($i <= $x) {\n    if ($i == $x) {\n      return true;\n    }\n    $i\
    \ *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x / $n, $n);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = 1;\n  while ($result < $x)\
    \ {\n    $result = $n ** $i;\n    $i++;\n  }\n  if ($result == $x) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: -1
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\n\n/*\n * Test\n */\nassert(is_simple_power(1, 4) == true);\nassert(is_simple_power(2,\
    \ 2) == true);\nassert(is_simple_power(8, 2) == true);\nassert(is_simple_power(3,\
    \ 2) == false);\nassert(is_simple_power(3, 1) == false);\nassert(is_simple_power(5,\
    \ 3) == false);\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220793
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = 0;\n  while ($x > 1) {\n    $x /= $n;\n\
    \    $int++;\n  }\n  if ($x == 1) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $i = 1;\n    while ($i <= $x) {\n      if ($n ** $i\
    \ == $x) {\n        $result = true;\n        break;\n      }\n      $i++;\n  \
    \  }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i = $i * $n;\n\
    \  }\n  if ($i == $x) {\n    return true;\n  } else {\n    return false;\n  }\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    return (log($x, $n) == round(log($x, $n)));\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfr6bzr2.php:34\n\
    Stack trace:\n#0 /tmp/tmpxfr6bzr2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxfr6bzr2.php\
    \ on line 34\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\n\necho is_simple_power(1, 4) . \"\\n\"\
    ;\necho is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8, 2) . \"\\n\"\
    ;\necho is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3, 1) . \"\\n\"\
    ;\necho is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1



    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpftu8584l.php on line 26

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n\t$i = 1;\n\twhile ($i <= $x) {\n\t\tif ($i == $x)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t\t$i *= $n;\n\t}\n\treturn false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: -1
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = 0;\n  while ($x >= $n) {\n    $x /= $n;\n\
    \    $int++;\n  }\n  if ($x == 1) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220793
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if (pow($n, 1) == $x) {\n \
    \   $result = true;\n  }\n  elseif (pow($n, 2) == $x) {\n    $result = true;\n\
    \  }\n  elseif (pow($n, 3) == $x) {\n    $result = true;\n  }\n  elseif (pow($n,\
    \ 4) == $x) {\n    $result = true;\n  }\n  elseif (pow($n, 5) == $x) {\n    $result\
    \ = true;\n  }\n  elseif (pow($n, 6) == $x) {\n    $result = true;\n  }\n  elseif\
    \ (pow($n, 7) == $x) {\n    $result = true;\n  }\n  elseif (pow($n, 8) == $x)\
    \ {\n    $result = true;\n  }\n  elseif (pow($n, 9) == $x) {\n    $result = true;\n\
    \  }\n  elseif (pow($n, 10) == $x) {\n    $result = true;\n  }\n  elseif (pow($n,\
    \ 11) == $x) {\n    $result = true;\n  }\n  elseif (pow($n, 12) == $x) {\n   \
    \ $result = true;\n  }\n  elseif (pow($n, 13) == $x) {\n    $result = true;\n\
    \  }\n  elseif (pow($n, 14) == $x) {\n    $result = true;\n  }\n  elseif (pow($n,\
    \ 15) == $x) {\n    $result = true;\n  }\n  elseif (pow($n, 16) == $x) {\n   \
    \ $result = true;\n  }\n  elseif (pow($n, 17) == $x) {\n    $result = true;\n\
    \  }\n  elseif (pow($n, 18) == $x) {\n    $result = true;\n  }\n  elseif (pow($n,\
    \ 19) == $x) {\n    $\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpuee1uawr.php on line 76

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1) return true;\n  if($x == $n) return\
    \ true;\n  if($x % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: -1
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $result = false;\n    $i = 1;\n    while ($i\
    \ <= $x) {\n        if ($i == $x) {\n            $result = true;\n        }\n\
    \        $i *= $n;\n    }\n    return $result;\n}\necho is_simple_power(1, 4);\n\
    echo is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111'
  timestamp: 1660220793
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    if ($x % $n == 0) {\n        return is_simple_power($x / $n, $n);\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  } elseif ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x / $n, $n);\n\
    }\n\necho is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2, 2) . \"\\\
    n\";\necho is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3, 2) . \"\\\
    n\";\necho is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5, 3) . \"\\\
    n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27, 1) . \"\
    \\n\";\necho is_simple_power(27, 27) . \"\\n\";\necho is_simple_power(27, 9) .\
    \ \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27, 3)\
    \ . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power(27, 3) . \"\\n\";\necho is_simple_power(27,\
    \ 3) . \"\\n\";\necho is_simple_power\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp5u_r02gk.php on line 57

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = 1;\n  while ($n**$int < $x) {\n    $int++;\n\
    \  }\n  if ($n**$int == $x) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_t5frn5.php:43\n\
    Stack trace:\n#0 /tmp/tmpj_t5frn5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpj_t5frn5.php\
    \ on line 43\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $power = log($x, $n);\n  return $power == (int)$power;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxetcth8.php:35\n\
    Stack trace:\n#0 /tmp/tmpuxetcth8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuxetcth8.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while (pow($n, $i) <= $x) {\n  \
    \      if (pow($n, $i) == $x) {\n            return true;\n        }\n       \
    \ $i++;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ea6874l.php:42\n\
    Stack trace:\n#0 /tmp/tmp6ea6874l.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6ea6874l.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x / $n, $n);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  return pow($n, round(log($x, $n))) == $x;\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  } elseif ($x\
    \ == 0) {\n    return false;\n  } else {\n    for ($i = 2; $i <= $x; $i++) {\n\
    \      if ($x % $i == 0) {\n        $x = $x / $i;\n        if ($x == $n) {\n \
    \         return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3d04yyuz.php:44\n\
    Stack trace:\n#0 /tmp/tmp3d04yyuz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3d04yyuz.php\
    \ on line 44\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($n ** $i\
    \ == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6rmnj3k.php:42\n\
    Stack trace:\n#0 /tmp/tmpe6rmnj3k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe6rmnj3k.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  return $int == floor($int);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0efksvl.php:35\n\
    Stack trace:\n#0 /tmp/tmpz0efksvl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0efksvl.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while (pow($n, $i) <= $x) {\n    if\
    \ (pow($n, $i) == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gql_f05.php:42\n\
    Stack trace:\n#0 /tmp/tmp5gql_f05.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5gql_f05.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n  return false;\n\
    }\n\necho is_simple_power(1, 4);\necho is_simple_power(2, 2);\necho is_simple_power(8,\
    \ 2);\necho is_simple_power(3, 2);\necho is_simple_power(3, 1);\necho is_simple_power(5,\
    \ 3);\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp1ry3bkis.php on line 23

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n\t$i = 1;\n\twhile ($i <= $x) {\n\t\tif ($i == $x)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t\t$i *= $n;\n\t}\n\treturn false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($n ** $i <= $x) {\n        if ($n ** $i == $x) {\n  \
    \          return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = 1;\n  while ($result <= $x)\
    \ {\n    $result = $n ** $i;\n    if ($result == $x) {\n      return true;\n \
    \   }\n    $i++;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o126eei.php:45\n\
    Stack trace:\n#0 /tmp/tmp4o126eei.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4o126eei.php\
    \ on line 45\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if($x == 1 && $n == 1) return true;\n  if($x ==\
    \ 1 && $n != 1) return false;\n  if($x == $n) return true;\n  if($x % $n != 0)\
    \ return false;\n  return is_simple_power($x / $n, $n);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkzawa71.php:39\n\
    Stack trace:\n#0 /tmp/tmpvkzawa71.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvkzawa71.php\
    \ on line 39\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($n ** $i\
    \ == $x) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6rmnj3k.php:42\n\
    Stack trace:\n#0 /tmp/tmpe6rmnj3k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe6rmnj3k.php\
    \ on line 42\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = pow($n, round(log($x, $n)));\n  return\
    \ $result == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $int = log($x, $n);\n    if (is_int($int)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4y7gnzg.php:31\n\
    Stack trace:\n#0 /tmp/tmph4y7gnzg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph4y7gnzg.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $i = 2;\n    while ($i <= $x) {\n      if ($i == $x)\
    \ {\n        $result = true;\n      }\n      $i *= $n;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i <= $x) {\n        if ($i\
    \ == $x) {\n            return true;\n        }\n        $i *= $n;\n    }\n  \
    \  return false;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($n ** $i < $x) {\n      \
    \  $i++;\n    }\n    if ($n ** $i == $x) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04o8b4b_.php:43\n\
    Stack trace:\n#0 /tmp/tmp04o8b4b_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp04o8b4b_.php\
    \ on line 43\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $int = 1;\n    while ($n**$int < $x) {\n      $int++;\n\
    \    }\n    if ($n**$int == $x) {\n      $result = true;\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = 1;\n  while ($result < $x)\
    \ {\n    $result = $n ** $i;\n    $i++;\n  }\n  if ($result == $x) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  } elseif ($x\
    \ % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i <= $x) {\n    if ($i == $x)\
    \ {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    if ($x == $n) {\n        return true;\n    }\n    $i = 1;\n    while ($i\
    \ < $x) {\n        $i *= $n;\n        if ($i == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    $i = 1;\n    while ($i < $x) {\n        $i *=\
    \ $n;\n    }\n    return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n\
    >>> is_simple_power(2, 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3,\
    \ 2)\nfalse\n>>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n\
    */\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = $n ** intval(log($x, $n));\n  return\
    \ $result == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n    if ($x == 1) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2, 2)\ntrue\n\
    >>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n>>> is_simple_power(3,\
    \ 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x / $n, $n);\n\
    }\n\nvar_dump(is_simple_power(1, 4));\nvar_dump(is_simple_power(2, 2));\nvar_dump(is_simple_power(8,\
    \ 2));\nvar_dump(is_simple_power(3, 2));\nvar_dump(is_simple_power(3, 1));\nvar_dump(is_simple_power(5,\
    \ 3));\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: 'bool(true)

    bool(true)

    bool(true)

    bool(false)


    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpgeglm7lz.php on line 25

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  return $int == floor($int);\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0efksvl.php:35\n\
    Stack trace:\n#0 /tmp/tmpz0efksvl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0efksvl.php\
    \ on line 35\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = pow($n, floor(log($x, $n)));\n  return\
    \ $result == $x;\n}\necho is_simple_power(1, 4);\necho is_simple_power(2, 2);\n\
    echo is_simple_power(8, 2);\necho is_simple_power(3, 2);\necho is_simple_power(3,\
    \ 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == $n) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n \
    \ }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $i = 1;\n  $result = pow($n, $i);\n  while ($result\
    \ <= $x) {\n    if ($result == $x) {\n      return true;\n    }\n    $i++;\n \
    \   $result = pow($n, $i);\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfo84bql5.php:44\n\
    Stack trace:\n#0 /tmp/tmpfo84bql5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfo84bql5.php\
    \ on line 44\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  return pow($n, round(log($x, $n))) == $x;\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $result = false;\n  if ($x == 1) {\n    $result\
    \ = true;\n  } else {\n    $i = 1;\n    while ($i < $x) {\n      $i *= $n;\n \
    \     if ($i == $x) {\n        $result = true;\n      }\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n\
    \  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n      return true;\n\
    \    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) return true;\n  if ($x == $n) return\
    \ true;\n  if ($x % $n != 0) return false;\n  return is_simple_power($x / $n,\
    \ $n);\n}\n\n/*\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2, 2)\n\
    true\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n>>> is_simple_power(3,\
    \ 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  $int = log($x, $n);\n  if (is_int($int)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu10v75jk.php:31\n\
    Stack trace:\n#0 /tmp/tmpu10v75jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu10v75jk.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  $i = 2;\n\
    \  while ($i < $x) {\n    if ($n ** $i == $x) {\n      return true;\n    }\n \
    \   $i++;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Your task is to write a function that returns true if a number\
    \ x is a simple\npower of n and false in other cases.\nx is a simple power of\
    \ n if n**int=x\nFor example:\n>>> is_simple_power(1, 4)\ntrue\n>>> is_simple_power(2,\
    \ 2)\ntrue\n>>> is_simple_power(8, 2)\ntrue\n>>> is_simple_power(3, 2)\nfalse\n\
    >>> is_simple_power(3, 1)\nfalse\n>>> is_simple_power(5, 3)\nfalse*/\nfunction\
    \ is_simple_power($x, $n) {\n  if ($x == 1) {\n    return true;\n  }\n  if ($x\
    \ == 0) {\n    return false;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778

name: HumanEval_161_solve
language: php
prompt: "<?php\n/* You are given a string s.\nif s[i] is a letter, reverse its case\
  \ from lower to upper or vise versa, \notherwise keep it as it is.\nIf the string\
  \ contains no letters, reverse the string.\nThe function should return the resulted\
  \ string.\nExamples\n>>> solve(\"1234\")\n\"4321\"\n>>> solve(\"ab\")\n\"AB\"\n\
  >>> solve(\"#a@C\")\n\"#A@c\"*/\nfunction solve($s) {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters as\
    \ $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $result\
    \ = '';\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $r = [];\n    $hasLetter = false;\n    foreach\
    \ ($s as $v) {\n        if (ctype_alpha($v)) {\n            $hasLetter = true;\n\
    \            $r[] = ctype_upper($v) ? strtolower($v) : strtoupper($v);\n     \
    \   } else {\n            $r[] = $v;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $r) : strrev($s);\n}", "    $s = str_split($s);\n    $s = array_map(function($v){\n\
    \        if(ctype_alpha($v)){\n            return ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        }\n        return $v;\n    }, $s);\n    return implode('',\
    \ $s);\n}\n\n/*", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            if\
    \ (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode('', $result);\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev(implode('', $others));\n    }\n    $letters = array_map(function\
    \ ($letter) {\n        if (ctype_lower($letter)) {\n            return strtoupper($letter);\n\
    \        } else {\n            return strtolower($letter);\n        }\n    },\
    \ $letters);\n    return implode('', $others) . implode('', $letters);\n}", " \
    \   $s = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n       \
    \ if (ctype_alpha($char)) {\n            $res .= ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return strrev($res);\n}\n\n/*", "    $arr = str_split($s);\n \
    \   $result = [];\n    foreach ($arr as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $result[] = ctype_upper($value) ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $result = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[] =\
    \ ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (isset($letters[$s[$i]])) {\n    \
    \        $result .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $s[$key] = strtoupper($value) == $value ? strtolower($value)\
    \ : strtoupper($value);\n        }\n    }\n    return implode('', $s);\n}\n\n\
    echo solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ strrev($result);\n}\n", "    if(preg_match('/[a-zA-Z]/', $s)){\n        return\
    \ strtolower($s) ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\n\n\
    /*", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\n/*", "    $s = str_split($s);\n   \
    \ $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = '';\n    foreach ($s\
    \ as $v) {\n        if (ctype_alpha($v)) {\n            $res .= strtoupper($v)\
    \ == $v ? strtolower($v) : strtoupper($v);\n        } else {\n            $res\
    \ .= $v;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res =\
    \ '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $res .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n \
    \       } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n/*", "    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "    $len = strlen($s);\n    $result = \"\";\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho\
    \ \"\\n\";\necho solve(\"#a@C\");\necho \"\\n\";", "  $s = str_split($s);\n  $res\
    \ = '';\n  foreach ($s as $char) {\n    if (ctype_alpha($char)) {\n      $res\
    \ .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n    } else {\n\
    \      $res .= $char;\n    }\n  }\n  return strrev($res);\n}", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $r = [];\n    foreach($s as $v){\n        if(ctype_alpha($v)){\n        \
    \    $r[] = ctype_upper($v) ? strtolower($v) : strtoupper($v);\n        }else{\n\
    \            $r[] = $v;\n        }\n    }\n    return implode('',$r);\n}", " \
    \   $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $letters[] = $value;\n  \
    \      }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $s[$key] = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        }\n    }\n    return implode($s);\n}\n\n/*", "    $s = str_split($s);\n\
    \    $result = \"\";\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"\
    ab\");\necho \"<br>\";\necho solve(\"#a@C\");", "    $newStr = \"\";\n    for($i\
    \ = 0; $i < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n           \
    \ if(ctype_upper($s[$i])){\n                $newStr .= strtolower($s[$i]);\n \
    \           }else{\n                $newStr .= strtoupper($s[$i]);\n         \
    \   }\n        }else{\n            $newStr .= $s[$i];\n        }\n    }\n    return\
    \ $newStr;\n}\n", "    $s = str_split($s);\n    $new = [];\n    foreach($s as\
    \ $v){\n        if(ctype_alpha($v)){\n            $new[] = ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        }else{\n            $new[] = $v;\n        }\n   \
    \ }\n    return implode('', $new);\n}\n\n/*", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            if (ctype_upper($value))\
    \ {\n                $s[$key] = strtolower($value);\n            } else {\n  \
    \              $s[$key] = strtoupper($value);\n            }\n        }\n    }\n\
    \    return implode($s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = '';\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $res .=\
    \ ctype_upper($value) ? strtolower($value) : strtoupper($value);\n        } else\
    \ {\n            $res .= $value;\n        }\n    }\n    return $res;\n}\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $result) : strrev($s);\n}", "    $s = str_split($s);\n    $str\
    \ = '';\n    foreach ($s as $v) {\n        if (ctype_alpha($v)) {\n          \
    \  $str .= strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n        }\
    \ else {\n            $str .= $v;\n        }\n    }\n    return $str;\n}\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = \"\";\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $res .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $res .= $char;\n        }\n    }\n    return $res;\n}\necho solve(\"1234\"\
    );\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\n\
    echo \"\\n\";", "    $s = str_split($s);\n    $res = \"\";\n    $letters = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n    $letters\
    \ = array_flip($letters);\n    $letters = array_change_key_case($letters, CASE_UPPER);\n\
    \    $letters = array_flip($letters);\n    $letters = array_change_key_case($letters,\
    \ CASE_LOWER);\n    for ($i = 0; $i < count($s); $i++) {\n        if (array_key_exists($s[$i],\
    \ $letters)) {\n            $res .= $letters[$s[$i]];\n        } else {\n    \
    \        $res .= $s[$i];\n        }\n    }\n    return $res;\n}\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $res[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return implode('', $res);\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    if(!preg_match('/[a-zA-Z]/',\
    \ $s)){\n        return strrev($s);\n    }\n    $s = str_split($s);\n    $result\
    \ = '';\n    foreach($s as $char){\n        if(ctype_alpha($char)){\n        \
    \    $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }else{\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s\
    \ = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $result[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n        if\
    \ (ctype_alpha($value)) {\n            $letters[] = $value;\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    if (count($letters) ==\
    \ 0) {\n        return strrev(implode('', $result));\n    }\n    $letters = array_reverse($letters);\n\
    \    foreach ($result as $key => $value) {\n        $letters[] = $value;\n   \
    \ }\n    return implode('', $letters);\n}\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = [];\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n   \
    \     if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value) ==\
    \ $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n    return\
    \ implode($s);\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        if (ctype_upper($char)) {\n                $result[] = strtolower($char);\n\
    \            } else {\n                $result[] = strtoupper($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    if (count($result) == 0) {\n        return strrev($s);\n    }\n    return\
    \ implode($result);\n}", "    $s = str_split($s);\n    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $letters2 = str_split($letters2);\n    $result = \"\";\n    $count = 0;\n\
    \    foreach($s as $char){\n        if(in_array($char, $letters)){\n         \
    \   $count++;\n        }\n        if(in_array($char, $letters2)){\n          \
    \  $count++;\n        }\n    }\n    if($count == 0){\n        $s = array_reverse($s);\n\
    \        foreach($s as $char){\n            $result .= $char;\n        }\n   \
    \     return $result;\n    }\n    foreach($s as $char){\n        if(in_array($char,\
    \ $letters)){\n            $index = array_search($char, $letters);\n         \
    \   $result .= $letters2[$index];\n        }\n        else if(in_array($char,\
    \ $letters2)){\n            $index = array_search($char, $letters2);\n       \
    \     $result .= $letters[$index];\n        }\n        else{\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}", "    $s = str_split($s);\n\
    \    $r = '';\n    foreach($s as $c) {\n        if(ctype_alpha($c)) {\n      \
    \      $r .= ctype_upper($c) ? strtolower($c) : strtoupper($c);\n        } else\
    \ {\n            $r .= $c;\n        }\n    }\n    return strrev($r);\n}", "  \
    \  $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "  $s = str_split($s);\n  $res = '';\n  foreach\
    \ ($s as $char) {\n    if (ctype_alpha($char)) {\n      $res .= ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n    } else {\n      $res .= $char;\n\
    \    }\n  }\n  return $res;\n}\n\necho solve(\"#a@C\");", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters .= strtoupper($letters);\n    $result = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (strpos($letters, $s[$i]) !== false) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $value) {\n\
    \        if (ctype_alpha($value)) {\n            $result[] = ctype_upper($value)\
    \ ? strtolower($value) : strtoupper($value);\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve(\"\
    1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\"\
    );", "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (isset($letters[$s[$i]])) {\n    \
    \        $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$s = str_split($s);\n\t$res = [];\n\tforeach ($s as $k =>\
    \ $v) {\n\t\tif (ctype_alpha($v)) {\n\t\t\t$res[] = ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n\t\t} else {\n\t\t\t$res[] = $v;\n\t\t}\n\t}\n\treturn implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $new = [];\n    foreach($s as $char){\n   \
    \     if(ctype_alpha($char)){\n            $new[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        }else{\n            $new[] = $char;\n        }\n\
    \    }\n    return implode($new);\n}\necho solve(\"1234\");\necho \"\\n\";\necho\
    \ solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho \"\\n\";", "    $s\
    \ = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $result[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = array_filter($s, function($v){\n        return ctype_alpha($v);\n    });\n\
    \    if(empty($letters)){\n        return strrev($s);\n    }\n    foreach($s as\
    \ $k => $v){\n        if(ctype_alpha($v)){\n            $s[$k] = strtoupper($v)\
    \ == $v ? strtolower($v) : strtoupper($v);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n\n/*", "    $s = str_split($s);\n    $letters = [];\n    $numbers =\
    \ [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $numbers[]\
    \ = $value;\n        }\n    }\n    $letters = array_reverse($letters);\n    $numbers\
    \ = array_reverse($numbers);\n    $s = array_merge($letters, $numbers);\n    $s\
    \ = implode('', $s);\n    return $s;\n}\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $res = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $res .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = '';\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $v) {\n        if (ctype_alpha($v)) {\n  \
    \          $res .= strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n \
    \       } else {\n            $res .= $v;\n        }\n    }\n    return $res;\n\
    }\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = [];\n    $others\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        } else {\n            $others[] = $char;\n\
    \        }\n    }\n    $letters = array_map(function($char) {\n        return\
    \ ctype_upper($char) ? strtolower($char) : strtoupper($char);\n    }, $letters);\n\
    \    $letters = array_reverse($letters);\n    $others = array_reverse($others);\n\
    \    return implode('', $letters) . implode('', $others);\n}", "    $res = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $res .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    return $res;\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $s = str_split($s);\n    $result = [];\n    $letters = range('a', 'z');\n  \
    \  $letters = array_merge($letters, range('A', 'Z'));\n    $letters = array_flip($letters);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result[] = $char == strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\"\
    ) . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n   \
    \ $letters = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode($s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $letters = array_filter($s, function($v)\
    \ {\n        return ctype_alpha($v);\n    });\n    if (empty($letters)) {\n  \
    \      return strrev(implode('', $s));\n    }\n    foreach ($s as $k => $v) {\n\
    \        if (ctype_alpha($v)) {\n            $s[$k] = strtoupper($v) == $v ? strtolower($v)\
    \ : strtoupper($v);\n        }\n    }\n    return implode('', $s);\n}", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $str = '';\n   \
    \ foreach ($s as $value) {\n        if (ctype_alpha($value)) {\n            $str\
    \ .= strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $str .= $value;\n        }\n    }\n    return $str;\n\
    }\necho solve(\"#a@C\");", "    $arr = str_split($s);\n    $result = [];\n   \
    \ foreach ($arr as $value) {\n        if (ctype_alpha($value)) {\n           \
    \ $result[] = ctype_upper($value) ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $s = array_map(function($v){\n        if(ctype_alpha($v)){\n            return\
    \ strtoupper($v) === $v ? strtolower($v) : strtoupper($v);\n        }\n      \
    \  return $v;\n    }, $s);\n    return implode('', $s);\n}\n\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) > 0 ? implode('', $result) : strrev($s);\n\
    }", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as\
    \ $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $s = array_map(function($x){\n\
    \        if(ctype_alpha($x)){\n            if(ctype_upper($x)){\n            \
    \    return strtolower($x);\n            }else{\n                return strtoupper($x);\n\
    \            }\n        }else{\n            return $x;\n        }\n    },$s);\n\
    \    return implode($s);\n}", "    $s = str_split($s);\n    $res = '';\n    foreach\
    \ ($s as $v) {\n        if (ctype_alpha($v)) {\n            $res .= ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        } else {\n            $res .= $v;\n\
    \        }\n    }\n    return $res;\n}\necho solve(\"1234\") . \"\\n\";\necho\
    \ solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = array_filter($s,\
    \ function($letter) {\n        return ctype_alpha($letter);\n    });\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    $s = array_map(function($letter) {\n\
    \        return ctype_alpha($letter) ? strtolower($letter) == $letter ? strtoupper($letter)\
    \ : strtolower($letter) : $letter;\n    }, $s);\n    return implode($s);\n}",
  "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $new = [];\n    for($i = 0; $i < count($s); $i++){\n\
    \        if(in_array($s[$i], $letters)){\n            $new[] = strtoupper($s[$i]);\n\
    \        }else if(in_array($s[$i], $letters2)){\n            $new[] = strtolower($s[$i]);\n\
    \        }else{\n            $new[] = $s[$i];\n        }\n    }\n    return implode(\"\
    \", $new);\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode('', $s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = '';\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $res .= ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res\
    \ .= $char;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    foreach ($s as $char)\
    \ {\n        if (strpos($letters, $char) !== false) {\n            $result .=\
    \ strtoupper($char);\n        } elseif (strpos($letters, strtolower($char)) !==\
    \ false) {\n            $result .= strtolower($char);\n        } else {\n    \
    \        $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s\
    \ = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $result[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res\
    \ = \"\";\n    $flag = false;\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $flag = true;\n            $res .= strtoupper($value) == $value\
    \ ? strtolower($value) : strtoupper($value);\n        } else {\n            $res\
    \ .= $value;\n        }\n    }\n    return $flag ? $res : strrev($res);\n}\n\n\
    echo solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $s = str_split($s);\n    $result = '';\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result .= ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "  $s = str_split($s);\n  $res =\
    \ '';\n  foreach ($s as $char) {\n    if (ctype_alpha($char)) {\n      $res .=\
    \ ctype_upper($char) ? strtolower($char) : strtoupper($char);\n    } else {\n\
    \      $res .= $char;\n    }\n  }\n  return $res;\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $letters2 = str_split($letters2);\n    $s = str_split($s);\n    $result\
    \ = \"\";\n    for($i = 0; $i < count($s); $i++){\n        if(in_array($s[$i],\
    \ $letters)){\n            $result .= strtoupper($s[$i]);\n        }else if(in_array($s[$i],\
    \ $letters2)){\n            $result .= strtolower($s[$i]);\n        }else{\n \
    \           $result .= $s[$i];\n        }\n    }\n    return $result;\n}", " \
    \   $s = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n       \
    \ if (ctype_alpha($char)) {\n            $res .= strtoupper($char) == $char ?\
    \ strtolower($char) : strtoupper($char);\n        } else {\n            $res .=\
    \ $char;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $letters2 = str_split($letters2);\n    $s = str_split($s);\n    $result\
    \ = \"\";\n    for($i = 0; $i < count($s); $i++){\n        if(in_array($s[$i],\
    \ $letters)){\n            $result .= strtoupper($s[$i]);\n        }else if(in_array($s[$i],\
    \ $letters2)){\n            $result .= strtolower($s[$i]);\n        }else{\n \
    \           $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n/*\n\
    \    ----TESTE----\n*/\n\necho solve(\"1234\").\"<br>\";\necho solve(\"ab\").\"\
    <br>\";\necho solve(\"#a@C\").\"<br>\";", "    $s = str_split($s);\n    $result\
    \ = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = array_filter($s, function($v) {\n        return ctype_alpha($v);\n    });\n\
    \    if (empty($letters)) {\n        return strrev(implode($s));\n    }\n    return\
    \ implode(array_map(function($v) {\n        return ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n    }, $s));\n}", "    $s = str_split($s);\n    $res = '';\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res\
    \ .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n   \
    \     } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\n/*", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $v) {\n\
    \        if (ctype_alpha($v)) {\n            $res[] = ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        } else {\n            $res[] = $v;\n        }\n \
    \   }\n    return implode('', $res);\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    $numbers = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $numbers[]\
    \ = $char;\n        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $numbers));\n    }\n    $letters = array_reverse($letters);\n    $letters =\
    \ array_map(function ($letter) {\n        if (ctype_upper($letter)) {\n      \
    \      return strtolower($letter);\n        }\n        return strtoupper($letter);\n\
    \    }, $letters);\n    return implode('', $letters) . implode('', $numbers);\n\
    }", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n  \
    \  $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            if (ctype_upper($value))\
    \ {\n                $s[$key] = strtolower($value);\n            } else {\n  \
    \              $s[$key] = strtoupper($value);\n            }\n        }\n    }\n\
    \    return implode('', $s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        }\n    }\n    $letters = array_reverse($letters);\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $s[$key]\
    \ = array_shift($letters);\n        }\n    }\n    return implode($s);\n}\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $new_s = '';\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $new_s .= strtoupper($value) == $value ? strtolower($value) :\
    \ strtoupper($value);\n        } else {\n            $new_s .= $value;\n     \
    \   }\n    }\n    return $new_s;\n}\n\necho solve(\"#a@C\");", "    $letters =\
    \ str_split($s);\n    $res = '';\n    foreach ($letters as $letter) {\n      \
    \  if (ctype_alpha($letter)) {\n            $res .= ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $res .= $letter;\n   \
    \     }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\necho solve(\"ab\"\
    );\necho solve(\"#a@C\");", "    $letters = str_split($s);\n    $result = [];\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");", "    $s = str_split($s);\n\
    \    $res = \"\";\n    $flag = false;\n    for($i = 0; $i < count($s); $i++){\n\
    \        if(ctype_alpha($s[$i])){\n            $flag = true;\n            if(ctype_upper($s[$i])){\n\
    \                $res .= strtolower($s[$i]);\n            }else{\n           \
    \     $res .= strtoupper($s[$i]);\n            }\n        }else{\n           \
    \ $res .= $s[$i];\n        }\n    }\n    if($flag){\n        return $res;\n  \
    \  }else{\n        return strrev($res);\n    }\n}\n\n/*\n    ----TESTE----\n*/\n\
    \necho \"<pre>\";\n    echo solve(\"1234\");\necho \"</pre>\";\necho \"<pre>\"\
    ;\n    echo solve(\"ab\");\necho \"</pre>\";\necho \"<pre>\";\n    echo solve(\"\
    #a@C\");\necho \"</pre>\";", "    $s = str_split($s);\n    $letters = [];\n  \
    \  foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n    \
    \        $letters[] = $value;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n   \
    \     if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value) ==\
    \ $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n    return\
    \ implode($s);\n}\n\n/*\n    ----TESTE----\n*/\n\necho \"<pre>\";\necho solve(\"\
    1234\");\necho \"</pre>\";\necho \"<pre>\";\necho solve(\"ab\");\necho \"</pre>\"\
    ;\necho \"<pre>\";\necho solve(\"#a@C\");\necho \"</pre>\";", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode($s);\n}\n\n/*", "    $s = str_split($s);\n    $result = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key =>\
    \ $value) {\n        if (ctype_alpha($value)) {\n            $letters[] = $value;\n\
    \        }\n    }\n    if (count($letters) === 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $s[$key] = strtoupper($value);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $s = str_split($s);\n    $res = '';\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res .= ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res\
    \ .= $char;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode('', $s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n    foreach ($s\
    \ as $v) {\n        if (ctype_alpha($v)) {\n            $res[] = ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        } else {\n            $res[] = $v;\n\
    \        }\n    }\n    return implode('', $res);\n}\n\n/*", "    $s = str_split($s);\n\
    \    $res = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n", "    $str = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            $str .= strtoupper($s[$i]) ==\
    \ $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n      \
    \      $str .= $s[$i];\n        }\n    }\n    return $str;\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $new_s = \"\";\n    $flag = false;\n    for($i = 0; $i < count($s); $i++){\n\
    \        if(ctype_alpha($s[$i])){\n            $flag = true;\n            if(ctype_upper($s[$i])){\n\
    \                $new_s .= strtolower($s[$i]);\n            }else{\n         \
    \       $new_s .= strtoupper($s[$i]);\n            }\n        }else{\n       \
    \     $new_s .= $s[$i];\n        }\n    }\n    if($flag){\n        return $new_s;\n\
    \    }else{\n        return strrev($s);\n    }\n}\n\n/*", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $letters[] = $letter;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $s[$key] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        }\n    }\n\
    \    return implode('', $s);\n}", "    $s = str_split($s);\n    $s = array_map(function($v){\n\
    \        if(ctype_alpha($v)){\n            return strtoupper($v) == $v ? strtolower($v)\
    \ : strtoupper($v);\n        }\n        return $v;\n    }, $s);\n    return implode('',\
    \ $s);\n}\n\n/*\n    ----TESTE----\n*/\n\necho solve(\"1234\") . \"\\n\";\necho\
    \ solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $v) {\n        if (ctype_alpha($v)) {\n  \
    \          $res .= ctype_upper($v) ? strtolower($v) : strtoupper($v);\n      \
    \  } else {\n            $res .= $v;\n        }\n    }\n    return $res;\n}\n\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = [];\n    $numbers\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (is_numeric($value))\
    \ {\n            $numbers[] = $value;\n        } else {\n            $letters[]\
    \ = $value;\n        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $numbers));\n    }\n    $letters = array_map(function ($letter) {\n        if\
    \ (ctype_upper($letter)) {\n            return strtolower($letter);\n        }\
    \ else {\n            return strtoupper($letter);\n        }\n    }, $letters);\n\
    \    return implode('', $letters) . implode('', $numbers);\n}\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n  \
    \  $res = '';\n    foreach ($s as $v) {\n        if (ctype_alpha($v)) {\n    \
    \        $res .= ctype_upper($v) ? strtolower($v) : strtoupper($v);\n        }\
    \ else {\n            $res .= $v;\n        }\n    }\n    return strrev($res);\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters\
    \ = str_split($s);\n    $result = \"\";\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return strlen($result)\
    \ == 0 ? strrev($s) : $result;\n}\necho solve(\"1234\");\necho solve(\"ab\");\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n     \
    \       $res[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $v) {\n    \
    \    if (ctype_alpha($v)) {\n            $res .= ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        } else {\n            $res .= $v;\n        }\n  \
    \  }\n    return $res;\n}\n", "    $s = str_split($s);\n    $res = [];\n    foreach\
    \ ($s as $v) {\n        if (ctype_alpha($v)) {\n            $res[] = ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        } else {\n            $res[] = $v;\n\
    \        }\n    }\n    return implode('', $res);\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;", "    $s = str_split($s);\n    $res = [];\n    $letters =\
    \ [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $letters[] = $char;\n        } else {\n            $res[] = $char;\n  \
    \      }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $res));\n    }\n    $letters = array_reverse($letters);\n    $i = 0;\n    foreach\
    \ ($res as $key => $char) {\n        if (ctype_alpha($char)) {\n            $res[$key]\
    \ = $letters[$i];\n            $i++;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $result = '';\n    foreach ($s as $value) {\n\
    \        if (ctype_alpha($value)) {\n            $result .= strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        } else {\n   \
    \         $result .= $value;\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "\t$arr = str_split($s);\n\
    \t$str = '';\n\tforeach ($arr as $key => $value) {\n\t\tif (ctype_alpha($value))\
    \ {\n\t\t\t$str .= strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \t\t} else {\n\t\t\t$str .= $value;\n\t\t}\n\t}\n\treturn $str;\n}\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n\
    \    foreach ($s as $value) {\n        if (is_numeric($value)) {\n           \
    \ $numbers[] = $value;\n        } else {\n            $letters[] = $value;\n \
    \       }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $numbers));\n    }\n    foreach ($letters as $key => $value) {\n        if (ctype_lower($value))\
    \ {\n            $letters[$key] = strtoupper($value);\n        } else {\n    \
    \        $letters[$key] = strtolower($value);\n        }\n    }\n    return implode('',\
    \ $letters) . implode('', $numbers);\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $new_string = '';\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $new_string .= strtolower($s[$i]);\n            } else {\n\
    \                $new_string .= strtoupper($s[$i]);\n            }\n        }\
    \ else {\n            $new_string .= $s[$i];\n        }\n    }\n    if (ctype_alpha($new_string))\
    \ {\n        return strrev($new_string);\n    } else {\n        return $new_string;\n\
    \    }\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");",
  "    $s = str_split($s);\n    $letters = [];\n    $others = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $others[] = $char;\n        }\n    }\n    $letters\
    \ = array_map(function($letter) {\n        return ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n    }, $letters);\n    return count($letters) ? implode('',\
    \ $letters) : strrev(implode('', $others));\n}", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n    foreach ($s\
    \ as $v) {\n        if (ctype_alpha($v)) {\n            $res[] = ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        } else {\n            $res[] = $v;\n\
    \        }\n    }\n    return implode('', $res);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = '';\n    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $result .= strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $result .= $char;\n        }\n    }\n    return $isLetter ? $result : strrev($result);\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $s = str_split($s);\n    $res = [];\n    $flag = false;\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $flag = true;\n   \
    \         $res[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return $flag\
    \ ? implode('', $res) : strrev($s);\n}", "    $s = str_split($s);\n    $res =\
    \ '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $res .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n \
    \       } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;", "    $s = str_split($s);\n    $res = '';\n    foreach ($s\
    \ as $v) {\n        if (ctype_alpha($v)) {\n            $res .= strtoupper($v)\
    \ == $v ? strtolower($v) : strtoupper($v);\n        } else {\n            $res\
    \ .= $v;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res =\
    \ [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $res[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n        }\
    \ else {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\n/*", "    $letters = str_split($s);\n    $new_string = '';\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $new_string .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $new_string .= $letter;\n\
    \        }\n    }\n    return $new_string;\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = array_filter($s,\
    \ function($v){\n        return ctype_alpha($v);\n    });\n    if(empty($letters)){\n\
    \        return strrev($s);\n    }\n    foreach($s as $k => $v){\n        if(ctype_alpha($v)){\n\
    \            $s[$k] = ctype_upper($v) ? strtolower($v) : strtoupper($v);\n   \
    \     }\n    }\n    return implode('', $s);\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $new =\
    \ [];\n    foreach($s as $v){\n        if(ctype_alpha($v)){\n            $new[]\
    \ = strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n        }else{\n\
    \            $new[] = $v;\n        }\n    }\n    return implode('',$new);\n}",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve(\"1234\") . \"\\n\";\necho\
    \ solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $s = array_map(function($v){\n        if(ctype_alpha($v)){\n            return\
    \ strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n        }\n       \
    \ return $v;\n    }, $s);\n    return implode('', $s);\n}\n\n/*\n    ----TESTE----\n\
    */\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $s = str_split($s);\n    $r = '';\n    foreach($s as\
    \ $v){\n        if(ctype_alpha($v)){\n            $r .= strtoupper($v) == $v ?\
    \ strtolower($v) : strtoupper($v);\n        }else{\n            $r .= $v;\n  \
    \      }\n    }\n    return $r;\n}", "    $letters = str_split($s);\n    $result\
    \ = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode($result);\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res = '';\n   \
    \ foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res\
    \ .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $res .= $char;\n        }\n    }\n    return $res;\n}\n\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $result = \"\";\n    for($i = 0; $i < count($s);\
    \ $i++){\n        if(in_array($s[$i], $letters)){\n            $result .= strtoupper($s[$i]);\n\
    \        }else if(in_array($s[$i], $letters2)){\n            $result .= strtolower($s[$i]);\n\
    \        }else{\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result =\
    \ [];\n    $letters = range('a', 'z');\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result[] = strtoupper($char);\n\
    \        } else {\n            $result[] = strtolower($char);\n        }\n   \
    \ }\n    return implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $res = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $res .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = array_filter($s, function($v){\n        return ctype_alpha($v);\n    });\n\
    \    if(count($letters) == 0){\n        return strrev($s);\n    }\n    $s = array_map(function($v){\n\
    \        if(ctype_alpha($v)){\n            return strtoupper($v) == $v ? strtolower($v)\
    \ : strtoupper($v);\n        }\n        return $v;\n    }, $s);\n    return implode($s);\n\
    }", "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $numbers[] = $value;\n        }\n \
    \   }\n    if (count($letters) > 0) {\n        $letters = array_map(function ($value)\
    \ {\n            return strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        }, $letters);\n    } else {\n        $numbers = array_reverse($numbers);\n\
    \    }\n    return implode(\"\", array_merge($letters, $numbers));\n}\n\necho\
    \ solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $r = '';\n    foreach($s as $v){\n  \
    \      if(ctype_alpha($v)){\n            $r .= strtoupper($v) == $v ? strtolower($v)\
    \ : strtoupper($v);\n        }else{\n            $r .= $v;\n        }\n    }\n\
    \    return $r;\n}", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n      \
    \  } else {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s =\
    \ str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $s = str_split($s);\n    $letters = [];\n    foreach ($s as $i => $char) {\n\
    \        if (ctype_alpha($char)) {\n            $letters[] = $i;\n        }\n\
    \    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    foreach\
    \ ($letters as $i) {\n        $s[$i] = ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n    }\n    return implode($s);\n}", "    $s = str_split($s);\n\
    \    $res = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $res[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return implode('', $res);\n}\n\necho solve(\"1234\");\necho solve(\"\
    ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n   \
    \ $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $res[] = strtolower($char) ==\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $res[] = $char;\n        }\n    }\n    return $isLetter ? implode('', $res)\
    \ : strrev(implode('', $res));\n}", "    $result = '';\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $arr = str_split($s);\n    $res = '';\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if (ctype_alpha($arr[$i])) {\n            $res .= strtoupper($arr[$i])\
    \ == $arr[$i] ? strtolower($arr[$i]) : strtoupper($arr[$i]);\n        } else {\n\
    \            $res .= $arr[$i];\n        }\n    }\n    return $res;\n}\n\necho\
    \ solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $res = [];\n    $flag = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $flag = true;\n            $res[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return $flag ? implode('', $res) : strrev($s);\n}", "    $s =\
    \ str_split($s);\n    $result = '';\n    $letters = range('a', 'z');\n    $letters\
    \ = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $str = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $str .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $str .= $s[$i];\n        }\n    }\n    return $str;\n\
    }\n\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $result = \"\";\n    for\
    \ ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n     \
    \       if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $v) {\n\
    \        if (ctype_alpha($v)) {\n            $res .= ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        } else {\n            $res .= $v;\n        }\n  \
    \  }\n    return $res;\n}\n", "    $s = str_split($s);\n    $letters = [];\n \
    \   $others = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $others[]\
    \ = $char;\n        }\n    }\n    $letters = array_map(function($letter) {\n \
    \       return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return empty($letters) ? strrev(implode('', $others))\
    \ : implode('', $letters) . implode('', $others);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = [];\n    $others = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $others[]\
    \ = $char;\n        }\n    }\n    $letters = array_map(function($letter) {\n \
    \       return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return count($letters) > 0 ? implode('', $letters) . implode('',\
    \ $others) : implode('', array_reverse($others));\n}", "    $s = str_split($s);\n\
    \    $str = '';\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $str .= strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $str .= $value;\n        }\n    }\n    return $str;\n\
    }\n\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res = '';\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $res .= $char;\n        }\n    }\n    return $res;\n}\n\necho solve(\"\
    1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\\
    n\";", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $res[] = ctype_upper($char) ?\
    \ strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return implode('', $res);\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $s = array_map(function($x){\n        if(ctype_alpha($x)){\n            return\
    \ ctype_upper($x) ? strtolower($x) : strtoupper($x);\n        }\n        return\
    \ $x;\n    }, $s);\n    return implode('', $s);\n}", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    $numbers = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (is_numeric($value)) {\n            $numbers[]\
    \ = $value;\n        } else {\n            $letters[] = $value;\n        }\n \
    \   }\n    if (count($letters) == 0) {\n        $result = array_reverse($numbers);\n\
    \    } else {\n        foreach ($letters as $key => $value) {\n            if\
    \ (ctype_lower($value)) {\n                $result[] = strtoupper($value);\n \
    \           } else {\n                $result[] = strtolower($value);\n      \
    \      }\n        }\n        $result = array_merge($result, $numbers);\n    }\n\
    \    return implode($result);\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode($s);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $str = '';\n    foreach ($s as $key =>\
    \ $value) {\n        if (ctype_alpha($value)) {\n            $str .= strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        } else {\n   \
    \         $str .= $value;\n        }\n    }\n    return $str;\n}\n\necho solve(\"\
    #a@C\");", "    $s = str_split($s);\n    $res = \"\";\n    foreach ($s as $c)\
    \ {\n        if (ctype_alpha($c)) {\n            $res .= ctype_upper($c) ? strtolower($c)\
    \ : strtoupper($c);\n        } else {\n            $res .= $c;\n        }\n  \
    \  }\n    return $res;\n}\n\n/*", "    $letters = str_split($s);\n    $result\
    \ = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $res[]\
    \ = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $res[] = $value;\n        }\n    }\n    return\
    \ implode('', $res);\n}\n\n/*", "    $s = str_split($s);\n    $letters = [];\n\
    \    $result = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    if (empty($letters)) {\n        return strrev(implode($result));\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_lower($value))\
    \ {\n            $result[] = strtoupper($value);\n        } else {\n         \
    \   $result[] = strtolower($value);\n        }\n    }\n    return implode($result);\n\
    }\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $new_s = [];\n    foreach\
    \ ($s as $value) {\n        if (ctype_alpha($value)) {\n            $new_s[] =\
    \ strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n  \
    \      } else {\n            $new_s[] = $value;\n        }\n    }\n    return\
    \ implode($new_s);\n}\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res\
    \ = '';\n    foreach ($s as $v) {\n        if (ctype_alpha($v)) {\n          \
    \  $res .= ctype_upper($v) ? strtolower($v) : strtoupper($v);\n        } else\
    \ {\n            $res .= $v;\n        }\n    }\n    return $res;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n \
    \   foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n   \
    \         $s[$key] = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        }\n    }\n    return implode('', $s);\n}\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $letters\
    \ = array_filter($s, function($v){\n        return ctype_alpha($v);\n    });\n\
    \    if(empty($letters)){\n        return strrev($s);\n    }\n    foreach($s as\
    \ $k => $v){\n        if(ctype_alpha($v)){\n            $s[$k] = ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n\n/*", "    $s = str_split($s);\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $result[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $letters = array_filter($s, function($v) {\n        return ctype_alpha($v);\n\
    \    });\n    if (count($letters) == 0) {\n        return strrev($s);\n    }\n\
    \    foreach ($s as $k => $v) {\n        if (ctype_alpha($v)) {\n            $s[$k]\
    \ = strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n        }\n    }\n\
    \    return implode('', $s);\n}", "    $letters = str_split($s);\n    $result\
    \ = \"\";\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return strlen($result) == 0 ? strrev($s) : $result;\n}\n\
    \necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s\
    \ = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            if (ctype_upper($char)) {\n            \
    \    $result[] = strtolower($char);\n            } else {\n                $result[]\
    \ = strtoupper($char);\n            }\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $s[$key] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        }\n    }\n   \
    \ return implode('', $s);\n}\n", "    $s = str_split($s);\n    $res = [];\n  \
    \  foreach ($s as $value) {\n        if (ctype_alpha($value)) {\n            $res[]\
    \ = ctype_upper($value) ? strtolower($value) : strtoupper($value);\n        }\
    \ else {\n            $res[] = $value;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\n/*", "    $s = str_split($s);\n    $res = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $res .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (isset($letters[$s[$i]])) {\n    \
    \        $result .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $result = [];\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $letters[] = $value;\n  \
    \      }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $s[$key] = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        }\n    }\n    return implode('', $s);\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res =\
    \ '';\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $res .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    return $res;\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "   \
    \ $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $s2 = [];\n    foreach($s as $v){\n        if(in_array($v,\
    \ $letters)){\n            $s2[] = strtoupper($v);\n        }elseif(in_array($v,\
    \ $letters2)){\n            $s2[] = strtolower($v);\n        }else{\n        \
    \    $s2[] = $v;\n        }\n    }\n    return implode(\"\", $s2);\n}\n\n/*",
  "    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result .= ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n\necho solve(\"1234\") . PHP_EOL;\necho\
    \ solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    } else {\n        foreach ($s as $key =>\
    \ $value) {\n            if (ctype_alpha($value)) {\n                if (ctype_upper($value))\
    \ {\n                    $s[$key] = strtolower($value);\n                } else\
    \ {\n                    $s[$key] = strtoupper($value);\n                }\n \
    \           }\n        }\n        return implode('', $s);\n    }\n}\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $arr = str_split($s);\n\
    \    $newArr = [];\n    foreach ($arr as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            if (ctype_upper($value)) {\n                $newArr[] = strtolower($value);\n\
    \            } else {\n                $newArr[] = strtoupper($value);\n     \
    \       }\n        } else {\n            $newArr[] = $value;\n        }\n    }\n\
    \    return implode('', $newArr);\n}\n\necho solve(\"1234\");\necho solve(\"ab\"\
    );\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[] =\
    \ ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n \
    \       if (ctype_alpha($char)) {\n            $res .= strtoupper($char) == $char\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res\
    \ .= $char;\n        }\n    }\n    return $res;\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $res\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $res[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ count($result) > 0 ? implode('', $result) : strrev($s);\n}", "    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    $other\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } elseif (ctype_digit($value))\
    \ {\n            $numbers[] = $value;\n        } else {\n            $other[]\
    \ = $value;\n        }\n    }\n    $letters = array_map(function ($letter) {\n\
    \        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    $numbers = array_reverse($numbers);\n    $s = array_merge($letters,\
    \ $numbers, $other);\n    return implode('', $s);\n}\n\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho\
    \ solve(\"#a@C\");", "    $s = str_split($s);\n    $res = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $res[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return implode('', $res);\n}\n\n/*", "    $arr\
    \ = str_split($s);\n    $res = [];\n    foreach ($arr as $v) {\n        if (ctype_alpha($v))\
    \ {\n            $res[] = ctype_upper($v) ? strtolower($v) : strtoupper($v);\n\
    \        } else {\n            $res[] = $v;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $res .= ctype_upper($value)\
    \ ? strtolower($value) : strtoupper($value);\n        } else {\n            $res\
    \ .= $value;\n        }\n    }\n    return $res;\n}\n\necho solve(\"#a@C\");",
  "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            if (ctype_upper($letter))\
    \ {\n                $result[] = strtolower($letter);\n            } else {\n\
    \                $result[] = strtoupper($letter);\n            }\n        } else\
    \ {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_133_sum_squares
language: ts
prompt: "//You are given an array of numbers.\n// You need to return the sum of squared\
  \ numbers in the given array,\n// round each element in the array to the upper int(Ceiling)\
  \ first.\n// Examples:\n// >>> lst([1.0, 2.0, 3.0])\n// 14\n// >>> lst([1.0, 4.0,\
  \ 9.0])\n// 98\n// >>> lst([1.0, 3.0, 5.0, 7.0])\n// 84\n// >>> lst([1.4, 4.2, 0.0])\n\
  // 29\n// >>> lst([-2.4, 1.0, 1.0])\n// 6\nfunction sum_squares(lst: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0,\
  \ 3.0]),14);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
  \ 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
  \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
  \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
  \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
  \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
  \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
completions: ["    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n    \
    \    sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);\n\
    }\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let result =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n", "    let sum = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n \
    \   return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(Math.ceil(lst[i]),\
    \ 2);\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let result = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b\
    \ * b, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    return\
    \ lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);\n}\n", "    let result =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n", "    let sum = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return\
    \ sum;\n}\n", "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return result;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\n\
    console.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0,\
    \ 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b * b, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(Math.ceil(lst[i]),\
    \ 2);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let result = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ result: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n  \
    \      result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.pow(Math.ceil(lst[i]), 2);\n   \
    \ }\n    return sum;\n}\n", "    let result = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n\
    }\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b *\
    \ b, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    return\
    \ lst.map(Math.ceil).reduce((sum, num) => sum + num * num, 0);\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum: number = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum:\
    \ number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return sum;\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    let sum: number\
    \ = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a +\
    \ b * b, 0);\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let result\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b **\
    \ 2, 0);\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    return\
    \ lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(Math.ceil(lst[i]),\
    \ 2);\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b\
    \ * b, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let result = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    return lst.map(Math.ceil).reduce((a, b) => a + b ** 2,\
    \ 0);\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ result = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n", "    let sum = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n \
    \   return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((x, y) => x + y * y, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);\n\
    }\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let result:\
    \ number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let sum: number\
    \ = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result: number = 0;\n    for (let\
    \ i: number = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) **\
    \ 2;\n    }\n    return result;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);\n}\n", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((acc, x) => acc + x * x, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return sum;\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
    \ += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return result;\n}\n", "    let result: number = 0;\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n   \
    \ }\n    return result;\n}\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", "    let\
    \ result = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    return lst.map(x => Math.ceil(x)).reduce((a, b) => a +\
    \ b * b, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n", " \
    \   let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));\n", "    let result = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let result: number = 0;\n    for (let i: number = 0; i <\
    \ lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let result\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n", "    let sum = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n \
    \   return sum;\n}\n", "    let result = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n\
    }\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let result = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum: number = 0;\n    for (let\
    \ i: number = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n\
    \    }\n    return sum;\n}\n", "    return lst.map(Math.ceil).reduce((a, b) =>\
    \ a + b ** 2, 0);\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return result;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\n\
    console.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    let sum: number = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\n\
    console.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0,\
    \ 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));\n", "    let sum =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(Math.ceil).reduce((a,\
    \ b) => a + b ** 2, 0);\n}\n", "    return lst.map(Math.ceil).reduce((a, b) =>\
    \ a + b ** 2, 0);\n}\n", "    let sum = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum: number = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        let x: number = Math.ceil(lst[i]);\n\
    \        sum += x * x;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.0,\
    \ 2.0, 3.0]));\nconsole.log(sum_squares([1.0, 4.0, 9.0]));\nconsole.log(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4, 4.2, 0.0]));\nconsole.log(sum_squares([-2.4,\
    \ 1.0, 1.0]));", "    return lst.map(x => Math.ceil(x)).reduce((acc, x) => acc\
    \ + x * x, 0);\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));", "    return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return\
    \ sum;\n}\n\nconsole.log(sum_squares([1.0, 2.0, 3.0]));\nconsole.log(sum_squares([1.0,\
    \ 4.0, 9.0]));\nconsole.log(sum_squares([1.0, 3.0, 5.0, 7.0]));\nconsole.log(sum_squares([1.4,\
    \ 4.2, 0.0]));\nconsole.log(sum_squares([-2.4, 1.0, 1.0]));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

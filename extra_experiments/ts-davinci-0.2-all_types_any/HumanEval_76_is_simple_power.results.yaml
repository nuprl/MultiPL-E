language: ts
name: HumanEval_76_is_simple_power
results:
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = x / n;\n    if (result === 1) {\n        return true;\n\
    \    } else if (result < 1) {\n        return false;\n    } else {\n        return\
    \ is_simple_power(result, n);\n    }\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp42u567n0.js:18\n    var result = x / n;\n                 ^\n\n\
    RangeError: Maximum call stack size exceeded\n    at is_simple_power (/tmp/tmp42u567n0.js:18:18)\n\
    \    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n\
    \    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n\
    \    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n\
    \    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n\
    \    at is_simple_power (/tmp/tmp42u567n0.js:26:16)\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    true

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9fr2tc88.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9fr2tc88.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324801
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj_8l5e6h.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj_8l5e6h.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324801
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (n === 1) {\n\
    \        return false;\n    }\n    let power = n;\n    while (power < x) {\n \
    \       power *= n;\n    }\n    return power === x;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324801
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 1;\n   \
    \ let result = n;\n    while (result <= x) {\n        if (result === x) {\n  \
    \          return true;\n        }\n        result *= n;\n        i++;\n    }\n\
    \    return false;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324816
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === 0) {\n\
    \        return false;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpbli6j04u.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpbli6j04u.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpbli6j04u.js:25:16)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324802
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (i < x) {\n      \
    \  if (Math.pow(n, i) === x) {\n            result = true;\n        }\n      \
    \  i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324802
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyfhby2rh.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyfhby2rh.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324802
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb9nk87f8.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb9nk87f8.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphs64dldy.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmphs64dldy.js:18:5)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let power = n;\n    while (power <= x) {\n\
    \        if (power === x) {\n            result = true;\n            break;\n\
    \        }\n        power *= n;\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppf4nvxru.js:41:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppf4nvxru.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (n ** i <= x) {\n\
    \        if (n ** i === x) {\n            result = true;\n        }\n        i++;\n\
    \    }\n    return result;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324820
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpelbocj1s.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpelbocj1s.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpelbocj1s.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324806
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 1;\n   \
    \ let result = n;\n    while (result <= x) {\n        if (result === x) {\n  \
    \          return true;\n        }\n        i++;\n        result = Math.pow(n,\
    \ i);\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324807
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o6yddzr.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o6yddzr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324808
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpejh1n0ck.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpejh1n0ck.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324808
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp9242i26x.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324809
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = 1;\n    for (let i = 0; i < n; i++) {\n        result\
    \ *= n;\n        if (result === x) {\n            return true;\n        }\n  \
    \  }\n    return false;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85mcg3i2.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp85mcg3i2.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    false

    false

    false

    false

    '
  timestamp: 1660324809
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x % n !== 0)\
    \ {\n        return false;\n    }\n    return is_simple_power(x / n, n);\n}\n\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\n\
    console.log(is_simple_power(5, 3));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpx7kij4bf.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpx7kij4bf.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpx7kij4bf.js:24:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324810
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: boolean = false;\n    if (x === 1) {\n        result\
    \ = true;\n    } else {\n        for (let i = 1; i <= x; i++) {\n            if\
    \ (Math.pow(n, i) === x) {\n                result = true;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324811
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (n === 1) {\n\
    \        return false;\n    }\n    let i = 1;\n    while (n ** i <= x) {\n   \
    \     if (n ** i === x) {\n            return true;\n        }\n        i++;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324813
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let i = 0;\n    while (Math.pow(n, i) <= x) {\n        if (Math.pow(n,\
    \ i) === x) {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324814
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyfhby2rh.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyfhby2rh.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324802
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n        if\
    \ (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n   \
    \ return result;\n}\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324815
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyfhby2rh.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyfhby2rh.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324802
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return x === Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4dpb4m2_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4dpb4m2_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324815
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 1;\n   \
    \ while (Math.pow(n, i) <= x) {\n        if (Math.pow(n, i) === x) {\n       \
    \     return true;\n        }\n        i++;\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324831
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let power = 1;\n    for (let i = 0; i <\
    \ x; i++) {\n        power *= n;\n        if (power === x) {\n            result\
    \ = true;\n        }\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbo2zadbq.js:46:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbo2zadbq.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    true

    false

    false

    false

    '
  timestamp: 1660324817
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpujp0nx9s.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpujp0nx9s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324817
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 1;\n    while (i < x) {\n      \
    \  if (Math.pow(n, i) === x) {\n            result = true;\n        }\n      \
    \  i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdsnqkuo7.js:45:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdsnqkuo7.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    true

    false

    false

    false

    '
  timestamp: 1660324818
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x % n !== 0)\
    \ {\n        return false;\n    }\n    return is_simple_power(x / n, n);\n}\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\n\
    console.log(is_simple_power(5, 3));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3bp9pypv.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmp3bp9pypv.js:18:5)\n\
    \    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n\
    \    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n\
    \    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n\
    \    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n\
    \    at is_simple_power (/tmp/tmp3bp9pypv.js:24:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324819
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let i = 0;\n    while (Math.pow(n, i) < x) {\n        i++;\n    }\n\
    \    return Math.pow(n, i) === x;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324834
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpldz54ou_.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpldz54ou_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324820
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return x === Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4dpb4m2_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4dpb4m2_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324815
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpww2f4ev1.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpww2f4ev1.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324822
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 1;\n   \
    \ while (Math.pow(n, i) <= x) {\n        if (Math.pow(n, i) === x) {\n       \
    \     return true;\n        }\n        i++;\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324822
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (n === 1) {\n\
    \        return false;\n    }\n    let result = 1;\n    for (let i = 0; i < x;\
    \ i++) {\n        result *= n;\n        if (result === x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324823
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let i = 0;\n    while (Math.pow(n, i) < x) {\n        i++;\n    }\n\
    \    return Math.pow(n, i) === x;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324834
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i) <\
    \ x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n    \
    \    }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'false

    false

    false

    false

    '
  timestamp: 1660324838
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnm2nl7y0.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnm2nl7y0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324825
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return (result % 1 ===\
    \ 0) ? true : false;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7d0aq4kl.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7d0aq4kl.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324826
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = false;\n    if (x === 1) {\n        result = true;\n\
    \    } else {\n        for (let i = 0; i < x; i++) {\n            if (Math.pow(n,\
    \ i) === x) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324828
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 1;\n   \
    \ while (Math.pow(n, i) <= x) {\n        if (Math.pow(n, i) === x) {\n       \
    \     return true;\n        }\n        i++;\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324822
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (n ** i <= x) {\n\
    \        if (n ** i === x) {\n            result = true;\n        }\n        i++;\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660324844
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === 0) {\n\
    \        return false;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324833
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbtj6i1z3.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbtj6i1z3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324834
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === 0) {\n\
    \        return false;\n    }\n    if (n === 1) {\n        return false;\n   \
    \ }\n    if (x === n) {\n        return true;\n    }\n    if (x % n !== 0) {\n\
    \        return false;\n    }\n    return is_simple_power(x / n, n);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324836
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_j8j_284.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_j8j_284.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324836
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let i = 1;\n    while (Math.pow(n, i) <= x) {\n        if (Math.pow(n,\
    \ i) === x) {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'false

    true

    true

    false

    '
  timestamp: 1660324852
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_f1ugsf.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_f1ugsf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324838
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i) <=\
    \ x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n    \
    \    }\n        i++;\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660324854
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i) <\
    \ x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n    \
    \    }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'false

    false

    false

    false

    '
  timestamp: 1660324855
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoey_b896.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoey_b896.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324845
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: boolean = false;\n    if (x === 1 && n === 1) {\n   \
    \     result = true;\n    } else if (x === 1 && n !== 1) {\n        result = false;\n\
    \    } else if (x !== 1 && n === 1) {\n        result = false;\n    } else {\n\
    \        let i: number = 1;\n        while (Math.pow(n, i) <= x) {\n         \
    \   if (Math.pow(n, i) === x) {\n                result = true;\n            }\n\
    \            i++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj_12640q.js:51:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj_12640q.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324847
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any;\n    let power: any;\n    let i: any;\n    result\
    \ = false;\n    power = 1;\n    i = 1;\n    while (power <= x) {\n        if (power\
    \ === x) {\n            result = true;\n        }\n        power = Math.pow(n,\
    \ i);\n        i++;\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660324863
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324813
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (n === 1) {\n\
    \        return false;\n    }\n    let i = 1;\n    let result = n;\n    while\
    \ (result < x) {\n        result *= n;\n        i++;\n    }\n    if (result ===\
    \ x) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324853
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: any = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp9242i26x.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324809
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_e7grfh7.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmp_e7grfh7.js:18:5)\n\
    \    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n\
    \    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n\
    \    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n\
    \    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n\
    \    at is_simple_power (/tmp/tmp_e7grfh7.js:25:16)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324855
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbtj6i1z3.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbtj6i1z3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324834
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.pow(n, Math.round(Math.log(x) / Math.log(n))) === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph_6033x5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph_6033x5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyfhby2rh.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyfhby2rh.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324802
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x == 1) {\n        return true;\n    }\n    if (x == n) {\n \
    \       return true;\n    }\n    if (x % n != 0) {\n        return false;\n  \
    \  }\n    return is_simple_power(x / n, n);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324855
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphs64dldy.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmphs64dldy.js:18:5)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpww2f4ev1.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpww2f4ev1.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324822
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return x === Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4dpb4m2_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4dpb4m2_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324815
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    if (x === 1) {\n        result = true;\n\
    \    } else {\n        for (let i = 2; i <= x; i++) {\n            if (Math.pow(n,\
    \ i) === x) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324856
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfonqx99d.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfonqx99d.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324856
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o6yddzr.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o6yddzr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324808
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let result = n;\n\
    \    while (result < x) {\n        result *= n;\n    }\n    return result ===\
    \ x;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324857
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === 0) {\n\
    \        return false;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpvcw0i3_u.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpvcw0i3_u.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpvcw0i3_u.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324857
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: boolean = false;\n    let i: number = 0;\n    while (Math.pow(n,\
    \ i) < x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n\
    \        }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'false

    false

    false

    false

    '
  timestamp: 1660324873
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x % n !== 0)\
    \ {\n        return false;\n    }\n    return is_simple_power(x / n, n);\n}\n\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\n\
    console.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpn6mcr613.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpn6mcr613.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n\
    \    at is_simple_power (/tmp/tmpn6mcr613.js:24:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324858
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324859
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324859
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let i = 1;\n    while (i < x) {\n        i *= n;\n    }\n    return\
    \ i === x;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324860
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i) <=\
    \ x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n    \
    \    }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324875
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if(x === 1) {\n        return true;\n    }\n    let i = 0;\n    while(Math.pow(n,\
    \ i) < x) {\n        i++;\n    }\n    return Math.pow(n, i) === x;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324876
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === 0) {\n\
    \        return false;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324865
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpekbebzmz.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpekbebzmz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324866
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    let i = 2;\n   \
    \ while (i <= x) {\n        if (Math.pow(n, i) === x) {\n            return true;\n\
    \        }\n        i++;\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324868
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n === 0) {\n        return is_simple_power(x\
    \ / n, n);\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3,\
    \ 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuu942n3l.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpuu942n3l.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n\
    \    at is_simple_power (/tmp/tmpuu942n3l.js:25:16)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324869
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbtj6i1z3.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbtj6i1z3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324834
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpekbebzmz.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpekbebzmz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324866
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphs64dldy.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmphs64dldy.js:18:5)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\
    \    at is_simple_power (/tmp/tmphs64dldy.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (x === n) {\n\
    \        return true;\n    }\n    if (x % n !== 0) {\n        return false;\n\
    \    }\n    return is_simple_power(x / n, n);\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpww2f4ev1.js:18\n    if (x === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at is_simple_power (/tmp/tmpww2f4ev1.js:18:5)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\
    \    at is_simple_power (/tmp/tmpww2f4ev1.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660324822
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpu_qbs933.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324805
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsncxc30o.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsncxc30o.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324812
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1) {\n        return true;\n    }\n    if (n === 1) {\n\
    \        return false;\n    }\n    let i = 0;\n    while (n ** i < x) {\n    \
    \    i++;\n    }\n    return n ** i === x;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324871
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    if (x === 1) {\n        result = true;\n\
    \    } else {\n        for (let i = 2; i <= x; i++) {\n            if (Math.pow(n,\
    \ i) === x) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324856
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (n === 1) {\n        return true;\n    }\n    if (x === 1) {\n\
    \        return true;\n    }\n    if (x === n) {\n        return true;\n    }\n\
    \    if (x % n !== 0) {\n        return false;\n    }\n    return is_simple_power(x\
    \ / n, n);\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    true

    false

    '
  timestamp: 1660324872
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpekbebzmz.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpekbebzmz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324866
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpt5y70iuk.ts(19,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660324804
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o6yddzr.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o6yddzr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324808
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpekbebzmz.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpekbebzmz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324866
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o6yddzr.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o6yddzr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324808
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return x === Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpi3gnzm1v.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi3gnzm1v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324874
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = false;\n    if (x === 1) {\n        result = true;\n\
    \    } else {\n        let i = 0;\n        while (Math.pow(n, i) <= x) {\n   \
    \         if (Math.pow(n, i) === x) {\n                result = true;\n      \
    \      }\n            i++;\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324874
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result = Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    \    return result === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpekbebzmz.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpekbebzmz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324866
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    let result: boolean = false;\n    let i: number = 0;\n    while (Math.pow(n,\
    \ i) <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n\
    \        }\n        i++;\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660324890
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    if (x === 1 && n === 1) {\n        return true;\n    }\n    if (x\
    \ === 1 && n !== 1) {\n        return false;\n    }\n    if (x === n) {\n    \
    \    return true;\n    }\n    if (x % n !== 0) {\n        return false;\n    }\n\
    \    return is_simple_power(x / n, n);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu7il27e3.js:44:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu7il27e3.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324876
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return x === Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n\
    }\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyzrzqm14.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyzrzqm14.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324877
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o6yddzr.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o6yddzr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324808
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgtvaf0fp.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtvaf0fp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    '
  timestamp: 1660324799
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x: any, n: any):\
    \ any {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxji29fz0.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxji29fz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324799

name: HumanEval_156_int_to_mini_roman
language: ts
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman(number:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"\
  xix\");\n  assert.deepEqual(candidate(152),\"clii\");\n  assert.deepEqual(candidate(251),\"\
  ccli\");\n  assert.deepEqual(candidate(426),\"cdxxvi\");\n  assert.deepEqual(candidate(500),\"\
  d\");\n  assert.deepEqual(candidate(1),\"i\");\n  assert.deepEqual(candidate(4),\"\
  iv\");\n  assert.deepEqual(candidate(43),\"xliii\");\n  assert.deepEqual(candidate(90),\"\
  xc\");\n  assert.deepEqual(candidate(94),\"xciv\");\n  assert.deepEqual(candidate(532),\"\
  dxxxii\");\n  assert.deepEqual(candidate(900),\"cm\");\n  assert.deepEqual(candidate(994),\"\
  cmxciv\");\n  assert.deepEqual(candidate(1000),\"m\");\n}\n\ntest();"
completions: ["    let result = \"\";\n    let roman = {\n        M: 1000,\n     \
    \   CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC:\
    \ 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n     \
    \   V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n\
    \        if (number >= roman[key]) {\n            result += key.repeat(Math.trunc(number\
    \ / roman[key]));\n            number %= roman[key];\n        }\n    }\n    return\
    \ result;\n}\n", "    if (number < 1 || number > 1000) {\n        return \"\"\
    ;\n    }\n    let roman = \"\";\n    let num = number;\n    while (num >= 1000)\
    \ {\n        roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900)\
    \ {\n        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500)\
    \ {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400)\
    \ {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90)\
    \ {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50)\
    \ {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40)\
    \ {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10)\
    \ {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9)\
    \ {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5)\
    \ {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let num = number;\n    let romanNumeral = [\"m\", \"\
    cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while (num >=\
    \ numbers[i]) {\n            roman += romanNumeral[i];\n            num -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"\";\n    }\n    let result = \"\";\n    let roman = [\"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\"];\n    let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < roman.length; i++) {\n        while (number\
    \ >= decimal[i]) {\n            result += roman[i];\n            number -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"\";\n    }\n    let roman = \"\";\n    let romanNumerals\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumerals[i];\n \
    \           number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    var roman\
    \ = \"\";\n    var romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    var numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = \"\";\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.repeat(Math.trunc(number / roman[key]));\n\
    \            number -= roman[key] * Math.trunc(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let roman = \"\";\n    let num = number;\n \
    \   let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (num >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            num -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n \
    \   }\n    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let roman = \"\";\n    let roman_numerals =\
    \ [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\",\
    \ \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += roman_numerals[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let roman = \"\";\n    let romanNumList = [\"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\"];\n    let numList = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < numList.length; i++) {\n        while\
    \ (number >= numList[i]) {\n            number -= numList[i];\n            roman\
    \ += romanNumList[i];\n        }\n    }\n    return roman;\n}\n", "    if (number\
    \ < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman = \"\";\n\
    \    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman\
    \ = \"\";\n    let romanNumList = [\n        \"m\",\n        \"cm\",\n       \
    \ \"d\",\n        \"cd\",\n        \"c\",\n        \"xc\",\n        \"l\",\n \
    \       \"xl\",\n        \"x\",\n        \"ix\",\n        \"v\",\n        \"iv\"\
    ,\n        \"i\",\n    ];\n    let numList = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numList.length; i++) {\n     \
    \   while (number >= numList[i]) {\n            number -= numList[i];\n      \
    \      roman += romanNumList[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number > 1000 || number < 1) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number %= roman[key];\n        }\n    }\n    return result;\n}\n",
  "    let result = '';\n    let roman = {\n        M: 1000,\n        CM: 900,\n \
    \       D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L:\
    \ 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n      \
    \  IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.repeat(Math.trunc(number / roman[key]));\n\
    \            number %= roman[key];\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let roman = { M: 1000, CM: 900, D: 500, CD: 400, C:\
    \ 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 };\n    for (let\
    \ i of Object.keys(roman)) {\n        let q = Math.floor(number / roman[i]);\n\
    \        number -= q * roman[i];\n        result += i.repeat(q);\n    }\n    return\
    \ result;\n}\n", "    let roman: string = \"\";\n    let romanNumeral: any = [\"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\"];\n    let numbers: any = [1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while\
    \ (number >= numbers[i]) {\n            roman += romanNumeral[i];\n          \
    \  number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    if (number\
    \ < 1 || number > 1000) {\n        return \"\";\n    }\n    let result = \"\"\
    ;\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length; i++)\
    \ {\n        while (number % decimal[i] < number) {\n            result += roman[i];\n\
    \            number -= decimal[i];\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let num = number;\n    while (num > 0) {\n        if\
    \ (num >= 1000) {\n            result += \"m\";\n            num -= 1000;\n  \
    \      } else if (num >= 900) {\n            result += \"cm\";\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            result += \"d\";\n  \
    \          num -= 500;\n        } else if (num >= 400) {\n            result +=\
    \ \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n       \
    \     result += \"c\";\n            num -= 100;\n        } else if (num >= 90)\
    \ {\n            result += \"xc\";\n            num -= 90;\n        } else if\
    \ (num >= 50) {\n            result += \"l\";\n            num -= 50;\n      \
    \  } else if (num >= 40) {\n            result += \"xl\";\n            num -=\
    \ 40;\n        } else if (num >= 10) {\n            result += \"x\";\n       \
    \     num -= 10;\n        } else if (num >= 9) {\n            result += \"ix\"\
    ;\n            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += \"iv\";\n            num -= 4;\n        } else if (num >= 1) {\n        \
    \    result += \"i\";\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   const roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5:\
    \ \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n      \
    \  50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n\
    \        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    };\n    let\
    \ result = \"\";\n    let number_copy = number;\n    for (let i = 1000; i > 0;\
    \ i = i / 10) {\n        let digit = Math.floor(number_copy / i);\n        number_copy\
    \ = number_copy % i;\n        if (digit !== 0) {\n            if (digit < 4) {\n\
    \                result += roman_numerals[i].repeat(digit);\n            } else\
    \ if (digit === 4) {\n                result += roman_numerals[i] + roman_numerals[i\
    \ * 5];\n            } else if (digit < 9) {\n                result += roman_numerals[i\
    \ * 5] + roman_numerals[i].repeat(digit - 5);\n            } else {\n        \
    \        result += roman_numerals[i] + roman_numerals[i * 10];\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    let roman_numerals = {\n   \
    \     'M': 1000,\n        'CM': 900,\n        'D': 500,\n        'CD': 400,\n\
    \        'C': 100,\n        'XC': 90,\n        'L': 50,\n        'XL': 40,\n \
    \       'X': 10,\n        'IX': 9,\n        'V': 5,\n        'IV': 4,\n      \
    \  'I': 1\n    };\n    let result = '';\n    for (let key in roman_numerals) {\n\
    \        while (number >= roman_numerals[key]) {\n            result += key;\n\
    \            number -= roman_numerals[key];\n        }\n    }\n    return result;\n\
    }\n", "  let roman = \"\";\n  let romanNumeral = [\n    \"m\",\n    \"cm\",\n\
    \    \"d\",\n    \"cd\",\n    \"c\",\n    \"xc\",\n    \"l\",\n    \"xl\",\n \
    \   \"x\",\n    \"ix\",\n    \"v\",\n    \"iv\",\n    \"i\"\n  ];\n  let arabic\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n  for (let i = 0;\
    \ i < arabic.length; i++) {\n    while (arabic[i] <= number) {\n      roman +=\
    \ romanNumeral[i];\n      number -= arabic[i];\n    }\n  }\n  return roman;\n\
    }\n", "    const roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    let result = \"\";\n    for (let key in roman) {\n       \
    \ if (number >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result: string = \"\";\n\
    \    let roman: any = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.repeat(Math.trunc(number / roman[key]));\n    \
    \        number %= roman[key];\n        }\n    }\n    return result;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n \
    \   }\n    let roman = \"\";\n    let romanNumerals = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumerals[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = '';\n    let roman_numerals\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman_numerals) {\n        while (number >= roman_numerals[key])\
    \ {\n            result += key;\n            number -= roman_numerals[key];\n\
    \        }\n    }\n    return result;\n}\n", "    let roman: string = \"\";\n\
    \    let romanNumeral: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[]\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n  \
    \          roman += romanNumeral[i];\n            number -= numbers[i];\n    \
    \    }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let num =\
    \ number;\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (num >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            num -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result: string = \"\";\n    let roman: string[] = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i: number = 0; i < decimal.length; i++) {\n        while\
    \ (number % decimal[i] < number) {\n            result += roman[i];\n        \
    \    number -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    var\
    \ result: string = \"\";\n    var roman: string[] = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  var decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4,\
    \ 1];\n    for (var i = 0; i < decimal.length; i++) {\n        while (number %\
    \ decimal[i] < number) {\n            result += roman[i];\n            number\
    \ -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    let roman =\
    \ '';\n    let romanNumeral = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x',\
    \ 'ix', 'v', 'iv', 'i'];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result: string = \"\";\n    let roman: any = {\n        M: 1000,\n   \
    \     CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC:\
    \ 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n     \
    \   V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n\
    \        if (number >= roman[key]) {\n            result += key.repeat(Math.trunc(number\
    \ / roman[key]));\n            number %= roman[key];\n        }\n    }\n    return\
    \ result;\n}\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    var roman: any = {\n        M:\
    \ 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n\
    \        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX:\
    \ 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    var str: any =\
    \ '';\n\n    for (var i of Object.keys(roman)) {\n        var q: any = Math.floor(number\
    \ / roman[i]);\n        number -= q * roman[i];\n        str += i.repeat(q);\n\
    \    }\n\n    return str;\n}\n", "    let result = \"\";\n    let roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        if (number >= roman[key]) {\n            result\
    \ += key.repeat(Math.trunc(number / roman[key]));\n            number %= roman[key];\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\n        \"m\",\n        \"cm\",\n        \"d\",\n        \"cd\",\n    \
    \    \"c\",\n        \"xc\",\n        \"l\",\n        \"xl\",\n        \"x\",\n\
    \        \"ix\",\n        \"v\",\n        \"iv\",\n        \"i\",\n    ];\n  \
    \  let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < decimal.length; i++) {\n        while (decimal[i] <= number)\
    \ {\n            roman += romanNumeral[i];\n            number -= decimal[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.repeat(Math.trunc(number / roman[key]));\n            number\
    \ %= roman[key];\n        }\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let roman = [\n        [\"\", \"i\", \"ii\", \"iii\", \"iv\", \"\
    v\", \"vi\", \"vii\", \"viii\", \"ix\"],\n        [\"\", \"x\", \"xx\", \"xxx\"\
    , \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"],\n        [\"\", \"c\", \"\
    cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\"],\n        [\"\
    \", \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"],\n\
    \    ];\n    let digits = number.toString().split(\"\").reverse();\n    for (let\
    \ i = 0; i < digits.length; i++) {\n        result = roman[i][parseInt(digits[i])]\
    \ + result;\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let\
    \ romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\",\
    \ \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (number % decimal[i] < number) {\n            result +=\
    \ roman[i];\n            number -= decimal[i];\n        }\n    }\n    return result;\n\
    }\n", "    if (number < 1 || number > 1000) {\n        return \"Invalid number\"\
    ;\n    }\n    const roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n\
    \        5: \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\"\
    ,\n        50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400:\
    \ \"cd\",\n        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n  \
    \  };\n    const keys = Object.keys(roman_numerals).reverse();\n    let result\
    \ = \"\";\n    for (let i = 0; i < keys.length; i++) {\n        while (number\
    \ >= keys[i]) {\n            result += roman_numerals[keys[i]];\n            number\
    \ -= keys[i];\n        }\n    }\n    return result;\n}\n", "    let roman_numerals\
    \ = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"\
    ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90:\
    \ \"xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n  \
    \      900: \"cm\",\n        1000: \"m\"\n    };\n    let result = \"\";\n   \
    \ let keys = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        let key = keys[i];\n        while (number >= key) {\n      \
    \      result += roman_numerals[key];\n            number -= key;\n        }\n\
    \    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    const\
    \ roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\",\
    \ \"ix\", \"v\", \"iv\", \"i\"];\n    const decimal = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    let result = \"\";\n    for (let i = 0; i\
    \ < roman.length; i++) {\n        while (number >= decimal[i]) {\n           \
    \ result += roman[i];\n            number -= decimal[i];\n        }\n    }\n \
    \   return result;\n}\n", "    if (number < 1 || number > 1000) {\n        return\
    \ \"Invalid input\";\n    }\n    let roman = \"\";\n    let num = number;\n  \
    \  while (num >= 100) {\n        roman += \"c\";\n        num -= 100;\n    }\n\
    \    if (num >= 90) {\n        roman += \"xc\";\n        num -= 90;\n    }\n \
    \   if (num >= 50) {\n        roman += \"l\";\n        num -= 50;\n    }\n   \
    \ if (num >= 40) {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while\
    \ (num >= 10) {\n        roman += \"x\";\n        num -= 10;\n    }\n    if (num\
    \ >= 9) {\n        roman += \"ix\";\n        num -= 9;\n    }\n    if (num >=\
    \ 5) {\n        roman += \"v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \ if (number < 1 || number > 1000) {\n    return \"Invalid number\";\n  }\n  let\
    \ roman = \"\";\n  let romanNumList = [\n    \"c\",\n    \"cc\",\n    \"ccc\"\
    ,\n    \"cd\",\n    \"d\",\n    \"dc\",\n    \"dcc\",\n    \"dccc\",\n    \"cm\"\
    ,\n    \"m\",\n  ];\n  let intNumList = [100, 200, 300, 400, 500, 600, 700, 800,\
    \ 900, 1000];\n  for (let i = 0; i < intNumList.length; i++) {\n    while (number\
    \ >= intNumList[i]) {\n      roman += romanNumList[i];\n      number -= intNumList[i];\n\
    \    }\n  }\n  return roman;\n}\n", "    let roman = '';\n    let romanNumeral\
    \ = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n\
    \    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman\
    \ = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"Number out of range\"\
    ;\n    }\n    let roman = \"\";\n    let romanNumList = [\n        \"c\",\n  \
    \      \"cc\",\n        \"ccc\",\n        \"cd\",\n        \"d\",\n        \"\
    dc\",\n        \"dcc\",\n        \"dccc\",\n        \"cm\",\n        \"m\",\n\
    \        \"mc\",\n        \"mcc\",\n        \"mccc\",\n        \"mcd\",\n    \
    \    \"md\",\n        \"mdc\",\n        \"mdcc\",\n        \"mdccc\",\n      \
    \  \"xm\",\n        \"x\",\n        \"xc\",\n        \"xcc\",\n        \"xccc\"\
    ,\n        \"xcd\",\n        \"xd\",\n        \"xdc\",\n        \"xdcc\",\n  \
    \      \"xdccc\",\n        \"cm\",\n        \"c\",\n        \"cc\",\n        \"\
    ccc\",\n        \"cd\",\n        \"d\",\n        \"dc\",\n        \"dcc\",\n \
    \       \"dccc\",\n        \"cm\",\n    ];\n    let decimalValue = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    let romanValue = [\n      \
    \  \"m\",\n        \"cm\",\n        \"d\",\n        \"cd\",\n        \"c\",\n\
    \        \"xc\",\n        \"l\",\n        \"xl\",\n        \"x\",\n        \"\
    ix\",\n        \"v\",\n        \"iv\",\n        \"i\",\n    ];\n    for (let i\
    \ = 0; i < decimalValue.length; i++) {\n        while (decimalValue[i] <= number)\
    \ {\n            roman += romanValue[i];\n            number -= decimalValue[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = '';\n    let number_copy\
    \ = number;\n    while (number_copy > 0) {\n        if (number_copy >= 1000) {\n\
    \            result += 'm';\n            number_copy -= 1000;\n        } else\
    \ if (number_copy >= 900) {\n            result += 'cm';\n            number_copy\
    \ -= 900;\n        } else if (number_copy >= 500) {\n            result += 'd';\n\
    \            number_copy -= 500;\n        } else if (number_copy >= 400) {\n \
    \           result += 'cd';\n            number_copy -= 400;\n        } else if\
    \ (number_copy >= 100) {\n            result += 'c';\n            number_copy\
    \ -= 100;\n        } else if (number_copy >= 90) {\n            result += 'xc';\n\
    \            number_copy -= 90;\n        } else if (number_copy >= 50) {\n   \
    \         result += 'l';\n            number_copy -= 50;\n        } else if (number_copy\
    \ >= 40) {\n            result += 'xl';\n            number_copy -= 40;\n    \
    \    } else if (number_copy >= 10) {\n            result += 'x';\n           \
    \ number_copy -= 10;\n        } else if (number_copy >= 9) {\n            result\
    \ += 'ix';\n            number_copy -= 9;\n        } else if (number_copy >= 5)\
    \ {\n            result += 'v';\n            number_copy -= 5;\n        } else\
    \ if (number_copy >= 4) {\n            result += 'iv';\n            number_copy\
    \ -= 4;\n        } else if (number_copy >= 1) {\n            result += 'i';\n\
    \            number_copy -= 1;\n        }\n    }\n    return result;\n}\n", " \
    \   let roman_numeral = \"\";\n    let roman_numerals = {\n        \"M\": 1000,\n\
    \        \"CM\": 900,\n        \"D\": 500,\n        \"CD\": 400,\n        \"C\"\
    : 100,\n        \"XC\": 90,\n        \"L\": 50,\n        \"XL\": 40,\n       \
    \ \"X\": 10,\n        \"IX\": 9,\n        \"V\": 5,\n        \"IV\": 4,\n    \
    \    \"I\": 1\n    };\n    for (let key in roman_numerals) {\n        while (number\
    \ >= roman_numerals[key]) {\n            roman_numeral += key;\n            number\
    \ -= roman_numerals[key];\n        }\n    }\n    return roman_numeral;\n}\n",
  "    let result = \"\";\n    let num = number;\n    let roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in roman)\
    \ {\n        if (num >= roman[key]) {\n            result += key.repeat(Math.trunc(num\
    \ / roman[key]));\n            num -= roman[key] * Math.trunc(num / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result: string = \"\";\n    let roman: string[] = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i: number = 0; i < decimal.length; i++) {\n        while\
    \ (number % decimal[i] < number) {\n            result += roman[i];\n        \
    \    number -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (number % decimal[i] < number) {\n            result +=\
    \ roman[i];\n            number -= decimal[i];\n        }\n    }\n    return result;\n\
    }\n", "    if (number === 1) {\n        return \"i\";\n    }\n    if (number ===\
    \ 2) {\n        return \"ii\";\n    }\n    if (number === 3) {\n        return\
    \ \"iii\";\n    }\n    if (number === 4) {\n        return \"iv\";\n    }\n  \
    \  if (number === 5) {\n        return \"v\";\n    }\n    if (number === 6) {\n\
    \        return \"vi\";\n    }\n    if (number === 7) {\n        return \"vii\"\
    ;\n    }\n    if (number === 8) {\n        return \"viii\";\n    }\n    if (number\
    \ === 9) {\n        return \"ix\";\n    }\n    if (number === 10) {\n        return\
    \ \"x\";\n    }\n    if (number === 11) {\n        return \"xi\";\n    }\n   \
    \ if (number === 12) {\n        return \"xii\";\n    }\n    if (number === 13)\
    \ {\n        return \"xiii\";\n    }\n    if (number === 14) {\n        return\
    \ \"xiv\";\n    }\n    if (number === 15) {\n        return \"xv\";\n    }\n \
    \   if (number === 16) {\n        return \"xvi\";\n    }\n    if (number === 17)\
    \ {\n        return \"xvii\";\n    }\n    if (number === 18) {\n        return\
    \ \"xviii\";\n    }\n    if (number === 19) {\n        return \"xix\";\n    }\n\
    \    if (number === 20) {\n        return \"xx\";\n    }\n    if (number === 21)\
    \ {\n        return \"xxi\";\n    }\n    if (number === 22) {\n        return\
    \ \"xxii\";\n    }\n    if (number === 23) {\n        return \"xxiii\";\n    }\n\
    \    if (number === 24) {\n        return \"xxiv\";\n    }\n    if (number ===\
    \ 25) {\n        return \"xxv\";\n    }\n    if (number === 26) {\n        return\
    \ \"xxvi\";\n    }\n    if (number === 27) {\n        return \"xxvii\";\n    }\n\
    \    if (number ===", "    let result = \"\";\n    let roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let i of Object.keys(roman))\
    \ {\n        let q = Math.floor(number / roman[i]);\n        number -= q * roman[i];\n\
    \        result += i.repeat(q);\n    }\n    return result;\n}\n", "    let roman\
    \ = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"Invalid number\";\n    }\n    let roman = \"\";\n    let romanNumerals\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumerals[i];\n \
    \           number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman\
    \ = \"\";\n    while (number >= 1000) {\n        roman += \"m\";\n        number\
    \ -= 1000;\n    }\n    while (number >= 900) {\n        roman += \"cm\";\n   \
    \     number -= 900;\n    }\n    while (number >= 500) {\n        roman += \"\
    d\";\n        number -= 500;\n    }\n    while (number >= 400) {\n        roman\
    \ += \"cd\";\n        number -= 400;\n    }\n    while (number >= 100) {\n   \
    \     roman += \"c\";\n        number -= 100;\n    }\n    while (number >= 90)\
    \ {\n        roman += \"xc\";\n        number -= 90;\n    }\n    while (number\
    \ >= 50) {\n        roman += \"l\";\n        number -= 50;\n    }\n    while (number\
    \ >= 40) {\n        roman += \"xl\";\n        number -= 40;\n    }\n    while\
    \ (number >= 10) {\n        roman += \"x\";\n        number -= 10;\n    }\n  \
    \  while (number >= 9) {\n        roman += \"ix\";\n        number -= 9;\n   \
    \ }\n    while (number >= 5) {\n        roman += \"v\";\n        number -= 5;\n\
    \    }\n    while (number >= 4) {\n        roman += \"iv\";\n        number -=\
    \ 4;\n    }\n    while (number >= 1) {\n        roman += \"i\";\n        number\
    \ -= 1;\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let num =\
    \ number;\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (num >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            num -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let i of Object.keys(roman)) {\n\
    \        let q = Math.floor(number / roman[i]);\n        number -= q * roman[i];\n\
    \        result += i.repeat(q);\n    }\n    return result;\n}\n", "    let roman\
    \ = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman =\
    \ {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n \
    \       C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let i of Object.keys(roman)) {\n        let q = Math.floor(number / roman[i]);\n\
    \        number -= q * roman[i];\n        result += i.repeat(q);\n    }\n    return\
    \ result;\n}\n", "    let result: any = \"\";\n    let roman: any = { M: 1000,\
    \ CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5,\
    \ IV: 4, I: 1 };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "    if (number < 1 || number > 1000) {\n  \
    \      throw new Error(\"Number out of range\");\n    }\n    let result = \"\"\
    ;\n    let num = number;\n    while (num >= 1000) {\n        result += \"m\";\n\
    \        num -= 1000;\n    }\n    if (num >= 900) {\n        result += \"cm\"\
    ;\n        num -= 900;\n    }\n    if (num >= 500) {\n        result += \"d\"\
    ;\n        num -= 500;\n    }\n    if (num >= 400) {\n        result += \"cd\"\
    ;\n        num -= 400;\n    }\n    while (num >= 100) {\n        result += \"\
    c\";\n        num -= 100;\n    }\n    if (num >= 90) {\n        result += \"xc\"\
    ;\n        num -= 90;\n    }\n    if (num >= 50) {\n        result += \"l\";\n\
    \        num -= 50;\n    }\n    if (num >= 40) {\n        result += \"xl\";\n\
    \        num -= 40;\n    }\n    while (num >= 10) {\n        result += \"x\";\n\
    \        num -= 10;\n    }\n    if (num >= 9) {\n        result += \"ix\";\n \
    \       num -= 9;\n    }\n    if (num >= 5) {\n        result += \"v\";\n    \
    \    num -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\";\n      \
    \  num -= 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n      \
    \  num -= 1;\n    }\n    return result;\n}\n", "    if (number === 1) {\n    \
    \    return \"i\";\n    }\n    if (number === 2) {\n        return \"ii\";\n \
    \   }\n    if (number === 3) {\n        return \"iii\";\n    }\n    if (number\
    \ === 4) {\n        return \"iv\";\n    }\n    if (number === 5) {\n        return\
    \ \"v\";\n    }\n    if (number === 6) {\n        return \"vi\";\n    }\n    if\
    \ (number === 7) {\n        return \"vii\";\n    }\n    if (number === 8) {\n\
    \        return \"viii\";\n    }\n    if (number === 9) {\n        return \"ix\"\
    ;\n    }\n    if (number === 10) {\n        return \"x\";\n    }\n    if (number\
    \ === 11) {\n        return \"xi\";\n    }\n    if (number === 12) {\n       \
    \ return \"xii\";\n    }\n    if (number === 13) {\n        return \"xiii\";\n\
    \    }\n    if (number === 14) {\n        return \"xiv\";\n    }\n    if (number\
    \ === 15) {\n        return \"xv\";\n    }\n    if (number === 16) {\n       \
    \ return \"xvi\";\n    }\n    if (number === 17) {\n        return \"xvii\";\n\
    \    }\n    if (number === 18) {\n        return \"xviii\";\n    }\n    if (number\
    \ === 19) {\n        return \"xix\";\n    }\n    if (number === 20) {\n      \
    \  return \"xx\";\n    }\n    if (number === 21) {\n        return \"xxi\";\n\
    \    }\n    if (number === 22) {\n        return \"xxii\";\n    }\n    if (number\
    \ === 23) {\n        return \"xxiii\";\n    }\n    if (number === 24) {\n    \
    \    return \"xxiv\";\n    }\n    if (number === 25) {\n        return \"xxv\"\
    ;\n    }\n    if (number === 26) {\n        return \"xxvi\";\n    }\n    if (number\
    \ === 27) {\n        return \"xxvii\";\n    }\n    if (number ===", "    let roman\
    \ = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n  \
    \  }\n    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\",\
    \ \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let num = number;\n    let romanNumeral = [\"m\", \"\
    cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while (num >=\
    \ numbers[i]) {\n            roman += romanNumeral[i];\n            num -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let roman = \"\";\n    let romanNumList = [\n\
    \        \"m\",\n        \"cm\",\n        \"d\",\n        \"cd\",\n        \"\
    c\",\n        \"xc\",\n        \"l\",\n        \"xl\",\n        \"x\",\n     \
    \   \"ix\",\n        \"v\",\n        \"iv\",\n        \"i\",\n    ];\n    let\
    \ decimalNumList = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < decimalNumList.length; i++) {\n        while (number %\
    \ decimalNumList[i] < number) {\n            roman += romanNumList[i];\n     \
    \       number -= decimalNumList[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = '';\n    let num = number;\n    while (num > 0) {\n        if (num\
    \ >= 1000) {\n            roman += 'm';\n            num -= 1000;\n        } else\
    \ if (num >= 900) {\n            roman += 'cm';\n            num -= 900;\n   \
    \     } else if (num >= 500) {\n            roman += 'd';\n            num -=\
    \ 500;\n        } else if (num >= 400) {\n            roman += 'cd';\n       \
    \     num -= 400;\n        } else if (num >= 100) {\n            roman += 'c';\n\
    \            num -= 100;\n        } else if (num >= 90) {\n            roman +=\
    \ 'xc';\n            num -= 90;\n        } else if (num >= 50) {\n           \
    \ roman += 'l';\n            num -= 50;\n        } else if (num >= 40) {\n   \
    \         roman += 'xl';\n            num -= 40;\n        } else if (num >= 10)\
    \ {\n            roman += 'x';\n            num -= 10;\n        } else if (num\
    \ >= 9) {\n            roman += 'ix';\n            num -= 9;\n        } else if\
    \ (num >= 5) {\n            roman += 'v';\n            num -= 5;\n        } else\
    \ if (num >= 4) {\n            roman += 'iv';\n            num -= 4;\n       \
    \ } else if (num >= 1) {\n            roman += 'i';\n            num -= 1;\n \
    \       }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"\";\n    }\n    let result = \"\";\n    let roman = [\"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\"];\n    let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length; i++) {\n        while\
    \ (number % decimal[i] < number) {\n            result += roman[i];\n        \
    \    number -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = '';\n    let roman = {\n        M: 1000,\n        CM: 900,\n      \
    \  D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n\
    \        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n\
    \        I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (typeof number !== 'number') {\n        return 'Not a number';\n    }\n\
    \    if (number < 1 || number > 1000) {\n        return 'Number out of range';\n\
    \    }\n    const roman = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix',\
    \ 'v', 'iv', 'i'];\n    const decimal = [1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1];\n    let result = '';\n    for (let i = 0; i < roman.length;\
    \ i++) {\n        while (number >= decimal[i]) {\n            result += roman[i];\n\
    \            number -= decimal[i];\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result: string = \"\";\n    let roman: string[] = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i: number = 0; i < decimal.length; i++) {\n        while\
    \ (number % decimal[i] < number) {\n            result += roman[i];\n        \
    \    number -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    if\
    \ (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < roman.length;\
    \ i++) {\n        while (number >= decimal[i]) {\n            result += roman[i];\n\
    \            number -= decimal[i];\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    const roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    let result = \"\";\n\
    \    for (let key in roman) {\n        if (number >= roman[key]) {\n         \
    \   result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n   \
    \         number %= roman[key];\n        }\n    }\n    return result;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n \
    \   }\n    let roman = \"\";\n    let num = number;\n    while (num >= 1000) {\n\
    \        roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900)\
    \ {\n        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500)\
    \ {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400)\
    \ {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90)\
    \ {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50)\
    \ {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40)\
    \ {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10)\
    \ {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9)\
    \ {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5)\
    \ {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let num = number;\n    let roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in roman)\
    \ {\n        if (num >= roman[key]) {\n            result += key.repeat(Math.trunc(num\
    \ / roman[key]));\n            num -= roman[key] * Math.trunc(num / roman[key]);\n\
    \        }\n    }\n    return result;\n}", "    if (number < 1 || number > 1000)\
    \ {\n        return \"\";\n    }\n    let result = \"\";\n    let num = number;\n\
    \    while (num >= 1000) {\n        result += \"m\";\n        num -= 1000;\n \
    \   }\n    if (num >= 900) {\n        result += \"cm\";\n        num -= 900;\n\
    \    }\n    if (num >= 500) {\n        result += \"d\";\n        num -= 500;\n\
    \    }\n    if (num >= 400) {\n        result += \"cd\";\n        num -= 400;\n\
    \    }\n    while (num >= 100) {\n        result += \"c\";\n        num -= 100;\n\
    \    }\n    if (num >= 90) {\n        result += \"xc\";\n        num -= 90;\n\
    \    }\n    if (num >= 50) {\n        result += \"l\";\n        num -= 50;\n \
    \   }\n    if (num >= 40) {\n        result += \"xl\";\n        num -= 40;\n \
    \   }\n    while (num >= 10) {\n        result += \"x\";\n        num -= 10;\n\
    \    }\n    if (num >= 9) {\n        result += \"ix\";\n        num -= 9;\n  \
    \  }\n    if (num >= 5) {\n        result += \"v\";\n        num -= 5;\n    }\n\
    \    if (num >= 4) {\n        result += \"iv\";\n        num -= 4;\n    }\n  \
    \  while (num >= 1) {\n        result += \"i\";\n        num -= 1;\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let roman = {\n        M:\
    \ 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n\
    \        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX:\
    \ 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in\
    \ roman) {\n        if (number >= roman[key]) {\n            result += key.repeat(Math.trunc(number\
    \ / roman[key]));\n            number %= roman[key];\n        }\n    }\n    return\
    \ result;\n}\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let roman: string = \"\";\n \
    \   let romanNumeral: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[]\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n  \
    \          roman += romanNumeral[i];\n            number -= numbers[i];\n    \
    \    }\n    }\n    return roman;\n}\n", "    if (number === 0) {\n        return\
    \ \"\";\n    }\n    if (number >= 1000) {\n        return \"m\" + int_to_mini_roman(number\
    \ - 1000);\n    }\n    if (number >= 900) {\n        return \"cm\" + int_to_mini_roman(number\
    \ - 900);\n    }\n    if (number >= 500) {\n        return \"d\" + int_to_mini_roman(number\
    \ - 500);\n    }\n    if (number >= 400) {\n        return \"cd\" + int_to_mini_roman(number\
    \ - 400);\n    }\n    if (number >= 100) {\n        return \"c\" + int_to_mini_roman(number\
    \ - 100);\n    }\n    if (number >= 90) {\n        return \"xc\" + int_to_mini_roman(number\
    \ - 90);\n    }\n    if (number >= 50) {\n        return \"l\" + int_to_mini_roman(number\
    \ - 50);\n    }\n    if (number >= 40) {\n        return \"xl\" + int_to_mini_roman(number\
    \ - 40);\n    }\n    if (number >= 10) {\n        return \"x\" + int_to_mini_roman(number\
    \ - 10);\n    }\n    if (number >= 9) {\n        return \"ix\" + int_to_mini_roman(number\
    \ - 9);\n    }\n    if (number >= 5) {\n        return \"v\" + int_to_mini_roman(number\
    \ - 5);\n    }\n    if (number >= 4) {\n        return \"iv\" + int_to_mini_roman(number\
    \ - 4);\n    }\n    if (number >= 1) {\n        return \"i\" + int_to_mini_roman(number\
    \ - 1);\n    }\n}\n", "    let roman: string = \"\";\n    let romanNumeral: string[]\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman_numerals = {\n        1:\
    \ \"i\",\n        2: \"ii\",\n        3: \"iii\",\n        4: \"iv\",\n      \
    \  5: \"v\",\n        6: \"vi\",\n        7: \"vii\",\n        8: \"viii\",\n\
    \        9: \"ix\",\n        10: \"x\",\n        20: \"xx\",\n        30: \"xxx\"\
    ,\n        40: \"xl\",\n        50: \"l\",\n        60: \"lx\",\n        70: \"\
    lxx\",\n        80: \"lxxx\",\n        90: \"xc\",\n        100: \"c\",\n    \
    \    200: \"cc\",\n        300: \"ccc\",\n        400: \"cd\",\n        500: \"\
    d\",\n        600: \"dc\",\n        700: \"dcc\",\n        800: \"dccc\",\n  \
    \      900: \"cm\",\n        1000: \"m\",\n    };\n    let result = \"\";\n  \
    \  let number_string = number.toString();\n    let number_length = number_string.length;\n\
    \    for (let i = 0; i < number_length; i++) {\n        let digit = parseInt(number_string[i]);\n\
    \        if (digit === 0) {\n            continue;\n        }\n        let place\
    \ = Math.pow(10, number_length - i - 1);\n        result += roman_numerals[digit\
    \ * place];\n    }\n    return result;\n}\n", "    let roman_numerals = {\n  \
    \      1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n\
    \        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"xc\"\
    ,\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n        900:\
    \ \"cm\",\n        1000: \"m\"\n    };\n    let result = \"\";\n    let keys =\
    \ Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        while (number >= keys[i]) {\n            result += roman_numerals[keys[i]];\n\
    \            number -= keys[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let result = \"\";\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += \"m\"\
    ;\n            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n    \
    \        result += \"d\";\n            num -= 500;\n        } else if (num >=\
    \ 400) {\n            result += \"cd\";\n            num -= 400;\n        } else\
    \ if (num >= 100) {\n            result += \"c\";\n            num -= 100;\n \
    \       } else if (num >= 90) {\n            result += \"xc\";\n            num\
    \ -= 90;\n        } else if (num >= 50) {\n            result += \"l\";\n    \
    \        num -= 50;\n        } else if (num >= 40) {\n            result += \"\
    xl\";\n            num -= 40;\n        } else if (num >= 10) {\n            result\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    result += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            result += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            result += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n \
    \   }\n    let result = \"\";\n    let num = number;\n    while (num > 0) {\n\
    \        if (num >= 1000) {\n            result += \"m\";\n            num -=\
    \ 1000;\n        } else if (num >= 900) {\n            result += \"cm\";\n   \
    \         num -= 900;\n        } else if (num >= 500) {\n            result +=\
    \ \"d\";\n            num -= 500;\n        } else if (num >= 400) {\n        \
    \    result += \"cd\";\n            num -= 400;\n        } else if (num >= 100)\
    \ {\n            result += \"c\";\n            num -= 100;\n        } else if\
    \ (num >= 90) {\n            result += \"xc\";\n            num -= 90;\n     \
    \   } else if (num >= 50) {\n            result += \"l\";\n            num -=\
    \ 50;\n        } else if (num >= 40) {\n            result += \"xl\";\n      \
    \      num -= 40;\n        } else if (num >= 10) {\n            result += \"x\"\
    ;\n            num -= 10;\n        } else if (num >= 9) {\n            result\
    \ += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n        \
    \    result += \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n\
    \            result += \"iv\";\n            num -= 4;\n        } else if (num\
    \ >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n  \
    \  }\n    return result;\n}\n", "    if (number === 1) {\n        return \"i\"\
    ;\n    }\n    if (number === 2) {\n        return \"ii\";\n    }\n    if (number\
    \ === 3) {\n        return \"iii\";\n    }\n    if (number === 4) {\n        return\
    \ \"iv\";\n    }\n    if (number === 5) {\n        return \"v\";\n    }\n    if\
    \ (number === 6) {\n        return \"vi\";\n    }\n    if (number === 7) {\n \
    \       return \"vii\";\n    }\n    if (number === 8) {\n        return \"viii\"\
    ;\n    }\n    if (number === 9) {\n        return \"ix\";\n    }\n    if (number\
    \ === 10) {\n        return \"x\";\n    }\n    if (number === 11) {\n        return\
    \ \"xi\";\n    }\n    if (number === 12) {\n        return \"xii\";\n    }\n \
    \   if (number === 13) {\n        return \"xiii\";\n    }\n    if (number ===\
    \ 14) {\n        return \"xiv\";\n    }\n    if (number === 15) {\n        return\
    \ \"xv\";\n    }\n    if (number === 16) {\n        return \"xvi\";\n    }\n \
    \   if (number === 17) {\n        return \"xvii\";\n    }\n    if (number ===\
    \ 18) {\n        return \"xviii\";\n    }\n    if (number === 19) {\n        return\
    \ \"xix\";\n    }\n    if (number === 20) {\n        return \"xx\";\n    }\n \
    \   if (number === 21) {\n        return \"xxi\";\n    }\n    if (number === 22)\
    \ {\n        return \"xxii\";\n    }\n    if (number === 23) {\n        return\
    \ \"xxiii\";\n    }\n    if (number === 24) {\n        return \"xxiv\";\n    }\n\
    \    if (number === 25) {\n        return \"xxv\";\n    }\n    if (number ===\
    \ 26) {\n        return \"xxvi\";\n    }\n    if (number === 27) {\n        return\
    \ \"xxvii\";\n    }\n    if (number ===", "    let roman: any = \"\";\n    let\
    \ romanNumeral: any = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: any = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let num = number;\n    while (num >= 1000) {\n        result +=\
    \ \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n        result +=\
    \ \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n        result +=\
    \ \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n        result +=\
    \ \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        result\
    \ += \"c\";\n        num -= 100;\n    }\n    if (num >= 90) {\n        result\
    \ += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50) {\n        result\
    \ += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n        result +=\
    \ \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        result\
    \ += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n        result +=\
    \ \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n        result += \"\
    v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\"\
    ;\n        num -= 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n\
    \        num -= 1;\n    }\n    return result;\n}\n", "    if (number < 1 || number\
    \ > 1000) {\n        return \"\";\n    }\n    let result = \"\";\n    let num\
    \ = number;\n    while (num >= 1000) {\n        result += \"m\";\n        num\
    \ -= 1000;\n    }\n    if (num >= 900) {\n        result += \"cm\";\n        num\
    \ -= 900;\n    }\n    if (num >= 500) {\n        result += \"d\";\n        num\
    \ -= 500;\n    }\n    if (num >= 400) {\n        result += \"cd\";\n        num\
    \ -= 400;\n    }\n    while (num >= 100) {\n        result += \"c\";\n       \
    \ num -= 100;\n    }\n    if (num >= 90) {\n        result += \"xc\";\n      \
    \  num -= 90;\n    }\n    if (num >= 50) {\n        result += \"l\";\n       \
    \ num -= 50;\n    }\n    if (num >= 40) {\n        result += \"xl\";\n       \
    \ num -= 40;\n    }\n    while (num >= 10) {\n        result += \"x\";\n     \
    \   num -= 10;\n    }\n    if (num >= 9) {\n        result += \"ix\";\n      \
    \  num -= 9;\n    }\n    if (num >= 5) {\n        result += \"v\";\n        num\
    \ -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\";\n        num -=\
    \ 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n        num -=\
    \ 1;\n    }\n    return result;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"\";\n    }\n    let roman = \"\";\n    let romanNumeral = [\"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while\
    \ (number >= numbers[i]) {\n            roman += romanNumeral[i];\n          \
    \  number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    if (number\
    \ < 1 || number > 1000) {\n        return \"Invalid input\";\n    }\n    let roman_numeral\
    \ = \"\";\n    let roman_numerals = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman_numeral +=\
    \ roman_numerals[i];\n            number -= numbers[i];\n        }\n    }\n  \
    \  return roman_numeral;\n}\n", "    let roman: string = \"\";\n    let romanNumeral:\
    \ string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let num = number;\n    while (num >= 1000) {\n        result +=\
    \ \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n        result +=\
    \ \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n        result +=\
    \ \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n        result +=\
    \ \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        result\
    \ += \"c\";\n        num -= 100;\n    }\n    if (num >= 90) {\n        result\
    \ += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50) {\n        result\
    \ += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n        result +=\
    \ \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        result\
    \ += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n        result +=\
    \ \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n        result += \"\
    v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\"\
    ;\n        num -= 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n\
    \        num -= 1;\n    }\n    return result;\n}\n", "    let roman = \"\";\n\
    \    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman\
    \ = \"\";\n    let num = number;\n    while (num >= 1000) {\n        roman +=\
    \ \"m\";\n        num -= 1000;\n    }\n    while (num >= 900) {\n        roman\
    \ += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500) {\n        roman\
    \ += \"d\";\n        num -= 500;\n    }\n    while (num >= 400) {\n        roman\
    \ += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        roman\
    \ += \"c\";\n        num -= 100;\n    }\n    while (num >= 90) {\n        roman\
    \ += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50) {\n        roman\
    \ += \"l\";\n        num -= 50;\n    }\n    while (num >= 40) {\n        roman\
    \ += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        roman\
    \ += \"x\";\n        num -= 10;\n    }\n    while (num >= 9) {\n        roman\
    \ += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5) {\n        roman\
    \ += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n        roman +=\
    \ \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n        roman +=\
    \ \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", "    let result =\
    \ '';\n    let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let roman: any = \"\";\n    let romanNumeral:\
    \ any = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"\
    ix\", \"v\", \"iv\", \"i\"];\n    let numbers: any = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman =\
    \ {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n \
    \       C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let i of Object.keys(roman)) {\n        let q = Math.floor(number / roman[i]);\n\
    \        number -= q * roman[i];\n        result += i.repeat(q);\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let num = number;\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (num >= roman[key]) {\n            result\
    \ += key.repeat(Math.trunc(num / roman[key]));\n            num -= roman[key]\
    \ * Math.trunc(num / roman[key]);\n        }\n    }\n    return result;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"Invalid number\";\n  \
    \  }\n    let roman = \"\";\n    let romanNumList = [\n        \"c\",\n      \
    \  \"cc\",\n        \"ccc\",\n        \"cd\",\n        \"d\",\n        \"dc\"\
    ,\n        \"dcc\",\n        \"dccc\",\n        \"cm\",\n        \"m\",\n    ];\n\
    \    let intNumList = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\n \
    \   for (let i = 0; i < intNumList.length; i++) {\n        while (intNumList[i]\
    \ <= number) {\n            roman += romanNumList[i];\n            number -= intNumList[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = '';\n    const roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.repeat(Math.floor(number / roman[key]));\n\
    \            number %= roman[key];\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\",\
    \ \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < decimal.length; i++) {\n        while (number % decimal[i] < number)\
    \ {\n            result += roman[i];\n            number -= decimal[i];\n    \
    \    }\n    }\n    return result;\n}\n", "    if (typeof number !== 'number')\
    \ {\n        return 'Not a number';\n    }\n    if (number < 1 || number > 1000)\
    \ {\n        return 'Number out of range';\n    }\n    let roman = '';\n    let\
    \ num = number;\n    while (num >= 1000) {\n        roman += 'm';\n        num\
    \ -= 1000;\n    }\n    while (num >= 900) {\n        roman += 'cm';\n        num\
    \ -= 900;\n    }\n    while (num >= 500) {\n        roman += 'd';\n        num\
    \ -= 500;\n    }\n    while (num >= 400) {\n        roman += 'cd';\n        num\
    \ -= 400;\n    }\n    while (num >= 100) {\n        roman += 'c';\n        num\
    \ -= 100;\n    }\n    while (num >= 90) {\n        roman += 'xc';\n        num\
    \ -= 90;\n    }\n    while (num >= 50) {\n        roman += 'l';\n        num -=\
    \ 50;\n    }\n    while (num >= 40) {\n        roman += 'xl';\n        num -=\
    \ 40;\n    }\n    while (num >= 10) {\n        roman += 'x';\n        num -= 10;\n\
    \    }\n    while (num >= 9) {\n        roman += 'ix';\n        num -= 9;\n  \
    \  }\n    while (num >= 5) {\n        roman += 'v';\n        num -= 5;\n    }\n\
    \    while (num >= 4) {\n        roman += 'iv';\n        num -= 4;\n    }\n  \
    \  while (num >= 1) {\n        roman += 'i';\n        num -= 1;\n    }\n    return\
    \ roman;\n}\n", "    let result: string = '';\n    let num: number = number;\n\
    \    let roman: string[] = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix',\
    \ 'v', 'iv', 'i'];\n    let decimal: number[] = [1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i < decimal.length; i++)\
    \ {\n        while (num % decimal[i] < num) {\n            result += roman[i];\n\
    \            num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman =\
    \ {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n \
    \       C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let i of Object.keys(roman)) {\n        let q = Math.floor(number / roman[i]);\n\
    \        number -= q * roman[i];\n        result += i.repeat(q);\n    }\n    return\
    \ result;\n}\n", "    // your code here\n    let result = \"\";\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "    if (number < 1 || number > 1000) {\n  \
    \      throw new Error(\"Number must be between 1 and 1000\");\n    }\n    const\
    \ roman_numerals = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n       \
    \ [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\"\
    , 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n  \
    \      [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\"\
    , 1],\n    ];\n    let result = \"\";\n    for (let i = 0; i < roman_numerals.length;\
    \ i++) {\n        while (number >= roman_numerals[i][1]) {\n            result\
    \ += roman_numerals[i][0];\n            number -= roman_numerals[i][1];\n    \
    \    }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number > 1000 || number < 1) {\n\
    \        return \"\";\n    }\n    let result = \"\";\n    let num = number;\n\
    \    while (num >= 1000) {\n        result += \"m\";\n        num -= 1000;\n \
    \   }\n    while (num >= 900) {\n        result += \"cm\";\n        num -= 900;\n\
    \    }\n    while (num >= 500) {\n        result += \"d\";\n        num -= 500;\n\
    \    }\n    while (num >= 400) {\n        result += \"cd\";\n        num -= 400;\n\
    \    }\n    while (num >= 100) {\n        result += \"c\";\n        num -= 100;\n\
    \    }\n    while (num >= 90) {\n        result += \"xc\";\n        num -= 90;\n\
    \    }\n    while (num >= 50) {\n        result += \"l\";\n        num -= 50;\n\
    \    }\n    while (num >= 40) {\n        result += \"xl\";\n        num -= 40;\n\
    \    }\n    while (num >= 10) {\n        result += \"x\";\n        num -= 10;\n\
    \    }\n    while (num >= 9) {\n        result += \"ix\";\n        num -= 9;\n\
    \    }\n    while (num >= 5) {\n        result += \"v\";\n        num -= 5;\n\
    \    }\n    while (num >= 4) {\n        result += \"iv\";\n        num -= 4;\n\
    \    }\n    while (num >= 1) {\n        result += \"i\";\n        num -= 1;\n\
    \    }\n    return result;\n}\n", "    let roman: any = \"\";\n    let romanNumeral:\
    \ any = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"\
    ix\", \"v\", \"iv\", \"i\"];\n    let numbers: any = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number === 1) {\n        return \"i\";\n    }\n    if (number === 2) {\n\
    \        return \"ii\";\n    }\n    if (number === 3) {\n        return \"iii\"\
    ;\n    }\n    if (number === 4) {\n        return \"iv\";\n    }\n    if (number\
    \ === 5) {\n        return \"v\";\n    }\n    if (number === 6) {\n        return\
    \ \"vi\";\n    }\n    if (number === 7) {\n        return \"vii\";\n    }\n  \
    \  if (number === 8) {\n        return \"viii\";\n    }\n    if (number === 9)\
    \ {\n        return \"ix\";\n    }\n    if (number === 10) {\n        return \"\
    x\";\n    }\n    if (number === 11) {\n        return \"xi\";\n    }\n    if (number\
    \ === 12) {\n        return \"xii\";\n    }\n    if (number === 13) {\n      \
    \  return \"xiii\";\n    }\n    if (number === 14) {\n        return \"xiv\";\n\
    \    }\n    if (number === 15) {\n        return \"xv\";\n    }\n    if (number\
    \ === 16) {\n        return \"xvi\";\n    }\n    if (number === 17) {\n      \
    \  return \"xvii\";\n    }\n    if (number === 18) {\n        return \"xviii\"\
    ;\n    }\n    if (number === 19) {\n        return \"xix\";\n    }\n    if (number\
    \ === 20) {\n        return \"xx\";\n    }\n    if (number === 21) {\n       \
    \ return \"xxi\";\n    }\n    if (number === 22) {\n        return \"xxii\";\n\
    \    }\n    if (number === 23) {\n        return \"xxiii\";\n    }\n    if (number\
    \ === 24) {\n        return \"xxiv\";\n    }\n    if (number === 25) {\n     \
    \   return \"xxv\";\n    }\n    if (number === 26) {\n        return \"xxvi\"\
    ;\n    }\n    if (number === 27) {\n        return \"xxvii\";\n    }\n    if (number\
    \ ===", "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n\
    \    let roman = \"\";\n    let romanNumList = [\"m\", \"cm\", \"d\", \"cd\",\
    \ \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let\
    \ numList = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let\
    \ i = 0; i < numList.length; i++) {\n        while (number >= numList[i]) {\n\
    \            number -= numList[i];\n            roman += romanNumList[i];\n  \
    \      }\n    }\n    return roman;\n}\n", "    let roman: string = \"\";\n   \
    \ let romanNumeral: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[]\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n  \
    \          roman += romanNumeral[i];\n            number -= numbers[i];\n    \
    \    }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   if (number < 1 || number > 1000) {\n        return \"Invalid input\";\n  \
    \  }\n    let roman = \"\";\n    let num = number;\n    while (num >= 1000) {\n\
    \        roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900)\
    \ {\n        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500)\
    \ {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400)\
    \ {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90)\
    \ {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50)\
    \ {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40)\
    \ {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10)\
    \ {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9)\
    \ {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5)\
    \ {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \   if (number === 0) {\n        return \"\";\n    }\n    if (number >= 1000)\
    \ {\n        return \"m\" + int_to_mini_roman(number - 1000);\n    }\n    if (number\
    \ >= 900) {\n        return \"cm\" + int_to_mini_roman(number - 900);\n    }\n\
    \    if (number >= 500) {\n        return \"d\" + int_to_mini_roman(number - 500);\n\
    \    }\n    if (number >= 400) {\n        return \"cd\" + int_to_mini_roman(number\
    \ - 400);\n    }\n    if (number >= 100) {\n        return \"c\" + int_to_mini_roman(number\
    \ - 100);\n    }\n    if (number >= 90) {\n        return \"xc\" + int_to_mini_roman(number\
    \ - 90);\n    }\n    if (number >= 50) {\n        return \"l\" + int_to_mini_roman(number\
    \ - 50);\n    }\n    if (number >= 40) {\n        return \"xl\" + int_to_mini_roman(number\
    \ - 40);\n    }\n    if (number >= 10) {\n        return \"x\" + int_to_mini_roman(number\
    \ - 10);\n    }\n    if (number >= 9) {\n        return \"ix\" + int_to_mini_roman(number\
    \ - 9);\n    }\n    if (number >= 5) {\n        return \"v\" + int_to_mini_roman(number\
    \ - 5);\n    }\n    if (number >= 4) {\n        return \"iv\" + int_to_mini_roman(number\
    \ - 4);\n    }\n    if (number >= 1) {\n        return \"i\" + int_to_mini_roman(number\
    \ - 1);\n    }\n}\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"\
    cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while (number\
    \ >= numbers[i]) {\n            roman += romanNumeral[i];\n            number\
    \ -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    let roman =\
    \ \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\",\
    \ \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = \"\";\n    let roman = [\n        [\"m\", 1000],\n        [\"\
    cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n\
    \        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"\
    x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n \
    \       [\"i\", 1]\n    ];\n    for (let i = 0; i < roman.length; i++) {\n   \
    \     while (number >= roman[i][1]) {\n            result += roman[i][0];\n  \
    \          number -= roman[i][1];\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman: any = \"\";\n    let romanNumeral: any = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let numbers: any = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    if (typeof number !== 'number')\
    \ {\n        return 'NaN';\n    }\n    let roman = '';\n    const romanNumerals\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   let a;\n    for (let key in romanNumerals) {\n        a = Math.floor(number\
    \ / romanNumerals[key]);\n        if (a >= 0) {\n            for (let i = 0; i\
    \ < a; i++) {\n                roman += key;\n            }\n        }\n     \
    \   number = number % romanNumerals[key];\n    }\n    return roman.toLowerCase();\n\
    }\n", "    const romanNumeral = {\n        M: 1000,\n        CM: 900,\n      \
    \  D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n\
    \        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n\
    \        I: 1\n    };\n    let roman = \"\";\n    for (let key in romanNumeral)\
    \ {\n        while (number >= romanNumeral[key]) {\n            roman += key;\n\
    \            number -= romanNumeral[key];\n        }\n    }\n    return roman.toLowerCase();\n\
    }\n", "    let roman = \"\";\n    let romanNumeral = [\"M\", \"CM\", \"D\", \"\
    CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman.toLowerCase();\n}\n", "    let roman = \"\"\
    ;\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let roman\
    \ = \"\";\n    let num = number;\n    while (num >= 1000) {\n        roman +=\
    \ \"m\";\n        num -= 1000;\n    }\n    while (num >= 900) {\n        roman\
    \ += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500) {\n        roman\
    \ += \"d\";\n        num -= 500;\n    }\n    while (num >= 400) {\n        roman\
    \ += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        roman\
    \ += \"c\";\n        num -= 100;\n    }\n    while (num >= 90) {\n        roman\
    \ += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50) {\n        roman\
    \ += \"l\";\n        num -= 50;\n    }\n    while (num >= 40) {\n        roman\
    \ += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        roman\
    \ += \"x\";\n        num -= 10;\n    }\n    while (num >= 9) {\n        roman\
    \ += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5) {\n        roman\
    \ += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n        roman +=\
    \ \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n        roman +=\
    \ \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", "    if (number ===\
    \ 0) {\n        return \"\";\n    }\n    if (number >= 1000) {\n        return\
    \ \"m\" + int_to_mini_roman(number - 1000);\n    }\n    if (number >= 900) {\n\
    \        return \"cm\" + int_to_mini_roman(number - 900);\n    }\n    if (number\
    \ >= 500) {\n        return \"d\" + int_to_mini_roman(number - 500);\n    }\n\
    \    if (number >= 400) {\n        return \"cd\" + int_to_mini_roman(number -\
    \ 400);\n    }\n    if (number >= 100) {\n        return \"c\" + int_to_mini_roman(number\
    \ - 100);\n    }\n    if (number >= 90) {\n        return \"xc\" + int_to_mini_roman(number\
    \ - 90);\n    }\n    if (number >= 50) {\n        return \"l\" + int_to_mini_roman(number\
    \ - 50);\n    }\n    if (number >= 40) {\n        return \"xl\" + int_to_mini_roman(number\
    \ - 40);\n    }\n    if (number >= 10) {\n        return \"x\" + int_to_mini_roman(number\
    \ - 10);\n    }\n    if (number >= 9) {\n        return \"ix\" + int_to_mini_roman(number\
    \ - 9);\n    }\n    if (number >= 5) {\n        return \"v\" + int_to_mini_roman(number\
    \ - 5);\n    }\n    if (number >= 4) {\n        return \"iv\" + int_to_mini_roman(number\
    \ - 4);\n    }\n    if (number >= 1) {\n        return \"i\" + int_to_mini_roman(number\
    \ - 1);\n    }\n}\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"\
    cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while (number\
    \ >= numbers[i]) {\n            roman += romanNumeral[i];\n            number\
    \ -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    let roman =\
    \ \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\",\
    \ \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i: number = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        return \"Invalid number\";\n    }\n    let result = \"\";\n    let roman\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length; i++) {\n     \
    \   while (number % decimal[i] < number) {\n            result += roman[i];\n\
    \            number -= decimal[i];\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let i of Object.keys(roman)) {\n\
    \        let q = Math.floor(number / roman[i]);\n        number -= q * roman[i];\n\
    \        result += i.repeat(q);\n    }\n    return result;\n}\n", "    if (number\
    \ === 1) {\n        return \"i\";\n    }\n    if (number === 2) {\n        return\
    \ \"ii\";\n    }\n    if (number === 3) {\n        return \"iii\";\n    }\n  \
    \  if (number === 4) {\n        return \"iv\";\n    }\n    if (number === 5) {\n\
    \        return \"v\";\n    }\n    if (number === 6) {\n        return \"vi\"\
    ;\n    }\n    if (number === 7) {\n        return \"vii\";\n    }\n    if (number\
    \ === 8) {\n        return \"viii\";\n    }\n    if (number === 9) {\n       \
    \ return \"ix\";\n    }\n    if (number === 10) {\n        return \"x\";\n   \
    \ }\n    if (number === 11) {\n        return \"xi\";\n    }\n    if (number ===\
    \ 12) {\n        return \"xii\";\n    }\n    if (number === 13) {\n        return\
    \ \"xiii\";\n    }\n    if (number === 14) {\n        return \"xiv\";\n    }\n\
    \    if (number === 15) {\n        return \"xv\";\n    }\n    if (number === 16)\
    \ {\n        return \"xvi\";\n    }\n    if (number === 17) {\n        return\
    \ \"xvii\";\n    }\n    if (number === 18) {\n        return \"xviii\";\n    }\n\
    \    if (number === 19) {\n        return \"xix\";\n    }\n    if (number ===\
    \ 20) {\n        return \"xx\";\n    }\n    if (number === 21) {\n        return\
    \ \"xxi\";\n    }\n    if (number === 22) {\n        return \"xxii\";\n    }\n\
    \    if (number === 23) {\n        return \"xxiii\";\n    }\n    if (number ===\
    \ 24) {\n        return \"xxiv\";\n    }\n    if (number === 25) {\n        return\
    \ \"xxv\";\n    }\n    if (number === 26) {\n        return \"xxvi\";\n    }\n\
    \    if (number === 27) {\n        return \"xxvii\";\n    }\n    if (number ===",
  "    let roman_numeral = \"\";\n    let roman_numerals = [\"m\", \"cm\", \"d\",\
    \ \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman_numeral += roman_numerals[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman_numeral;\n}\n", "    var roman = \"\";\n \
    \   var romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    var numbers = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"Invalid input\";\n   \
    \ }\n    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\"\
    , \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let\
    \ numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n\
    \            roman += romanNumeral[i];\n            number -= numbers[i];\n  \
    \      }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"Invalid number\";\n    }\n    let result = \"\";\n    let\
    \ num = number;\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (num % decimal[i] < num) {\n            result += roman[i];\n\
    \            num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let roman = '';\n    let romanNumeral\
    \ = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n\
    \    let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"Invalid number\";\n    }\n    let result = \"\";\n    let\
    \ num = number;\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (num % decimal[i] < num) {\n            result += roman[i];\n\
    \            num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    if (number === 0) {\n        return\
    \ \"\";\n    }\n    if (number >= 1000) {\n        return \"m\" + int_to_mini_roman(number\
    \ - 1000);\n    }\n    if (number >= 900) {\n        return \"cm\" + int_to_mini_roman(number\
    \ - 900);\n    }\n    if (number >= 500) {\n        return \"d\" + int_to_mini_roman(number\
    \ - 500);\n    }\n    if (number >= 400) {\n        return \"cd\" + int_to_mini_roman(number\
    \ - 400);\n    }\n    if (number >= 100) {\n        return \"c\" + int_to_mini_roman(number\
    \ - 100);\n    }\n    if (number >= 90) {\n        return \"xc\" + int_to_mini_roman(number\
    \ - 90);\n    }\n    if (number >= 50) {\n        return \"l\" + int_to_mini_roman(number\
    \ - 50);\n    }\n    if (number >= 40) {\n        return \"xl\" + int_to_mini_roman(number\
    \ - 40);\n    }\n    if (number >= 10) {\n        return \"x\" + int_to_mini_roman(number\
    \ - 10);\n    }\n    if (number >= 9) {\n        return \"ix\" + int_to_mini_roman(number\
    \ - 9);\n    }\n    if (number >= 5) {\n        return \"v\" + int_to_mini_roman(number\
    \ - 5);\n    }\n    if (number >= 4) {\n        return \"iv\" + int_to_mini_roman(number\
    \ - 4);\n    }\n    if (number >= 1) {\n        return \"i\" + int_to_mini_roman(number\
    \ - 1);\n    }\n}\n", "    if (number < 1 || number > 1000) {\n        return\
    \ \"Invalid number\";\n    }\n    let roman: string = \"\";\n    let romanNumeral:\
    \ string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    let result\
    \ = \"\";\n    let roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (number % decimal[i] < number) {\n            result +=\
    \ roman[i];\n            number -= decimal[i];\n        }\n    }\n    return result;\n\
    }\n", "    let roman: string = \"\";\n    let romanNumeral: any = {\n        M:\
    \ 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n\
    \        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX:\
    \ 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in\
    \ romanNumeral) {\n        while (number >= romanNumeral[key]) {\n           \
    \ roman += key;\n            number -= romanNumeral[key];\n        }\n    }\n\
    \    return roman.toLowerCase();\n}\n", "    let roman: any = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    let str: any = '';\n\
    \    for (let i of Object.keys(roman)) {\n        let q = Math.floor(number /\
    \ roman[i]);\n        number -= q * roman[i];\n        str += i.repeat(q);\n \
    \   }\n    return str;\n}\n", "    if (number < 1 || number > 1000) {\n      \
    \  return \"\";\n    }\n    let result = \"\";\n    let roman = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\
    \    for (let i = 0; i < roman.length; i++) {\n        while (number >= decimal[i])\
    \ {\n            result += roman[i];\n            number -= decimal[i];\n    \
    \    }\n    }\n    return result;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        return \"Invalid number\";\n    }\n    let roman = \"\";\n    let\
    \ num = number;\n    let romans = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (num >= numbers[i]) {\n            roman += romans[i];\n\
    \            num -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        while (number >= numbers[i]) {\n    \
    \        roman += romanNumeral[i];\n            number -= numbers[i];\n      \
    \  }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman =\
    \ {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n \
    \       C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.repeat(Math.trunc(number / roman[key]));\n            number\
    \ %= roman[key];\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ string = \"\";\n    let roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal:\
    \ number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for\
    \ (let i: number = 0; i < decimal.length; i++) {\n        while (number % decimal[i]\
    \ < number) {\n            result += roman[i];\n            number -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    if (number > 1000 || number\
    \ < 1) {\n        return \"Invalid input\";\n    }\n    let roman = \"\";\n  \
    \  let num = number;\n    while (num >= 100) {\n        roman += \"c\";\n    \
    \    num -= 100;\n    }\n    if (num >= 90) {\n        roman += \"xc\";\n    \
    \    num -= 90;\n    }\n    if (num >= 50) {\n        roman += \"l\";\n      \
    \  num -= 50;\n    }\n    if (num >= 40) {\n        roman += \"xl\";\n       \
    \ num -= 40;\n    }\n    while (num >= 10) {\n        roman += \"x\";\n      \
    \  num -= 10;\n    }\n    if (num >= 9) {\n        roman += \"ix\";\n        num\
    \ -= 9;\n    }\n    if (num >= 5) {\n        roman += \"v\";\n        num -= 5;\n\
    \    }\n    if (num >= 4) {\n        roman += \"iv\";\n        num -= 4;\n   \
    \ }\n    while (num >= 1) {\n        roman += \"i\";\n        num -= 1;\n    }\n\
    \    return roman;\n}\n", "    let roman = \"\";\n    let num = number;\n    let\
    \ romanNumeral = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n    \
    \    CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n\
    \        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n\
    \    };\n    for (let key in romanNumeral) {\n        while (num >= romanNumeral[key])\
    \ {\n            roman += key;\n            num -= romanNumeral[key];\n      \
    \  }\n    }\n    return roman.toLowerCase();\n}\n", "    if (number < 1 || number\
    \ > 1000) {\n        return \"Invalid number\";\n    }\n    let result = \"\"\
    ;\n    let num = number;\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (num\
    \ >= roman[key]) {\n            result += key.repeat(Math.floor(num / roman[key]));\n\
    \            num -= roman[key] * Math.floor(num / roman[key]);\n        }\n  \
    \  }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

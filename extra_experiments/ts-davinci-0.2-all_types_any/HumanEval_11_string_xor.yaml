name: HumanEval_11_string_xor
language: ts
prompt: "//Input are two strings a and b consisting only of 1s and 0s.\n// Perform\
  \ binary XOR on these inputs and return result also as a string.\n// >>> string_xor(\"\
  010\", \"110\")\n// \"100\"\nfunction string_xor(a: any, b: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = string_xor;\n  assert.deepEqual(candidate(\"111000\"\
  , \"101010\"),\"010010\");\n  assert.deepEqual(candidate(\"1\", \"1\"),\"0\");\n\
  \  assert.deepEqual(candidate(\"0101\", \"0000\"),\"0101\");\n}\n\ntest();"
completions: ["    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] || \"0\";\n        let bBit = b[b.length - i - 1] || \"0\";\n     \
    \   result = (aBit != bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) ||\
    \ 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString() + result;\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit\
    \ = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result =\
    \ \"1\" + result;\n        } else {\n            result = \"0\" + result;\n  \
    \      }\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", "   \
    \ if (a.length !== b.length) {\n        throw new Error(\"Strings must be of equal\
    \ length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j\
    \ = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i],\
    \ 10) || 0) + (parseInt(b[j], 10) || 0);\n        result = (sum % 2).toString()\
    \ + result;\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n\
    \        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n    \
    \        result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result\
    \ = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"\
    1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit\
    \ ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let\
    \ i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"1\"\
    ;\n        let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit ^\
    \ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let a_bit = a[a.length - i - 1] || \"0\";\n    \
    \    let b_bit = b[b.length - i - 1] || \"0\";\n        result = (a_bit != b_bit\
    \ ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit\
    \ = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result =\
    \ \"1\" + result;\n        } else {\n            result = \"0\" + result;\n  \
    \      }\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"\
    1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit\
    \ ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit\
    \ = b[b.length - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"\
    0\") + result;\n    }\n    return result;\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error('Strings must be of equal length');\n    }\n    let\
    \ result = '';\n    for (let i = 0; i < a.length; i++) {\n        result += (parseInt(a[i])\
    \ ^ parseInt(b[i])).toString();\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit\
    \ = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result =\
    \ \"1\" + result;\n        } else {\n            result = \"0\" + result;\n  \
    \      }\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n \
    \       let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n     \
    \       result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let a_i = a[a.length - i - 1];\n\
    \        let b_i = b[b.length - i - 1];\n        if (a_i === undefined) {\n  \
    \          a_i = \"0\";\n        }\n        if (b_i === undefined) {\n       \
    \     b_i = \"0\";\n        }\n        if (a_i === b_i) {\n            result\
    \ = \"0\" + result;\n        } else {\n            result = \"1\" + result;\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    a =\
    \ a.toString();\n    b = b.toString();\n    for (let i = 0; i < a.length; i++)\
    \ {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result\
    \ = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        let a_char = a.charAt(a.length - i -\
    \ 1);\n        let b_char = b.charAt(b.length - i - 1);\n        if (a_char ===\
    \ b_char) {\n            result = \"0\" + result;\n        } else {\n        \
    \    result = \"1\" + result;\n        }\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n\
    \        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n    \
    \        result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        result += (a[i] === b[i]) ? \"\
    0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n      \
    \  result = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let a_bit = a[a.length\
    \ - i - 1] || \"0\";\n        let b_bit = b[b.length - i - 1] || \"0\";\n    \
    \    result = (a_bit != b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result\
    \ = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n      \
    \  result = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n\
    \    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum\
    \ = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString()\
    \ + result;\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", " \
    \   if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let a_bit = a[a.length\
    \ - i - 1] === \"1\";\n        let b_bit = b[b.length - i - 1] === \"1\";\n  \
    \      result = (a_bit ^ b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    if (a.length !== b.length) {\n        throw new Error(\"Strings not\
    \ of equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i <\
    \ a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n\
    \    return result;\n}\n", "    if (a.length !== b.length) {\n        throw new\
    \ Error(\"Strings must be of equal length\");\n    }\n    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n \
    \   let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j\
    \ >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >=\
    \ 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" +\
    \ result;\n        } else {\n            result = \"0\" + result;\n        }\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    if (typeof a !== 'string' ||\
    \ typeof b !== 'string') {\n        throw new Error('Inputs must be strings');\n\
    \    }\n    if (a.length !== b.length) {\n        throw new Error('Inputs must\
    \ have the same length');\n    }\n    let result = '';\n    for (let i = 0; i\
    \ < a.length; i++) {\n        result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = '';\n    for (let i = 0; i < a.length; i++) {\n      \
    \  result += (a[i] == b[i]) ? '0' : '1';\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ || \"0\";\n        let bBit = b[b.length - i - 1] || \"0\";\n        result\
    \ = (aBit === bBit ? \"0\" : \"1\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j]\
    \ : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" + result;\n\
    \        } else {\n            result = \"0\" + result;\n        }\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j\
    \ >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n\
    \        result = (sum % 2).toString() + result;\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = a.length > b.length ? a.length\
    \ : b.length;\n    for (let i = 0; i < length; i++) {\n        result += (a[i]\
    \ === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"1\";\n    \
    \    let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit ^ bBit\
    \ ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "  let result =\
    \ \"\";\n  let i = a.length - 1;\n  let j = b.length - 1;\n\n  while (i >= 0 ||\
    \ j >= 0) {\n    let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n  \
    \  result = (sum % 2).toString() + result;\n    i--;\n    j--;\n  }\n\n  return\
    \ result;\n}\n", "    if (a.length !== b.length) {\n        throw new Error(\"\
    Strings not of equal length\");\n    }\n    let result = \"\";\n    for (let i\
    \ = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\"\
    ;\n    }\n    return result;\n}\n", "  let result = \"\";\n  let i = a.length\
    \ - 1;\n  let j = b.length - 1;\n\n  while (i >= 0 || j >= 0) {\n    let aBit\
    \ = i >= 0 ? a[i] : \"0\";\n    let bBit = j >= 0 ? b[j] : \"0\";\n    if (aBit\
    \ != bBit) {\n      result = \"1\" + result;\n    } else {\n      result = \"\
    0\" + result;\n    }\n    i--;\n    j--;\n  }\n\n  return result;\n}\n", "   \
    \ let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n      \
    \  result = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] || \"0\";\n        let bBit = b[b.length - i - 1] || \"0\";\n     \
    \   result = (aBit !== bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result\
    \ = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    if (a.length !== b.length) {\n        throw new Error(\"Strings must be equal\
    \ length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n  \
    \  }\n    return result;\n}\n", "    if (a.length !== b.length) {\n        throw\
    \ new Error(\"Strings must be of equal length\");\n    }\n    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 ||\
    \ j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >=\
    \ 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" +\
    \ result;\n        } else {\n            result = \"0\" + result;\n        }\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j]\
    \ : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" + result;\n\
    \        } else {\n            result = \"0\" + result;\n        }\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] || \"0\";\n        let bBit =\
    \ b[b.length - i - 1] || \"0\";\n        result = (aBit === bBit ? \"0\" : \"\
    1\") + result;\n    }\n    return result;\n}\n", "    let result = '';\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        const x = i >= 0 ? a[i] : '0';\n        const y = j >= 0 ? b[j] :\
    \ '0';\n        if (x !== y) {\n            result = '1' + result;\n        }\
    \ else {\n            result = '0' + result;\n        }\n        i--;\n      \
    \  j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let length\
    \ = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++) {\n  \
    \      let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) ||\
    \ 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString() + result;\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"1\";\n    \
    \    let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit ^ bBit\
    \ ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n      \
    \  result = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit !== bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ || \"0\";\n        let bBit = b[b.length - i - 1] || \"0\";\n        result\
    \ = (aBit != bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        let a_bit = a[a.length - i - 1] || \"\
    0\";\n        let b_bit = b[b.length - i - 1] || \"0\";\n        result = (a_bit\
    \ != b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n   \
    \ while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i], 10) || 0) + (parseInt(b[j],\
    \ 10) || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j\
    \ >= 0) {\n        let sum = (parseInt(a[i], 10) || 0) + (parseInt(b[j], 10) ||\
    \ 0);\n        result = (sum % 2).toString() + result;\n        i--;\n       \
    \ j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let i\
    \ = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n\
    \        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result\
    \ = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n      \
    \  result = (sum % 2).toString() + result;\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let a_bit = a[a.length\
    \ - i - 1] || \"0\";\n        let b_bit = b[b.length - i - 1] || \"0\";\n    \
    \    result = (a_bit !== b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let a_char = a.charAt(a.length\
    \ - i - 1);\n        let b_char = b.charAt(b.length - i - 1);\n        let a_int\
    \ = a_char ? parseInt(a_char) : 0;\n        let b_int = b_char ? parseInt(b_char)\
    \ : 0;\n        result = (a_int ^ b_int).toString() + result;\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j\
    \ = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i],\
    \ 10) || 0) + (parseInt(b[j], 10) || 0);\n        result = (sum % 2).toString()\
    \ + result;\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error(\"Strings must be of equal length\");\n    }\n  \
    \  let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let\
    \ i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1] === \"1\"\
    ;\n        let bBit = b[b.length - i - 1] === \"1\";\n        result = (aBit ^\
    \ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let a_bit = a[a.length - i - 1] || \"0\";\n    \
    \    let b_bit = b[b.length - i - 1] || \"0\";\n        result = (a_bit === b_bit\
    \ ? \"0\" : \"1\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit\
    \ = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result =\
    \ \"1\" + result;\n        } else {\n            result = \"0\" + result;\n  \
    \      }\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ length = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++)\
    \ {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n\
    \    let maxLength = Math.max(aBin.length, bBin.length);\n    aBin = aBin.padStart(maxLength,\
    \ \"0\");\n    bBin = bBin.padStart(maxLength, \"0\");\n    for (let i = 0; i\
    \ < maxLength; i++) {\n        result += aBin[i] === bBin[i] ? \"0\" : \"1\";\n\
    \    }\n    return parseInt(result, 2);\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error(\"Strings must be equal length\");\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result +=\
    \ (parseInt(a[i]) ^ parseInt(b[i])).toString();\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        let a_bit = a[a.length - i - 1] ===\
    \ \"1\";\n        let b_bit = b[b.length - i - 1] === \"1\";\n        result =\
    \ (a_bit ^ b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    return a.split('').map((v, i) => v == b[i] ? '0' : '1').join('');\n}\n", " \
    \   if (a.length !== b.length) {\n        throw new Error(\"Strings are not the\
    \ same length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n  \
    \  }\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j\
    \ = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0\
    \ ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit\
    \ != bBit) {\n            result = \"1\" + result;\n        } else {\n       \
    \     result = \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    if (a.length !== b.length) {\n        throw new\
    \ Error(\"Strings must be of equal length\");\n    }\n    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ? \"\
    0\" : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n  let i\
    \ = a.length - 1;\n  let j = b.length - 1;\n\n  while (i >= 0 || j >= 0) {\n \
    \   let aBit = i >= 0 ? a[i] : \"0\";\n    let bBit = j >= 0 ? b[j] : \"0\";\n\
    \    if (aBit != bBit) {\n      result = \"1\" + result;\n    } else {\n     \
    \ result = \"0\" + result;\n    }\n    i--;\n    j--;\n  }\n\n  return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) ||\
    \ 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString() + result;\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ length = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++)\
    \ {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) ||\
    \ 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString() + result;\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i], 10) || 0) + (parseInt(b[j],\
    \ 10) || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] || \"0\";\n        let bBit =\
    \ b[b.length - i - 1] || \"0\";\n        result = (aBit === bBit ? \"0\" : \"\
    1\") + result;\n    }\n    return result;\n}\n", "    let result = \"\";\n   \
    \ let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >=\
    \ 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n   \
    \     result = (sum % 2).toString() + result;\n        i--;\n        j--;\n  \
    \  }\n\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"\
    0\";\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j\
    \ = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0\
    \ ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit\
    \ != bBit) {\n            result = \"1\" + result;\n        } else {\n       \
    \     result = \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\
    \n    return result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n\
    \    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit\
    \ = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n      \
    \  if (aBit != bBit) {\n            result = \"1\" + result;\n        } else {\n\
    \            result = \"0\" + result;\n        }\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let result = \"\";\n    let length =\
    \ Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++) {\n    \
    \    let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n",
  "    let res = \"\";\n    for (let i = 0; i < a.length; i++) {\n        res += (a[i]\
    \ === b[i]) ? \"0\" : \"1\";\n    }\n    return res;\n}\n", "    let result =\
    \ \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let a_bit = i >= 0 ? a[i] : \"0\";\n        let b_bit\
    \ = j >= 0 ? b[j] : \"0\";\n        if (a_bit == b_bit) {\n            result\
    \ = \"0\" + result;\n        } else {\n            result = \"1\" + result;\n\
    \        }\n        i--;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n \
    \       let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n     \
    \       result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] || \"0\";\n        let bBit = b[b.length - i - 1] || \"0\";\n     \
    \   result = (aBit != bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = a.length;\n    for (let i = 0;\
    \ i < length; i++) {\n        if (a[i] == b[i]) {\n            result += \"0\"\
    ;\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    return (\n        a\n            .split(\"\")\n        \
    \    .map((v: any, i: any) => (v === b[i] ? \"0\" : \"1\"))\n            .join(\"\
    \")\n    );\n}\n", "  let result = \"\";\n  let longer = a.length > b.length ?\
    \ a : b;\n  let shorter = a.length > b.length ? b : a;\n  for (let i = 0; i <\
    \ longer.length; i++) {\n    if (i < shorter.length) {\n      result += longer[i]\
    \ === shorter[i] ? \"0\" : \"1\";\n    } else {\n      result += longer[i];\n\
    \    }\n  }\n  return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n \
    \       if (aBit != bBit) {\n            result = \"1\" + result;\n        } else\
    \ {\n            result = \"0\" + result;\n        }\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    if (a.length !== b.length) {\n      \
    \  throw new Error(\"Strings must be of equal length\");\n    }\n    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result += (parseInt(a[i])\
    \ ^ parseInt(b[i])).toString();\n    }\n    return result;\n}\n", "    if (a.length\
    \ !== b.length) {\n        throw new Error(\"Strings must be of equal length\"\
    );\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n\
    \        if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n\
    \            result += \"1\";\n        }\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j]\
    \ : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" + result;\n\
    \        } else {\n            result = \"0\" + result;\n        }\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] || \"0\";\n        let bBit =\
    \ b[b.length - i - 1] || \"0\";\n        result = (aBit != bBit ? \"1\" : \"0\"\
    ) + result;\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0)\
    \ {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j]\
    \ : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" + result;\n\
    \        } else {\n            result = \"0\" + result;\n        }\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j\
    \ >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n\
    \        result = (sum % 2).toString() + result;\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let res = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            res += \"0\"\
    ;\n        } else {\n            res += \"1\";\n        }\n    }\n    return res;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        result += (a[i]\
    \ === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result\
    \ = '';\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i])\
    \ {\n            result += '0';\n        } else {\n            result += '1';\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ length = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++)\
    \ {\n        let a_char = a.charAt(a.length - i - 1);\n        let b_char = b.charAt(b.length\
    \ - i - 1);\n        if (a_char === b_char) {\n            result = \"0\" + result;\n\
    \        } else {\n            result = \"1\" + result;\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n\
    \    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let sum\
    \ = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum % 2).toString()\
    \ + result;\n        i--;\n        j--;\n    }\n\n    return result;\n}\n", " \
    \   let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\
    \n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n\
    \        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n    \
    \        result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = '';\n    for (let i = 0; i < a.length; i++) {\n      \
    \  if (a[i] === b[i]) {\n            result += '0';\n        } else {\n      \
    \      result += '1';\n        }\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let ai = a[i] || \"0\";\n        let bi = b[i] ||\
    \ \"0\";\n        result += (ai === bi) ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    if (a.length !== b.length) {\n        throw new Error(\"\
    Strings must be of equal length\");\n    }\n    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"\
    1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let a_bit = a[a.length - i -\
    \ 1] || \"0\";\n        let b_bit = b[b.length - i - 1] || \"0\";\n        result\
    \ = (a_bit !== b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    return (a ^ b).toString(2);\n}\n", "    let result = \"\";\n    let longer\
    \ = a.length > b.length ? a : b;\n    let shorter = a.length > b.length ? b :\
    \ a;\n    for (let i = 0; i < longer.length; i++) {\n        if (i < shorter.length)\
    \ {\n            if (longer[i] === shorter[i]) {\n                result += \"\
    0\";\n            } else {\n                result += \"1\";\n            }\n\
    \        } else {\n            result += longer[i];\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length\
    \ - i - 1] === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n   \
    \     result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let a_char = a.charAt(a.length\
    \ - i - 1);\n        let b_char = b.charAt(b.length - i - 1);\n        if (a_char\
    \ === undefined) {\n            a_char = \"0\";\n        }\n        if (b_char\
    \ === undefined) {\n            b_char = \"0\";\n        }\n        result = (a_char\
    \ === b_char ? \"0\" : \"1\") + result;\n    }\n    return result;\n}\n", "  \
    \  let result = '';\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ == b[i]) {\n            result += '0';\n        } else {\n            result\
    \ += '1';\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 ||\
    \ j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >=\
    \ 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" +\
    \ result;\n        } else {\n            result = \"0\" + result;\n        }\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let length = Math.max(a.length, b.length);\n    for (let i = 0;\
    \ i < length; i++) {\n        let a_bit = a[a.length - i - 1] === \"1\";\n   \
    \     let b_bit = b[b.length - i - 1] === \"1\";\n        result = (a_bit ^ b_bit\
    \ ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] ===\
    \ b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\
    \";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0\
    \ || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n\
    \        result = (sum % 2).toString() + result;\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ sum = (parseInt(a[i]) || 0) + (parseInt(b[j]) || 0);\n        result = (sum\
    \ % 2).toString() + result;\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n \
    \       let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n     \
    \       result = \"1\" + result;\n        } else {\n            result = \"0\"\
    \ + result;\n        }\n        i--;\n        j--;\n    }\n\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "  let result = \"\";\n  let length = Math.max(a.length, b.length);\n\
    \  for (let i = 0; i < length; i++) {\n    let aBit = a[a.length - i - 1] ===\
    \ \"1\";\n    let bBit = b[b.length - i - 1] === \"1\";\n    result = (aBit ^\
    \ bBit ? \"1\" : \"0\") + result;\n  }\n  return result;\n}\n", "    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i])\
    \ {\n            result += \"0\";\n        } else {\n            result += \"\
    1\";\n        }\n    }\n    return result;\n}\n", "    return (\n        a\n \
    \           .split(\"\")\n            .map((v: any, i: any) => v == b[i] ? \"\
    0\" : \"1\")\n            .join(\"\")\n    );\n}\n", "    let result = \"\";\n\
    \    let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    let res = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        res += a[i] == b[i] ? \"0\" : \"1\";\n    }\n    return res;\n}\n",
  "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n\
    \    while (i >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ length = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++)\
    \ {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let i = a.length\
    \ - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let\
    \ aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n \
    \       if (aBit != bBit) {\n            result = \"1\" + result;\n        } else\
    \ {\n            result = \"0\" + result;\n        }\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let result = \"\";\n    let length =\
    \ Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++) {\n    \
    \    let a_bit = a[a.length - i - 1] || \"0\";\n        let b_bit = b[b.length\
    \ - i - 1] || \"0\";\n        result = (a_bit != b_bit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let res = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        res += (a[i] == b[i]) ? \"0\" : \"1\";\n    }\n\
    \    return res;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n \
    \   let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit\
    \ = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n      \
    \  if (aBit != bBit) {\n            result = \"1\" + result;\n        } else {\n\
    \            result = \"0\" + result;\n        }\n        i--;\n        j--;\n\
    \    }\n\n    return result;\n}\n", "    let result = \"\";\n    for (let i =\
    \ 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result +=\
    \ \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n \
    \   return result;\n}\n", "    let result = \"\";\n    let i = a.length - 1;\n\
    \    let j = b.length - 1;\n\n    while (i >= 0 || j >= 0) {\n        let a_bit\
    \ = i >= 0 ? a[i] : \"0\";\n        let b_bit = j >= 0 ? b[j] : \"0\";\n     \
    \   if (a_bit != b_bit) {\n            result = \"1\" + result;\n        } else\
    \ {\n            result = \"0\" + result;\n        }\n        i--;\n        j--;\n\
    \    }\n    return result;\n}\n", "    if (a.length !== b.length) {\n        throw\
    \ new Error(\"Strings must be of equal length\");\n    }\n    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit\
    \ = b[b.length - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"\
    0\") + result;\n    }\n    return result;\n}\n", "    let result = \"\";\n   \
    \ let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j >=\
    \ 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >= 0 ?\
    \ b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" + result;\n\
    \        } else {\n            result = \"0\" + result;\n        }\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let a_bit = a[a.length - i - 1] || \"0\";\n        let b_bit\
    \ = b[b.length - i - 1] || \"0\";\n        result = (a_bit != b_bit ? \"1\" :\
    \ \"0\") + result;\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 ||\
    \ j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >=\
    \ 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" +\
    \ result;\n        } else {\n            result = \"0\" + result;\n        }\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i]) || 0) + (parseInt(b[j])\
    \ || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n    \
    \    j--;\n    }\n\n    return result;\n}\n", "    return (\n        a\n     \
    \       .split(\"\")\n            .map((x: any, i: any) => (x == b[i] ? \"0\"\
    \ : \"1\"))\n            .join(\"\")\n    );\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error(\"Strings must be of equal length\");\n    }\n  \
    \  let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n    }\n    return result;\n\
    }\n", "    if (a.length !== b.length) {\n        throw new Error(\"Strings must\
    \ be of equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n   \
    \ }\n    return result;\n}\n", "    let result = '';\n    for (let i = 0; i <\
    \ a.length; i++) {\n        if (a[i] === b[i]) {\n            result += '0';\n\
    \        } else {\n            result += '1';\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let aBit = a[a.length - i - 1]\
    \ === \"1\";\n        let bBit = b[b.length - i - 1] === \"1\";\n        result\
    \ = (aBit ^ bBit ? \"1\" : \"0\") + result;\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n    for\
    \ (let i = 0; i < length; i++) {\n        result += (a[i] === b[i]) ? \"0\" :\
    \ \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    let length\
    \ = Math.max(a.length, b.length);\n    for (let i = 0; i < length; i++) {\n  \
    \      let aBit = a[a.length - i - 1] === \"1\";\n        let bBit = b[b.length\
    \ - i - 1] === \"1\";\n        result = (aBit ^ bBit ? \"1\" : \"0\") + result;\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let length = Math.max(a.length,\
    \ b.length);\n    for (let i = 0; i < length; i++) {\n        let a_bit = a[a.length\
    \ - i - 1] === \"1\";\n        let b_bit = b[b.length - i - 1] === \"1\";\n  \
    \      result = (a_bit ^ b_bit ? \"1\" : \"0\") + result;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let length = Math.max(a.length, b.length);\n\
    \    for (let i = 0; i < length; i++) {\n        let a_char = a.charAt(a.length\
    \ - i - 1);\n        let b_char = b.charAt(b.length - i - 1);\n        if (a_char\
    \ === undefined) {\n            a_char = \"0\";\n        }\n        if (b_char\
    \ === undefined) {\n            b_char = \"0\";\n        }\n        result = (a_char\
    \ === b_char ? \"0\" : \"1\") + result;\n    }\n    return result;\n}\n", "  \
    \  if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n  \
    \  }\n    return result;\n}\n", "    if (a.length !== b.length) {\n        throw\
    \ new Error(\"Strings should be of equal length\");\n    }\n    let result = \"\
    \";\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error(\"Strings must be of equal length\");\n    }\n  \
    \  let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    if\
    \ (a.length !== b.length) {\n        throw new Error(\"Strings must be equal length\"\
    );\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n\
    \        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let i = a.length - 1;\n    let j = b.length\
    \ - 1;\n\n    while (i >= 0 || j >= 0) {\n        let aBit = i >= 0 ? a[i] : \"\
    0\";\n        let bBit = j >= 0 ? b[j] : \"0\";\n        if (aBit !== bBit) {\n\
    \            result = \"1\" + result;\n        } else {\n            result =\
    \ \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n    return\
    \ result;\n}\n", "    if (a.length !== b.length) {\n        throw new Error(\"\
    Strings must be of equal length\");\n    }\n    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\"\
    ;\n    }\n    return result;\n}\n", "    if (a.length !== b.length) {\n      \
    \  throw new Error(\"Strings must be of equal length\");\n    }\n    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result += (parseInt(a[i])\
    \ ^ parseInt(b[i])).toString();\n    }\n    return result;\n}\n", "    let result\
    \ = '';\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i], 10) || 0) + (parseInt(b[j],\
    \ 10) || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let length = Math.max(a.length, b.length);\n    for (let i = 0; i < length;\
    \ i++) {\n        let aBit = a[a.length - i - 1] === \"1\";\n        let bBit\
    \ = b[b.length - i - 1] === \"1\";\n        result = (aBit !== bBit ? \"1\" :\
    \ \"0\") + result;\n    }\n    return result;\n}\n", "    if (a.length !== b.length)\
    \ {\n        throw new Error(\"Strings should be of equal length\");\n    }\n\
    \    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let\
    \ res = \"\";\n    for (let i = 0; i < a.length; i++) {\n        res += (a[i]\
    \ === b[i]) ? \"0\" : \"1\";\n    }\n    return res;\n}\n", "    let result =\
    \ \"\";\n    let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i\
    \ >= 0 || j >= 0) {\n        let sum = (parseInt(a[i], 10) || 0) + (parseInt(b[j],\
    \ 10) || 0);\n        result = (sum % 2).toString() + result;\n        i--;\n\
    \        j--;\n    }\n\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let i = a.length - 1;\n    let j = b.length - 1;\n\n    while (i >= 0 || j\
    \ >= 0) {\n        let aBit = i >= 0 ? a[i] : \"0\";\n        let bBit = j >=\
    \ 0 ? b[j] : \"0\";\n        if (aBit != bBit) {\n            result = \"1\" +\
    \ result;\n        } else {\n            result = \"0\" + result;\n        }\n\
    \        i--;\n        j--;\n    }\n\n    return result;\n}\n", "    if (a.length\
    \ !== b.length) {\n        throw new Error(\"Strings must be of equal length\"\
    );\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n\
    \        result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n    }\n    return\
    \ result;\n}\n", "    if (a.length !== b.length) {\n        throw new Error(\"\
    Strings must be of equal length\");\n    }\n    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"\
    1\";\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

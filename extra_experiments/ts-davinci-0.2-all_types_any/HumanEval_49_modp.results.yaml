language: ts
name: HumanEval_49_modp
results:
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return Math.pow(modp(n\
    \ / 2, p), 2) % p;\n  }\n  return (n % p) * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkvv8_xu3.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkvv8_xu3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1mkf9aj5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkf9aj5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) return 1;\n  if (n % 2 === 0) {\n    return modp(n / 2, p) ** 2 %\
    \ p;\n  } else {\n    return modp(n - 1, p) * n % p;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7esx7hpn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7esx7hpn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) return 1;\n    if (n % 2 == 0) {\n        let t = modp(n / 2, p);\n\
    \        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpr2sza_bp.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr2sza_bp.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n < 0) {\n    n = n + p;\n  }\n  if (n == 0) {\n    return 1;\n  }\n  if (n\
    \ == 1) {\n    return n;\n  }\n  if (n % 2 == 0) {\n    return Math.pow(modp(n\
    \ / 2, p), 2) % p;\n  } else {\n    return (n * modp(n - 1, p)) % p;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkkgg6z61.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkgg6z61.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1mkf9aj5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkf9aj5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) {\n    return 1;\n  }\n  if (n % 2 == 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpufqlwiwz.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpufqlwiwz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323686
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_wj8_xyh.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_wj8_xyh.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323686
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (p === 0) {\n        return 1;\n    }\n    if (n === 0) {\n        return 0;\n\
    \    }\n    if (n % 2 === 0) {\n        return (modp(n / 2, p) ** 2) % p;\n  \
    \  }\n    return (modp(n - 1, p) * modp(n, p)) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpv76xo5hm.js:13\n    if (p === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpv76xo5hm.js:13:5)\n    at modp\
    \ (/tmp/tmpv76xo5hm.js:22:13)\n    at modp (/tmp/tmpv76xo5hm.js:22:30)\n    at\
    \ modp (/tmp/tmpv76xo5hm.js:22:30)\n    at modp (/tmp/tmpv76xo5hm.js:22:30)\n\
    \    at modp (/tmp/tmpv76xo5hm.js:22:30)\n    at modp (/tmp/tmpv76xo5hm.js:22:30)\n\
    \    at modp (/tmp/tmpv76xo5hm.js:22:30)\n    at modp (/tmp/tmpv76xo5hm.js:22:30)\n\
    \    at modp (/tmp/tmpv76xo5hm.js:22:30)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323686
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        let r\
    \ = modp(n / 2, p);\n        return r * r % p;\n    }\n    return modp(n - 1,\
    \ p) * n % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp6auwtx1m.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6auwtx1m.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323686
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) * modp(n / 2, p) % p;\n    }\n    else {\n        return modp(n\
    \ - 1, p) * modp(n, p) % p;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpw8c7_ypy.js:13\n    if (n == 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpw8c7_ypy.js:13:5)\n    at modp\
    \ (/tmp/tmpw8c7_ypy.js:20:16)\n    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n    at\
    \ modp (/tmp/tmpw8c7_ypy.js:20:33)\n    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n\
    \    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n\
    \    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n\
    \    at modp (/tmp/tmpw8c7_ypy.js:20:33)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323687
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (p === 0) {\n        return 1;\n    }\n    if (n === 0) {\n        return 0;\n\
    \    }\n    if (n % 2 === 0) {\n        return modp(n / 2, p) ** 2 % p;\n    }\n\
    \    return n * modp(n - 1, p) % p;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpgwiwvvqg.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgwiwvvqg.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323687
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if\
    \ (n < 2 * p) {\n        return n % p;\n    }\n    if (n % 2 === 0) {\n      \
    \  return 2 * modp(n / 2, p);\n    }\n    return 2 * modp(n / 2, p) + 1;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould\
    \ loosely deep-equal\n\n2\n    at test (/tmp/tmp606_svpc.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp606_svpc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323687
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n < p) {\n        return\
    \ n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if (n < 2 *\
    \ p) {\n        return n % p;\n    }\n    if (n % 2 === 0) {\n        return modp(n\
    \ / 2, p) * 2 % p;\n    }\n    return modp(n / 2, p) * 2 % p + 1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n98\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsi3d9h48.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsi3d9h48.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 98,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323688
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) {\n    return 1;\n  }\n  if (n % 2 == 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxl8yna_h.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxl8yna_h.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323689
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    return modp(n % p, p);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfgsr14yx.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfgsr14yx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323689
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    } else if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    } else {\n        return modp(n - 1, p) * n %\
    \ p;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwscd8ugu.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwscd8ugu.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323689
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n === 1) {\n    return n;\n  }\n  if\
    \ (n % 2 === 0) {\n    return modp(n / 2, p) ** 2 % p;\n  }\n  return n * modp(n\
    \ - 1, p) % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpt5889i7a.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt5889i7a.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323689
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1mkf9aj5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkf9aj5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n == 0) {\n        return\
    \ 1;\n    }\n    if (n == 1) {\n        return 0;\n    }\n    if (n % 2 == 0)\
    \ {\n        return modp(n / 2, p) * modp(2, p) % p;\n    }\n    return modp(n\
    \ - 1, p) * modp(2, p) % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptfj5jc7l.js:13\n    if (n < 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmptfj5jc7l.js:13:5)\n    at modp\
    \ (/tmp/tmptfj5jc7l.js:23:16)\n    at modp (/tmp/tmptfj5jc7l.js:23:33)\n    at\
    \ modp (/tmp/tmptfj5jc7l.js:23:33)\n    at modp (/tmp/tmptfj5jc7l.js:23:33)\n\
    \    at modp (/tmp/tmptfj5jc7l.js:23:33)\n    at modp (/tmp/tmptfj5jc7l.js:23:33)\n\
    \    at modp (/tmp/tmptfj5jc7l.js:23:33)\n    at modp (/tmp/tmptfj5jc7l.js:23:33)\n\
    \    at modp (/tmp/tmptfj5jc7l.js:23:33)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323690
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    return\
    \ modp(n % p, p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9ltiwhj8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ltiwhj8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323690
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) return 1;\n  if (n % 2 == 0) {\n    let t = modp(n / 2, p);\n    return\
    \ (t * t) % p;\n  } else {\n    return (modp(n - 1, p) * n) % p;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpahu2t6ms.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpahu2t6ms.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323691
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n < 0) {\n    return p - modp(-n, p);\n  }\n  if (n < p) {\n    return n;\n\
    \  }\n  if (n % p === 0) {\n    return 0;\n  }\n  return modp(n % p, p);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwk6_lkyi.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwk6_lkyi.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323691
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n === 0) {\n        return\
    \ 1;\n    }\n    if (n % 2 === 0) {\n        return modp(n / 2, p) ** 2 % p;\n\
    \    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx56249oa.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx56249oa.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if\
    \ (n < 2 * p) {\n        return n % p;\n    }\n    return modp(n % p, p) + p *\
    \ modp(Math.floor(n / p), p);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1101\n\nshould\
    \ loosely deep-equal\n\n2\n    at test (/tmp/tmp44xrvht6.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp44xrvht6.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1101,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n === 1) {\n    return n;\n  }\n  if\
    \ (n % 2 === 0) {\n    return modp(n / 2, p) ** 2 % p;\n  }\n  return modp(n -\
    \ 1, p) * n % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsi1oqbu2.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsi1oqbu2.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n < p) {\n        return\
    \ n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if (n < 2 *\
    \ p) {\n        return n % p;\n    }\n    return modp(n % p, p) + p * modp(Math.floor(n\
    \ / p), p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1101\n\nshould\
    \ loosely deep-equal\n\n2\n    at test (/tmp/tmpaz2pv9uc.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaz2pv9uc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1101,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) return 1;\n  if (n % 2 === 0) {\n    const t = modp(n / 2, p);\n \
    \   return t * t % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp55jp6uqz.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp55jp6uqz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323693
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    return\
    \ modp(n % p, p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9ltiwhj8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ltiwhj8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323690
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1mkf9aj5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkf9aj5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return Math.pow(modp(n\
    \ / 2, p), 2) % p;\n  }\n  return (n % p) * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkvv8_xu3.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkvv8_xu3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if\
    \ (n < 2 * p) {\n        return n % p;\n    }\n    if (n % 2 === 0) {\n      \
    \  return (2 * modp(n / 2, p)) % p;\n    }\n    return (2 * modp((n - p) / 2,\
    \ p) + p) % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp01dgc4ew.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp01dgc4ew.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323693
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) * modp(n / 2, p) % p;\n    }\n    return modp(n - 1, p) * modp(n,\
    \ p) % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpsfwia78o.js:13\n    if (n == 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpsfwia78o.js:13:5)\n    at modp\
    \ (/tmp/tmpsfwia78o.js:19:12)\n    at modp (/tmp/tmpsfwia78o.js:19:29)\n    at\
    \ modp (/tmp/tmpsfwia78o.js:19:29)\n    at modp (/tmp/tmpsfwia78o.js:19:29)\n\
    \    at modp (/tmp/tmpsfwia78o.js:19:29)\n    at modp (/tmp/tmpsfwia78o.js:19:29)\n\
    \    at modp (/tmp/tmpsfwia78o.js:19:29)\n    at modp (/tmp/tmpsfwia78o.js:19:29)\n\
    \    at modp (/tmp/tmpsfwia78o.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323694
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n < 0) {\n    return p - modp(-n, p);\n  }\n  if (n < p) {\n    return n;\n\
    \  }\n  if (n % p === 0) {\n    return 0;\n  }\n  return modp(n % p, p);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwk6_lkyi.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwk6_lkyi.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323691
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) return 1;\n    if (n % 2 == 0) {\n        var t = modp(n / 2, p);\n\
    \        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprft_oe7z.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprft_oe7z.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323694
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (p === 1) {\n        return 0;\n    }\n    if (n === 0) {\n        return 1;\n\
    \    }\n    if (n % 2 === 0) {\n        return modp(n / 2, p) ** 2 % p;\n    }\n\
    \    return modp(n - 1, p) * modp(n, p) % p;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpvmnwa668.js:13\n    if (p === 1) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpvmnwa668.js:13:5)\n    at modp\
    \ (/tmp/tmpvmnwa668.js:22:12)\n    at modp (/tmp/tmpvmnwa668.js:22:29)\n    at\
    \ modp (/tmp/tmpvmnwa668.js:22:29)\n    at modp (/tmp/tmpvmnwa668.js:22:29)\n\
    \    at modp (/tmp/tmpvmnwa668.js:22:29)\n    at modp (/tmp/tmpvmnwa668.js:22:29)\n\
    \    at modp (/tmp/tmpvmnwa668.js:22:29)\n    at modp (/tmp/tmpvmnwa668.js:22:29)\n\
    \    at modp (/tmp/tmpvmnwa668.js:22:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323695
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * modp(n, p) % p;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpocreyhm2.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpocreyhm2.js:13:5)\n    at modp\
    \ (/tmp/tmpocreyhm2.js:19:12)\n    at modp (/tmp/tmpocreyhm2.js:19:29)\n    at\
    \ modp (/tmp/tmpocreyhm2.js:19:29)\n    at modp (/tmp/tmpocreyhm2.js:19:29)\n\
    \    at modp (/tmp/tmpocreyhm2.js:19:29)\n    at modp (/tmp/tmpocreyhm2.js:19:29)\n\
    \    at modp (/tmp/tmpocreyhm2.js:19:29)\n    at modp (/tmp/tmpocreyhm2.js:19:29)\n\
    \    at modp (/tmp/tmpocreyhm2.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323695
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        n = n + p;\n    }\n    if (n === 0) {\n        return 1;\n\
    \    }\n    if (n === 1) {\n        return n;\n    }\n    if (n % 2 === 0) {\n\
    \        return Math.pow(modp(n / 2, p), 2) % p;\n    }\n    if (n % 2 === 1)\
    \ {\n        return (2 * modp(n - 1, p)) % p;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpxp2jy47y.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxp2jy47y.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323695
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) {\n    return 1;\n  }\n  if (n % 2 == 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * modp(n, p) % p;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7t42gne3.js:13\n    if (n == 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmp7t42gne3.js:13:5)\n    at modp\
    \ (/tmp/tmp7t42gne3.js:19:12)\n    at modp (/tmp/tmp7t42gne3.js:19:29)\n    at\
    \ modp (/tmp/tmp7t42gne3.js:19:29)\n    at modp (/tmp/tmp7t42gne3.js:19:29)\n\
    \    at modp (/tmp/tmp7t42gne3.js:19:29)\n    at modp (/tmp/tmp7t42gne3.js:19:29)\n\
    \    at modp (/tmp/tmp7t42gne3.js:19:29)\n    at modp (/tmp/tmp7t42gne3.js:19:29)\n\
    \    at modp (/tmp/tmp7t42gne3.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323695
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) return 1;\n    if (n % 2 == 0) {\n        var t = modp(n / 2, p);\n\
    \        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprft_oe7z.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprft_oe7z.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323694
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9yoy5a1j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9yoy5a1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (p === 0) {\n        return 1;\n    }\n    if (n === 0) {\n        return 0;\n\
    \    }\n    if (n % 2 === 0) {\n        return modp(n / 2, p) ** 2 % p;\n    }\n\
    \    return modp(n - 1, p) * n % p;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcwvzzj5m.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcwvzzj5m.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323696
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n < p) {\n        return\
    \ n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if (n < 2 *\
    \ p) {\n        return n % p;\n    }\n    if (n % 2 === 0) {\n        return modp(n\
    \ / 2, p) * 2 % p;\n    }\n    return modp(n / 2, p) * 2 % p + 1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n98\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsi3d9h48.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsi3d9h48.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 98,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323688
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) return 1;\n    if (n % 2 === 0) {\n        const r = modp(n / 2, p);\n\
    \        return r * r % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprh9js_nn.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprh9js_nn.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323697
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) return 1;\n  if (n % 2 === 0) {\n    return modp(n / 2, p) ** 2 %\
    \ p;\n  } else {\n    return modp(n - 1, p) * n % p;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7esx7hpn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7esx7hpn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * modp(n, p) % p;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaek34yza.js:13\n    if (n === 0) {\n    ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at modp (/tmp/tmpaek34yza.js:13:5)\n    at modp\
    \ (/tmp/tmpaek34yza.js:19:12)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n    at\
    \ modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n    at modp (/tmp/tmpaek34yza.js:19:29)\n\
    \    at modp (/tmp/tmpaek34yza.js:19:29)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323684
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) return 1;\n  if (n % 2 === 0) {\n    return modp(n / 2, p) ** 2 %\
    \ p;\n  } else {\n    return modp(n - 1, p) * n % p;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7esx7hpn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7esx7hpn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n === 1) {\n    return n;\n  }\n  if\
    \ (n % 2 === 0) {\n    return Math.pow(modp(n / 2, p), 2) % p;\n  }\n  return\
    \ (n * modp(n - 1, p)) % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpi8gdek3c.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi8gdek3c.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323697
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    return\
    \ modp(n % p, p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9ltiwhj8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ltiwhj8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323690
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return n * modp(n - 1, p) % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjhbc2oel.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjhbc2oel.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy9psmued.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9psmued.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) {\n    return 1;\n  }\n  if (n % 2 == 0) {\n    return modp(n / 2,\
    \ p) ** 2 % p;\n  }\n  return modp(n - 1, p) * n % p;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpufqlwiwz.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpufqlwiwz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323686
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return Math.pow(modp(n\
    \ / 2, p), 2) % p;\n  }\n  return (n % p) * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkvv8_xu3.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkvv8_xu3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 0
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    let\
    \ result = 1;\n    for (let i = 0; i < n; i++) {\n        result = (result * 2)\
    \ % p;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660323697
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) return 1;\n    if (n % 2 === 0) {\n        const t = modp(n / 2, p);\n\
    \        return t * t % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpm9d1l5kw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm9d1l5kw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323698
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n === 0) {\n        return\
    \ 1;\n    }\n    if (n % 2 === 0) {\n        return modp(n / 2, p) ** 2 % p;\n\
    \    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx56249oa.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx56249oa.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return p - modp(-n, p);\n    }\n    if (n < p) {\n      \
    \  return n;\n    }\n    return modp(n % p, p);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n91\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfgsr14yx.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfgsr14yx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 91,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323689
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) return 1;\n    if (n % 2 === 0) {\n        const x = modp(n / 2, p);\n\
    \        return (x * x) % p;\n    } else {\n        return (modp(n - 1, p) * n)\
    \ % p;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprvh0ygks.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprvh0ygks.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323698
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n < 0) {\n        return modp(-n, p);\n    }\n    if (n < p) {\n        return\
    \ n;\n    }\n    if (n % p === 0) {\n        return 0;\n    }\n    if (n < 2 *\
    \ p) {\n        return n % p;\n    }\n    return modp(n % p, p) + p * modp(Math.floor(n\
    \ / p), p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1101\n\nshould\
    \ loosely deep-equal\n\n2\n    at test (/tmp/tmpaz2pv9uc.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaz2pv9uc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1101,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323692
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return n * modp(n - 1, p) % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_re748pq.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_re748pq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n  if\
    \ (n == 0) return 1;\n  if (n % 2 == 0) {\n    let t = modp(n / 2, p);\n    return\
    \ t * t % p;\n  } else {\n    return n * modp(n - 1, p) % p;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpe5jgt94s.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe5jgt94s.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323699
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ Math.pow(modp(n / 2, p), 2) % p;\n    }\n    return (n % p) * modp(n - 1, p)\
    \ % p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp92ovthqw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp92ovthqw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323683
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681
- exit_code: 1
  program: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
    // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
    // 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n: any, p: any): any {\n    if\
    \ (n === 0) {\n        return 1;\n    }\n    if (n % 2 === 0) {\n        return\
    \ modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n - 1, p) * n % p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgw81iiip.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgw81iiip.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660323681

name: HumanEval_70_strange_sort_list
language: ts
prompt: "//Given array of integers, return array in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\n// >>> strange_sort_list([1, 2, 3, 4])\n\
  // [1, 4, 2, 3]\n// >>> strange_sort_list([5, 5, 5, 5])\n// [5, 5, 5, 5]\n// >>>\
  \ strange_sort_list([])\n// []\nfunction strange_sort_list(lst: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = strange_sort_list;\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 4, 2, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9,\
  \ 6, 8, 7]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1, 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5,\
  \ 5, 5, 5]),[5, 5, 5, 5]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0,\
  \ 2, 2, 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    if (lst.length == 0) {\n        return lst;\n    }\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n\
    \    let max_index = lst.indexOf(max);\n    let new_list = [];\n    new_list.push(min);\n\
    \    new_list.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    let new_min = Math.min(...lst);\n    let new_max = Math.max(...lst);\n\
    \    let new_min_index = lst.indexOf(new_min);\n    let new_max_index = lst.indexOf(new_max);\n\
    \    new_list.push(new_min);\n    new_list.push(new_max);\n    lst.splice(new_min_index,\
    \ 1);\n    lst.splice(new_max_index - 1, 1);\n    return new_list;\n}\n", "  \
    \  if (lst.length === 0) {\n        return [];\n    }\n    let result = [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex\
    \ = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return result.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let sorted_list = [];\n    let min_index = 0;\n\
    \    let max_index = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < lst[min_index]) {\n            min_index = i;\n        }\n       \
    \ if (lst[i] > lst[max_index]) {\n            max_index = i;\n        }\n    }\n\
    \    sorted_list.push(lst[min_index]);\n    sorted_list.push(lst[max_index]);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ sorted_list.concat(strange_sort_list(lst));\n}\n", "    let result: any = [];\n\
    \    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_count: number = 0;\n    let max_count: number = 0;\n    let min_flag:\
    \ boolean = true;\n    let max_flag: boolean = true;\n    for (let i: number =\
    \ 0; i < lst.length; i++) {\n        if (min_flag) {\n            result.push(min);\n\
    \            min_count++;\n            min_flag = false;\n        } else if (max_flag)\
    \ {\n            result.push(max);\n            max_count++;\n            max_flag\
    \ = false;\n        }\n        if (min_count === min_index) {\n            min_flag\
    \ = true;\n        }\n        if (max_count === max_index) {\n            max_flag\
    \ = true;\n        }\n    }\n    return result;\n}\n", "    if (lst.length ===\
    \ 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        result.push(min);\n        lst.splice(lst.indexOf(min), 1);\n   \
    \     if (lst.length === 0) {\n            break;\n        }\n        result.push(max);\n\
    \        lst.splice(lst.indexOf(max), 1);\n        min = Math.min(...lst);\n \
    \       max = Math.max(...lst);\n        i += 2;\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let res: any\
    \ = [];\n    let min: any = Math.min(...lst);\n    let max: any = Math.max(...lst);\n\
    \    let min_index: any = lst.indexOf(min);\n    let max_index: any = lst.indexOf(max);\n\
    \    res.push(min);\n    res.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    while (lst.length > 0) {\n        let min: any = Math.min(...lst);\n\
    \        let max: any = Math.max(...lst);\n        let min_index: any = lst.indexOf(min);\n\
    \        let max_index: any = lst.indexOf(max);\n        res.push(min);\n    \
    \    res.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index,\
    \ 1);\n    }\n    return res;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n       \
    \ new_lst.push(min);\n        new_lst.push(max);\n        i += 2;\n    }\n   \
    \ return new_lst;\n}\n\nconsole.log(strange_sort_list([1, 2, 3, 4]));\nconsole.log(strange_sort_list([5,\
    \ 5, 5, 5]));\nconsole.log(strange_sort_list([]));", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    let sorted =\
    \ lst.sort((a, b) => a - b);\n    let result = [];\n    while (sorted.length >\
    \ 0) {\n        result.push(sorted.shift());\n        if (sorted.length > 0) {\n\
    \            result.push(sorted.pop());\n        }\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let sorted =\
    \ lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let j\
    \ = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted_list = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    while (sorted_list.length > 0) {\n      \
    \  result.push(sorted_list.shift());\n        if (sorted_list.length > 0) {\n\
    \            result.push(sorted_list.pop());\n        }\n    }\n    return result;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = lst[0];\n    let max = lst[0];\n    let minIndex = 0;\n\
    \    let maxIndex = 0;\n    let newList = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n           \
    \ maxIndex = i;\n        }\n        if (lst[i] < min) {\n            min = lst[i];\n\
    \            minIndex = i;\n        }\n    }\n    newList.push(min);\n    newList.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return newList.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let min_index = lst.indexOf(min);\n\
    \    let max_index = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (lst.length > 0) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    let i = 0;\n    while (i < lst.length) {\n        if (i %\
    \ 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_count: number = 0;\n    let max_count: number = 0;\n    for (let\
    \ i: number = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n         \
    \   result.push(min);\n            min_count++;\n        } else {\n          \
    \  result.push(max);\n            max_count++;\n        }\n    }\n    return result;\n\
    }\n", "    let new_lst = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index, 1);\n    if (lst.length > 0) {\n        let min = Math.min(...lst);\n\
    \        let max = Math.max(...lst);\n        let min_index = lst.indexOf(min);\n\
    \        let max_index = lst.indexOf(max);\n        new_lst.push(min);\n     \
    \   new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index,\
    \ 1);\n    }\n    return new_lst;\n}\n", "    let min = Math.min(...lst);\n  \
    \  let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (i < lst.length) {\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        i += 2;\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let sorted_list = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    sorted_list.push(min);\n    sorted_list.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ sorted_list.concat(strange_sort_list(lst));\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex =\
    \ lst.indexOf(max);\n    let newLst = [];\n    newLst.push(min);\n    newLst.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let result\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n  \
    \  let minLst = lst.slice(0, minIndex);\n    let maxLst = lst.slice(minIndex +\
    \ 1, maxIndex);\n    let restLst = lst.slice(maxIndex + 1);\n    result.push(min);\n\
    \    result.push(max);\n    result = result.concat(strange_sort_list(minLst));\n\
    \    result = result.concat(strange_sort_list(maxLst));\n    result = result.concat(strange_sort_list(restLst));\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let lst_copy = lst.slice();\n    let result = [];\n    let min = Math.min(...lst_copy);\n\
    \    let max = Math.max(...lst_copy);\n    let min_index = lst_copy.indexOf(min);\n\
    \    let max_index = lst_copy.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index, 1);\n    while\
    \ (lst_copy.length > 0) {\n        min = Math.min(...lst_copy);\n        max =\
    \ Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n       \
    \ max_index = lst_copy.indexOf(max);\n        result.push(min);\n        result.push(max);\n\
    \        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index, 1);\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n       \
    \ new_lst.push(min);\n        new_lst.push(max);\n        i += 2;\n    }\n   \
    \ return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n  \
    \  }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    let\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted_list\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    sorted_list.push(min);\n    sorted_list.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return sorted_list.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let res = [];\n    let i = 0;\n    while\
    \ (res.length < lst.length) {\n        if (i % 2 == 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst\
    \ = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0)\
    \ {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_lst = [min];\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    new_lst.push(max);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        new_lst.push(min);\n        lst.splice(min_index, 1);\n        new_lst.push(max);\n\
    \        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}\n", "  \
    \  if (lst.length === 0) {\n        return [];\n    }\n    let sorted_list = [];\n\
    \    let sorted_lst = lst.sort((a, b) => a - b);\n    let i = 0;\n    while (sorted_lst.length\
    \ > 0) {\n        if (i % 2 === 0) {\n            sorted_list.push(sorted_lst.shift());\n\
    \        } else {\n            sorted_list.push(sorted_lst.pop());\n        }\n\
    \        i++;\n    }\n    return sorted_list;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        result.push(min);\n        result.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    const min = Math.min(...lst);\n\
    \    const max = Math.max(...lst);\n    const min_index = lst.indexOf(min);\n\
    \    const max_index = lst.indexOf(max);\n    const new_lst = [min];\n    if (min_index\
    \ < max_index) {\n        new_lst.push(max);\n        new_lst.push(...strange_sort_list(lst.slice(min_index\
    \ + 1, max_index)));\n        new_lst.push(...strange_sort_list(lst.slice(max_index\
    \ + 1)));\n    } else {\n        new_lst.push(...strange_sort_list(lst.slice(min_index\
    \ + 1)));\n        new_lst.push(max);\n        new_lst.push(...strange_sort_list(lst.slice(0,\
    \ max_index)));\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let\
    \ maxIndex = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    if (min_index !== max_index) {\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  } else {\n        result.push(min);\n        lst.splice(min_index, 1);\n  \
    \  }\n    if (lst.length > 0) {\n        result = result.concat(strange_sort_list(lst));\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    const sorted = lst.sort((a, b) => a - b);\n    const res = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i < j) {\n       \
    \ res.push(sorted[i]);\n        res.push(sorted[j]);\n        i++;\n        j--;\n\
    \    }\n    if (i === j) {\n        res.push(sorted[i]);\n    }\n    return res;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (lst.length\
    \ > 0) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n       \
    \     lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n  \
    \  let i = 0;\n    let j = sorted.length - 1;\n    while (i < j) {\n        result.push(sorted[i]);\n\
    \        result.push(sorted[j]);\n        i++;\n        j--;\n    }\n    if (i\
    \ === j) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\n",
  "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    let result = [];\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let left = 0;\n    let right = sorted.length - 1;\n    while\
    \ (left <= right) {\n        result.push(sorted[left]);\n        left++;\n   \
    \     if (left <= right) {\n            result.push(sorted[right]);\n        \
    \    right--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let min_index = lst.indexOf(min);\n\
    \    let max_index = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [min];\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    new_lst.push(max);\n    if (lst.length === 0) {\n        return\
    \ new_lst;\n    }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", " \
    \   if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [min];\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length > 0) {\n     \
    \   min = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n        new_lst.push(max);\n\
    \        new_lst.push(min);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    }\n    return new_lst;\n}\n", "    if (lst.length == 0) {\n  \
    \      return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var max\
    \ = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_list = [];\n    new_list.push(min);\n\
    \    new_list.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_list.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_list = [];\n    let new_list_2 =\
    \ [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === min)\
    \ {\n            new_list.push(lst[i]);\n        } else {\n            new_list_2.push(lst[i]);\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ === max) {\n            new_list.push(lst[i]);\n        }\n    }\n    for (let\
    \ i = 0; i < new_list_2.length; i++) {\n        if (new_list_2[i] !== max) {\n\
    \            new_list.push(new_list_2[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result: any = [];\n    let i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n  \
    \  }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    let newList:\
    \ any = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let minIndex: number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n\
    \    let minValue: number = lst[minIndex];\n    let maxValue: number = lst[maxIndex];\n\
    \    if (lst.length === 0) {\n        return [];\n    }\n    if (lst.length ===\
    \ 1) {\n        return lst;\n    }\n    if (lst.length === 2) {\n        return\
    \ [min, max];\n    }\n    if (lst.length === 3) {\n        return [min, max, lst[2]];\n\
    \    }\n    if (lst.length === 4) {\n        return [min, max, lst[2], lst[3]];\n\
    \    }\n    if (lst.length === 5) {\n        return [min, max, lst[2], lst[3],\
    \ lst[4]];\n    }\n    if (lst.length === 6) {\n        return [min, max, lst[2],\
    \ lst[3], lst[4], lst[5]];\n    }\n    if (lst.length === 7) {\n        return\
    \ [min, max, lst[2], lst[3], lst[4], lst[5], lst[6]];\n    }\n    if (lst.length\
    \ === 8) {\n        return [min, max, lst[2], lst[3], lst[4], lst[5], lst[6],\
    \ lst[7]];\n    }\n    if (lst.length === 9) {\n        return [min, max, lst[2],\
    \ lst[3], lst[4], lst[5], lst[6], lst[7], lst[8]];\n    }\n    if (lst.length\
    \ === 10) {\n        return [min, max, lst[2], lst[3], lst[4], lst[5], lst", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (i < lst.length) {\n        result.push(min);\n        result.push(max);\n \
    \       i += 2;\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i\
    \ < lst.length) {\n        result.push(min);\n        result.push(max);\n    \
    \    i += 2;\n    }\n    return result;\n}\n\nconsole.log(strange_sort_list([1,\
    \ 2, 3, 4]));\nconsole.log(strange_sort_list([5, 5, 5, 5]));\nconsole.log(strange_sort_list([]));\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    let new_lst: number[] = [];\n\
    \    let new_lst_index: number = 0;\n    let lst_index: number = 0;\n    while\
    \ (new_lst_index < lst.length) {\n        if (lst_index === min_index) {\n   \
    \         new_lst[new_lst_index] = min;\n            new_lst_index++;\n      \
    \      lst_index++;\n        } else if (lst_index === max_index) {\n         \
    \   new_lst[new_lst_index] = max;\n            new_lst_index++;\n            lst_index++;\n\
    \        } else {\n            lst_index++;\n        }\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let result:\
    \ any = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_max_lst: any = lst.slice(min_index, max_index + 1);\n    let max_min_lst:\
    \ any = lst.slice(max_index, min_index + 1);\n    let min_max_lst_sorted: any\
    \ = min_max_lst.sort((a: number, b: number) => a - b);\n    let max_min_lst_sorted:\
    \ any = max_min_lst.sort((a: number, b: number) => b - a);\n    let min_max_lst_sorted_reversed:\
    \ any = min_max_lst_sorted.reverse();\n    let max_min_lst_sorted_reversed: any\
    \ = max_min_lst_sorted.reverse();\n    let min_max_lst_sorted_reversed_result:\
    \ any = [];\n    let max_min_lst_sorted_reversed_result: any = [];\n    for (let\
    \ i: number = 0; i < min_max_lst_sorted_reversed.length; i++) {\n        if (i\
    \ % 2 === 0) {\n            min_max_lst_sorted_reversed_result.push(min_max_lst_sorted_reversed[i]);\n\
    \        }\n    }\n    for (let i: number = 0; i < max_min_lst_sorted_reversed.length;\
    \ i++) {\n        if (i % 2 === 0) {\n            max_min_lst_sorted_reversed_result.push(max_min_lst_sorted_reversed[i]);\n\
    \        }\n    }\n    for (let i: number = 0; i < min_max_", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    let lst_sorted = lst.sort((a, b) => a - b);\n\
    \    let lst_strange = [];\n    let i = 0;\n    let j = lst_sorted.length - 1;\n\
    \    while (i <= j) {\n        lst_strange.push(lst_sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            lst_strange.push(lst_sorted[j]);\n       \
    \     j--;\n        }\n    }\n    return lst_strange;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted_list = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_list.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_list[j]);\n           \
    \ j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    let newLst = [];\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            newLst.push(min);\n            lst.splice(minIndex,\
    \ 1);\n            min = Math.min(...lst);\n            minIndex = lst.indexOf(min);\n\
    \        } else {\n            newLst.push(max);\n            lst.splice(maxIndex,\
    \ 1);\n            max = Math.max(...lst);\n            maxIndex = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return newLst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n      \
    \  result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let result = [];\n    let min = lst[0];\n\
    \    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < min) {\n            min = lst[i];\n        }\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    let temp = lst.slice();\n\
    \    let min_index = temp.indexOf(min);\n    let max_index = temp.indexOf(max);\n\
    \    temp.splice(min_index, 1);\n    temp.splice(max_index - 1, 1);\n    result.push(min);\n\
    \    result.push(max);\n    return result.concat(strange_sort_list(temp));\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let new_lst = [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(lst.indexOf(min), 1);\n    lst.splice(lst.indexOf(max),\
    \ 1);\n    if (lst.length === 0) {\n        return new_lst;\n    }\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let newLst = [];\n    let i = 0;\n    while (i < lst.length) {\n        newLst.push(min);\n\
    \        newLst.push(max);\n        i++;\n    }\n    return newLst;\n}\nconsole.log(strange_sort_list([1,\
    \ 2, 3, 4]));\nconsole.log(strange_sort_list([5, 5, 5, 5]));\nconsole.log(strange_sort_list([]));\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min = lst[0];\n\
    \    let max = lst[0];\n    let min_index = 0;\n    let max_index = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n          \
    \  min = lst[i];\n            min_index = i;\n        }\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n            max_index = i;\n        }\n \
    \   }\n    let result = [];\n    result.push(min);\n    result.push(max);\n  \
    \  lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    let odd =\
    \ true;\n    while (lst.length > 0) {\n        if (odd) {\n            let min\
    \ = lst[0];\n            let min_index = 0;\n            for (let i = 0; i < lst.length;\
    \ i++) {\n                if (lst[i] < min) {\n                    min = lst[i];\n\
    \                    min_index = i;\n                }\n            }\n      \
    \      result.push(min);\n            lst.splice(min_index, 1);\n            odd\
    \ = false;\n        } else {\n            let max = lst[0];\n            let max_index\
    \ = 0;\n            for (let i = 0; i < lst.length; i++) {\n                if\
    \ (lst[i] > max) {\n                    max = lst[i];\n                    max_index\
    \ = i;\n                }\n            }\n            result.push(max);\n    \
    \        lst.splice(max_index, 1);\n            odd = true;\n        }\n    }\n\
    \    return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    let lst_copy = lst.slice();\n    let result = [];\n    let min = Math.min(...lst_copy);\n\
    \    let max = Math.max(...lst_copy);\n    let min_index = lst_copy.indexOf(min);\n\
    \    let max_index = lst_copy.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index - 1, 1);\n\
    \    while (lst_copy.length > 0) {\n        min = Math.min(...lst_copy);\n   \
    \     max = Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        result.push(min);\n     \
    \   result.push(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index\
    \ - 1, 1);\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ [min, max, ...strange_sort_list(lst)];\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (result.length < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    if (lst.length == 0) {\n        return\
    \ result;\n    }\n    return result.concat(strange_sort_list(lst));\n}\n", " \
    \   let new_lst = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0) {\n  \
    \          new_lst.push(min);\n            lst.splice(min_index, 1);\n       \
    \     min = Math.min(...lst);\n            min_index = lst.indexOf(min);\n   \
    \     } else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max(...lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    new_lst.push(min);\n   \
    \ new_lst.push(max);\n    lst.splice(lst.indexOf(min), 1);\n    lst.splice(lst.indexOf(max),\
    \ 1);\n    while (lst.length > 0) {\n        min = Math.min(...lst);\n       \
    \ max = Math.max(...lst);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        lst.splice(lst.indexOf(max),\
    \ 1);\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n      \
    \  return [];\n    }\n    let sorted_lst = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted_lst.length - 1;\n    while\
    \ (i <= j) {\n        result.push(sorted_lst[i]);\n        i++;\n        if (i\
    \ <= j) {\n            result.push(sorted_lst[j]);\n            j--;\n       \
    \ }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i < j) {\n       \
    \ result.push(sorted[i]);\n        result.push(sorted[j]);\n        i++;\n   \
    \     j--;\n    }\n    if (i === j) {\n        result.push(sorted[i]);\n    }\n\
    \    return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n        if (i %\
    \ 2 == 0) {\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min(...lst);\n            min_index = lst.indexOf(min);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max(...lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    let new_lst: any = [];\n \
    \   new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let min = lst[0];\n\
    \    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < min) {\n            min = lst[i];\n        }\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    let new_lst = [];\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_max = [min, max];\n    new_lst.push(min_max[0]);\n    new_lst.push(min_max[1]);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    if (lst.length\
    \ == 0) {\n        return new_lst;\n    }\n    let new_min = lst[0];\n    let\
    \ new_max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < new_min) {\n            new_min = lst[i];\n        }\n        if (lst[i] >\
    \ new_max) {\n            new_max = lst[i];\n        }\n    }\n    let new_min_index\
    \ = lst.indexOf(new_min);\n    let new_max_index = lst.indexOf(new_max);\n   \
    \ let new_min_max = [new_min, new_max];\n    new_lst.push(new_min_max[0]);\n \
    \   new_lst.push(new_min_max[1]);\n    lst.splice(new_min_index, 1);\n    lst.splice(new_max_index\
    \ - 1, 1);\n    if (lst.length == 0) {\n        return new_lst;\n    }\n    let\
    \ new_new_min = lst[0];\n   ", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted_list = [];\n    let sorted_lst = lst.sort((a, b) => a -\
    \ b);\n    let i = 0;\n    while (sorted_lst.length > 0) {\n        sorted_list.push(sorted_lst[i]);\n\
    \        sorted_lst.splice(i, 1);\n        if (sorted_lst.length === 0) {\n  \
    \          break;\n        }\n        sorted_list.push(sorted_lst[sorted_lst.length\
    \ - 1]);\n        sorted_lst.splice(sorted_lst.length - 1, 1);\n    }\n    return\
    \ sorted_list;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n\
    \    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n\
    \    result.push(min);\n    result.push(max);\n    lst.splice(minIndex, 1);\n\
    \    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let res: any\
    \ = [];\n    let min: any = Math.min(...lst);\n    let max: any = Math.max(...lst);\n\
    \    let minIndex: any = lst.indexOf(min);\n    let maxIndex: any = lst.indexOf(max);\n\
    \    res.push(min);\n    res.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return res.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(lst.indexOf(min), 1);\n    lst.splice(lst.indexOf(max), 1);\n\
    \    while (lst.length > 0) {\n        min = Math.min(...lst);\n        max =\
    \ Math.max(...lst);\n        result.push(min);\n        result.push(max);\n  \
    \      lst.splice(lst.indexOf(min), 1);\n        lst.splice(lst.indexOf(max),\
    \ 1);\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    let sorted_list = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted_list.length - 1;\n    while\
    \ (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n        if (i\
    \ <= j) {\n            result.push(sorted_list[j]);\n            j--;\n      \
    \  }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index, 1);\n    while (lst.length > 0) {\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n \
    \   let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let sorted =\
    \ lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let j\
    \ = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let min = lst[0];\n    let max = lst[0];\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n   \
    \         min = lst[i];\n        }\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    let result = [min];\n    let temp = lst.slice();\n\
    \    temp.splice(temp.indexOf(min), 1);\n    let flag = true;\n    while (temp.length\
    \ > 0) {\n        if (flag) {\n            let max = temp[0];\n            for\
    \ (let i = 0; i < temp.length; i++) {\n                if (temp[i] > max) {\n\
    \                    max = temp[i];\n                }\n            }\n      \
    \      result.push(max);\n            temp.splice(temp.indexOf(max), 1);\n   \
    \         flag = false;\n        } else {\n            let min = temp[0];\n  \
    \          for (let i = 0; i < temp.length; i++) {\n                if (temp[i]\
    \ < min) {\n                    min = temp[i];\n                }\n          \
    \  }\n            result.push(min);\n            temp.splice(temp.indexOf(min),\
    \ 1);\n            flag = true;\n        }\n    }\n    return result;\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    if (lst.length === 1) {\n        return lst;\n    }\n    let result:\
    \ any = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let minIndex: number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n\
    \    let minArr: any = lst.slice(0, minIndex);\n    let maxArr: any = lst.slice(minIndex\
    \ + 1, maxIndex);\n    let minArr2: any = lst.slice(maxIndex + 1);\n    result.push(min);\n\
    \    result.push(max);\n    result = result.concat(strange_sort_list(minArr));\n\
    \    result = result.concat(strange_sort_list(maxArr));\n    result = result.concat(strange_sort_list(minArr2));\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let new_lst = [];\n    let new_lst_2 = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === min) {\n            new_lst.push(lst[i]);\n \
    \       } else {\n            new_lst_2.push(lst[i]);\n        }\n    }\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n        \
    \    new_lst.push(lst[i]);\n        }\n    }\n    for (let i = 0; i < new_lst_2.length;\
    \ i++) {\n        if (new_lst_2[i] !== max) {\n            new_lst.push(new_lst_2[i]);\n\
    \        }\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n \
    \       return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    let sorted_lst = lst.sort((a, b) => a - b);\n    let result = [];\n \
    \   let i = 0;\n    let j = sorted_lst.length - 1;\n    while (i <= j) {\n   \
    \     result.push(sorted_lst[i]);\n        i++;\n        if (i <= j) {\n     \
    \       result.push(sorted_lst[j]);\n            j--;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n   \
    \ let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n\
    \    result.push(min);\n    result.push(max);\n    lst.splice(minIndex, 1);\n\
    \    lst.splice(maxIndex - 1, 1);\n    if (lst.length === 0) {\n        return\
    \ result;\n    }\n    return result.concat(strange_sort_list(lst));\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (i < lst.length) {\n        result.push(min);\n\
    \        result.push(max);\n        i += 2;\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    lst.sort(function (a, b) {\n        return a - b;\n    });\n    let\
    \ res = [];\n    let i = 0;\n    let j = lst.length - 1;\n    while (i <= j) {\n\
    \        res.push(lst[i]);\n        i++;\n        if (i <= j) {\n            res.push(lst[j]);\n\
    \            j--;\n        }\n    }\n    return res;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (lst.length\
    \ > 0) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n       \
    \     lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n \
    \   let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n\nconsole.log(strange_sort_list([1, 2, 3, 4]));\nconsole.log(strange_sort_list([5,\
    \ 5, 5, 5]));\nconsole.log(strange_sort_list([]));", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n\
    \    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while\
    \ (i <= j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <=\
    \ j) {\n            result.push(sorted[j]);\n            j--;\n        }\n   \
    \ }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n \
    \   let new_lst = [];\n    if (min_index < max_index) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    } else {\n        new_lst.push(max);\n        new_lst.push(min);\n\
    \        lst.splice(max_index, 1);\n        lst.splice(min_index - 1, 1);\n  \
    \  }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted_list = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_list.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_list[j]);\n           \
    \ j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let result = [min];\n    let lst_copy = lst.slice();\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index - 1, 1);\n\
    \    while (lst_copy.length > 0) {\n        min = Math.min(...lst_copy);\n   \
    \     max = Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        result.push(max);\n     \
    \   result.push(min);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index\
    \ - 1, 1);\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (new_lst.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return lst;\n\
    \    }\n    let result: any = [];\n    let min: any = Math.min(...lst);\n    let\
    \ max: any = Math.max(...lst);\n    let min_index: any = lst.indexOf(min);\n \
    \   let max_index: any = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    let new_lst:\
    \ any = strange_sort_list(lst);\n    for (let i: any = 0; i < new_lst.length;\
    \ i++) {\n        if (i % 2 == 0) {\n            result.push(new_lst[i]);\n  \
    \      } else {\n            result.unshift(new_lst[i]);\n        }\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    let\
    \ new_lst = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
    \ === 0) {\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min(...lst);\n            min_index = lst.indexOf(min);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max(...lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n \
    \       return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    while (i < sorted.length) {\n        result.push(sorted[i]);\n\
    \        if (i + 1 < sorted.length) {\n            result.push(sorted[sorted.length\
    \ - 1 - i]);\n        }\n        i += 1;\n    }\n    return result;\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let result = [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex\
    \ = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    if (minIndex\
    \ === maxIndex) {\n        result.push(min);\n        return result.concat(strange_sort_list(lst.slice(1)));\n\
    \    }\n    result.push(min);\n    result.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let newLst = [min];\n    let newLst2 = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] !== min) {\n            newLst2.push(lst[i]);\n \
    \       }\n    }\n    let min2 = Math.min(...newLst2);\n    let max2 = Math.max(...newLst2);\n\
    \    newLst.push(max2);\n    newLst.push(min2);\n    for (let i = 0; i < newLst2.length;\
    \ i++) {\n        if (newLst2[i] !== min2 && newLst2[i] !== max2) {\n        \
    \    newLst.push(newLst2[i]);\n        }\n    }\n    return newLst;\n}\n", " \
    \   if (lst.length === 0) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (new_lst.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let newArr = [];\n    let i = 0;\n    while (newArr.length < lst.length) {\n\
    \        if (i % 2 === 0) {\n            newArr.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            newArr.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return newArr;\n}\n\nconsole.log(strange_sort_list([1,\
    \ 2, 3, 4]));\nconsole.log(strange_sort_list([5, 5, 5, 5]));\nconsole.log(strange_sort_list([]));",
  "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_count = 0;\n    let max_count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (i % 2 === 0) {\n            result.push(min);\n        \
    \    min_count++;\n        } else {\n            result.push(max);\n         \
    \   max_count++;\n        }\n    }\n    return result;\n}\nconsole.log(strange_sort_list([1,\
    \ 2, 3, 4]));\nconsole.log(strange_sort_list([5, 5, 5, 5]));\nconsole.log(strange_sort_list([]));\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (lst.length !== 0) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted_list = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted_list.length - 1;\n    while (i <= j) {\n \
    \       result.push(sorted_list[i]);\n        i++;\n        if (i <= j) {\n  \
    \          result.push(sorted_list[j]);\n            j--;\n        }\n    }\n\
    \    return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n        if (i %\
    \ 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (new_lst.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n \
    \   let new_lst = [];\n    new_lst.push(min);\n    lst.splice(min_index, 1);\n\
    \    new_lst.push(max);\n    lst.splice(max_index, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n   \
    \ let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    let\
    \ newLst = [];\n    newLst.push(min);\n    newLst.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = lst.length - 1;\n   \
    \ while (i <= j) {\n        result.push(lst[i]);\n        i++;\n        if (i\
    \ <= j) {\n            result.push(lst[j]);\n            j--;\n        }\n   \
    \ }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    if (lst.length === 1) {\n        return lst;\n    }\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_list = [];\n\
    \    new_list.push(min);\n    new_list.push(max);\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] !== min && lst[i] !== max) {\n            new_list.push(lst[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "  if (lst.length === 0) {\n  \
    \  return [];\n  }\n  let sorted_list = [];\n  let min = Math.min(...lst);\n \
    \ let max = Math.max(...lst);\n  sorted_list.push(min);\n  sorted_list.push(max);\n\
    \  lst.splice(lst.indexOf(min), 1);\n  lst.splice(lst.indexOf(max), 1);\n  return\
    \ sorted_list.concat(strange_sort_list(lst));\n}\n", "    if (lst.length == 0)\
    \ {\n        return lst;\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (new_lst.length\
    \ < lst.length) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i += 1;\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        i += 2;\n    }\n    return new_lst;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (i < lst.length) {\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        i += 2;\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    let new_lst_2 = [];\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ if (lst[i] !== min && lst[i] !== max) {\n            new_lst_2.push(lst[i]);\n\
    \        }\n    }\n    return new_lst.concat(strange_sort_list(new_lst_2));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted_list\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted_list.length - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted_list[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i < j) {\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if (i === j) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted_lst = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_lst.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n   \
    \     return [];\n    }\n    let min = lst[0];\n    let max = lst[0];\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n          \
    \  min = lst[i];\n        }\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    let new_lst = [];\n    let i = 0;\n    let j = lst.length\
    \ - 1;\n    while (i < j) {\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        i++;\n        j--;\n    }\n    if (i == j) {\n        new_lst.push(min);\n\
    \    }\n    return new_lst;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let\
    \ maxIndex = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       minIndex = lst.indexOf(min);\n        maxIndex = lst.indexOf(max);\n \
    \       result.push(min);\n        result.push(max);\n        lst.splice(minIndex,\
    \ 1);\n        lst.splice(maxIndex - 1, 1);\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let result = [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex\
    \ = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return result.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let new_lst = [];\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_lst = [];\n    let new_lst_2 = [];\n    if\
    \ (min_index < max_index) {\n        new_lst = lst.slice(min_index + 1, max_index);\n\
    \        new_lst_2 = lst.slice(max_index + 1);\n    } else {\n        new_lst\
    \ = lst.slice(max_index + 1, min_index);\n        new_lst_2 = lst.slice(min_index\
    \ + 1);\n    }\n    return [min, max, ...strange_sort_list(new_lst), ...strange_sort_list(new_lst_2)];\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (result.length < lst.length) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n \
    \       if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i < j) {\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if (i == j) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    let result =\
    \ [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    let\
    \ min_count = 0;\n    let max_count = 0;\n    let min_flag = true;\n    let max_flag\
    \ = true;\n    for (let i = 0; i < lst.length; i++) {\n        if (min_flag) {\n\
    \            result.push(min);\n            min_flag = false;\n            min_count++;\n\
    \        } else if (max_flag) {\n            result.push(max);\n            max_flag\
    \ = false;\n            max_count++;\n        }\n        if (min_count === min_index)\
    \ {\n            min_flag = true;\n        }\n        if (max_count === max_index)\
    \ {\n            max_flag = true;\n        }\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let result: any = [];\n\
    \    let sorted_lst: any = lst.sort((a: any, b: any) => a - b);\n    let min_max:\
    \ any = [];\n    let min_max_index: any = 0;\n    let min_max_length: any = sorted_lst.length;\n\
    \    for (let i: any = 0; i < sorted_lst.length; i++) {\n        if (i % 2 ===\
    \ 0) {\n            min_max.push(sorted_lst[min_max_index]);\n            min_max_index++;\n\
    \        } else {\n            min_max.push(sorted_lst[min_max_length - 1]);\n\
    \            min_max_length--;\n        }\n    }\n    return min_max;\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (i < lst.length) {\n        result.push(min);\n\
    \        result.push(max);\n        i += 2;\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let result: any = [];\n    let i:\
    \ number = 0;\n    while (lst.length !== 0) {\n        if (i % 2 === 0) {\n  \
    \          result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n \
    \           min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let new_lst = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    let sorted_list = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_list.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_list[j]);\n           \
    \ j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let result = [];\n    let temp = lst.slice();\n\
    \    let min = Math.min(...temp);\n    let max = Math.max(...temp);\n    let minIndex\
    \ = temp.indexOf(min);\n    let maxIndex = temp.indexOf(max);\n    while (temp.length\
    \ > 0) {\n        if (temp.length % 2 === 0) {\n            result.push(min);\n\
    \            temp.splice(minIndex, 1);\n            min = Math.min(...temp);\n\
    \            minIndex = temp.indexOf(min);\n        } else {\n            result.push(max);\n\
    \            temp.splice(maxIndex, 1);\n            max = Math.max(...temp);\n\
    \            maxIndex = temp.indexOf(max);\n        }\n    }\n    return result;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let newLst = [];\n    newLst.push(min);\n\
    \    newLst.push(max);\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] !== min && lst[i] !== max) {\n            newLst.push(lst[i]);\n   \
    \     }\n    }\n    return newLst;\n}\n", "    if (lst.length === 0) {\n     \
    \   return [];\n    }\n    let result: any = [];\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    let min_count: number = 0;\n\
    \    let max_count: number = 0;\n    let min_flag: boolean = true;\n    let max_flag:\
    \ boolean = true;\n    while (min_count < lst.length && max_count < lst.length)\
    \ {\n        if (min_flag) {\n            result.push(min);\n            min_count++;\n\
    \            min_flag = false;\n        } else if (max_flag) {\n            result.push(max);\n\
    \            max_count++;\n            max_flag = false;\n        }\n        if\
    \ (min_count < lst.length) {\n            min = Math.min(...lst.slice(min_index\
    \ + 1));\n            min_index = lst.indexOf(min);\n            min_flag = true;\n\
    \        }\n        if (max_count < lst.length) {\n            max = Math.max(...lst.slice(max_index\
    \ + 1));\n            max_index = lst.indexOf(max);\n            max_flag = true;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n   \
    \     return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    let result: any\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_count: number = 0;\n    let max_count: number = 0;\n    let min_max_count:\
    \ number = 0;\n    let max_min_count: number = 0;\n    let min_max_index: number\
    \ = 0;\n    let max_min_index: number = 0;\n    let min_max: number = 0;\n   \
    \ let max_min: number = 0;\n    let min_max_lst: any = [];\n    let max_min_lst:\
    \ any = [];\n    let min_max_lst_index: any = [];\n    let max_min_lst_index:\
    \ any = [];\n    let min_max_lst_index_count: number = 0;\n    let max_min_lst_index_count:\
    \ number = 0;\n    let min_max_lst_index_count_index: number = 0;\n    let max_min_lst_index_count_index:\
    \ number = 0;\n    let min_max_lst_index_count_index_count: number = 0;\n    let\
    \ max_min_lst_index_count_index_count: number = 0;\n    let min_max_lst_index_count_index_count_index:\
    \ number = 0;\n    let max_min_lst_index_count_index_count_index: number = 0;\n\
    \    let min_max_lst_index_count_index_count_index_count: number = 0;\n    let\
    \ max_min_lst_index_count_index_count_index_count: number = 0;\n    let min_max_lst_index_count_index_count_index_count_index:\
    \ number = 0;\n    let max_min_lst_index_count_index_count_index_count_index:\
    \ number = 0;\n    let min_max_lst_index_", "    if (lst.length === 0) {\n   \
    \     return lst;\n    }\n    let result: any = [];\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    result.push(min);\n    result.push(max);\n\
    \    while (lst.length > 0) {\n        min = Math.min(...lst);\n        max =\
    \ Math.max(...lst);\n        min_index = lst.indexOf(min);\n        max_index\
    \ = lst.indexOf(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n        result.push(min);\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n   \
    \ let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst\
    \ = [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n        if\
    \ (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sortedList = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sortedList.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sortedList[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sortedList[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    let res = [];\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let i = 0;\n    while\
    \ (lst.length > 0) {\n        if (i % 2 === 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst\
    \ = [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n        if\
    \ (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let lst_length = lst.length;\n    for (let\
    \ i = 0; i < lst_length; i++) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min(...lst);\n\
    \            min_index = lst.indexOf(min);\n        } else {\n            result.push(max);\n\
    \            lst.splice(max_index, 1);\n            max = Math.max(...lst);\n\
    \            max_index = lst.indexOf(max);\n        }\n    }\n    return result;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let result\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n  \
    \  let minArr = lst.slice(0, minIndex);\n    let maxArr = lst.slice(minIndex +\
    \ 1, maxIndex);\n    let minArr2 = lst.slice(maxIndex + 1);\n    result.push(min);\n\
    \    result.push(max);\n    if (minArr.length > 0) {\n        result = result.concat(strange_sort_list(minArr));\n\
    \    }\n    if (maxArr.length > 0) {\n        result = result.concat(strange_sort_list(maxArr));\n\
    \    }\n    if (minArr2.length > 0) {\n        result = result.concat(strange_sort_list(minArr2));\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let result = [];\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n\nconsole.log(strange_sort_list([1, 2, 3, 4]));\nconsole.log(strange_sort_list([5,\
    \ 5, 5, 5]));\nconsole.log(strange_sort_list([]));\n", "    if (lst.length ===\
    \ 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        new_lst.push(min);\n        new_lst.push(max);\n        i += 2;\n\
    \    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n      \
    \  result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var res = [min];\n    var lst1\
    \ = lst.slice(0);\n    lst1.splice(lst1.indexOf(min), 1);\n    while (lst1.length\
    \ > 0) {\n        var max1 = Math.max.apply(null, lst1);\n        res.push(max1);\n\
    \        lst1.splice(lst1.indexOf(max1), 1);\n        if (lst1.length > 0) {\n\
    \            var min1 = Math.min.apply(null, lst1);\n            res.push(min1);\n\
    \            lst1.splice(lst1.indexOf(min1), 1);\n        }\n    }\n    return\
    \ res;\n}\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst =\
    \ [];\n    let i = 0;\n    while (i < lst.length) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        i += 2;\n    }\n    return new_lst;\n}\n",
  "    if (lst.length === 0) {\n        return lst;\n    }\n    let sorted_list =\
    \ lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let j\
    \ = sorted_list.length - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted_list[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while (new_lst.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted_list = [];\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_list = lst.slice(0, min_index).concat(lst.slice(min_index\
    \ + 1));\n    sorted_list.push(min);\n    sorted_list.push(max);\n    while (new_list.length\
    \ > 0) {\n        min = Math.min(...new_list);\n        max = Math.max(...new_list);\n\
    \        min_index = new_list.indexOf(min);\n        max_index = new_list.indexOf(max);\n\
    \        sorted_list.push(min);\n        sorted_list.push(max);\n        new_list\
    \ = new_list.slice(0, min_index).concat(new_list.slice(min_index + 1));\n    \
    \    new_list = new_list.slice(0, max_index - 1).concat(new_list.slice(max_index));\n\
    \    }\n    return sorted_list;\n}\n", "    if (lst.length === 0) {\n        return\
    \ lst;\n    }\n    lst.sort((a, b) => a - b);\n    let result = [];\n    let i\
    \ = 0;\n    let j = lst.length - 1;\n    while (i < j) {\n        result.push(lst[i]);\n\
    \        result.push(lst[j]);\n        i++;\n        j--;\n    }\n    if (i ===\
    \ j) {\n        result.push(lst[i]);\n    }\n    return result;\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let newLst = [min];\n    let newLst2 = [];\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] !== min) {\n \
    \           newLst2.push(lst[i]);\n        }\n    }\n    for (let i = 0; i < newLst2.length;\
    \ i++) {\n        if (i % 2 === 0) {\n            newLst.push(Math.max(...newLst2));\n\
    \            newLst2.splice(newLst2.indexOf(Math.max(...newLst2)), 1);\n     \
    \   } else {\n            newLst.push(Math.min(...newLst2));\n            newLst2.splice(newLst2.indexOf(Math.min(...newLst2)),\
    \ 1);\n        }\n    }\n    return newLst;\n}\n", "    if (lst.length == 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n       \
    \ if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i\
    \ < lst.length) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    if (lst.length === 1) {\n        return lst;\n    }\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let newLst = [];\n \
    \   let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0) {\n   \
    \         newLst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n  \
    \          min = Math.min(...lst);\n        } else {\n            newLst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return newLst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ lst;\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    let j = lst.length - 1;\n    while\
    \ (i <= j) {\n        if (i == j) {\n            result.push(lst[i]);\n      \
    \      break;\n        }\n        result.push(lst[i]);\n        result.push(lst[j]);\n\
    \        i++;\n        j--;\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n  \
    \  let minIndexes = [];\n    let maxIndexes = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === min) {\n            minIndexes.push(i);\n   \
    \     }\n        if (lst[i] === max) {\n            maxIndexes.push(i);\n    \
    \    }\n    }\n    if (minIndexes.length === 1 && maxIndexes.length === 1) {\n\
    \        result.push(min);\n        result.push(max);\n        for (let i = 0;\
    \ i < lst.length; i++) {\n            if (i !== minIndex && i !== maxIndex) {\n\
    \                result.push(lst[i]);\n            }\n        }\n    } else if\
    \ (minIndexes.length > 1 && maxIndexes.length === 1) {\n        result.push(min);\n\
    \        result.push(max);\n        for (let i = 0; i < lst.length; i++) {\n \
    \           if (i !== minIndex && i !== maxIndex) {\n                result.push(lst[i]);\n\
    \            }\n        }\n    } else if (minIndexes.length === 1 && maxIndexes.length\
    \ > 1) {\n        result.push(min);\n        result.push(max);\n        for (let\
    \ i = 0; i < lst.length; i++) {\n            if (i !== minIndex && i !== maxIndex)\
    \ {\n                result.push(lst[i]);\n            }\n        }\n    } else\
    \ if (minIndexes.length > 1 && maxIndexes.length > 1) {\n        result.push(min);\n\
    \        result.push(max);\n        for (let i = 0; i < lst.length; i++) {\n \
    \           if (i !== minIndex && i !== maxIndex) {\n                result.push(lst[i]);\n\
    \           ", "    if (lst.length === 0) {\n        return [];\n    }\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst =\
    \ [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n        if (i\
    \ % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let result\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n  \
    \  result.push(min);\n    result.push(max);\n    lst.splice(minIndex, 1);\n  \
    \  lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (i < lst.length) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    let newLst = [];\n\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (i % 2 == 0) {\n            newLst.push(min);\n         \
    \   lst.splice(minIndex, 1);\n            min = Math.min(...lst);\n          \
    \  minIndex = lst.indexOf(min);\n        } else {\n            newLst.push(max);\n\
    \            lst.splice(maxIndex, 1);\n            max = Math.max(...lst);\n \
    \           maxIndex = lst.indexOf(max);\n        }\n    }\n    return newLst;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted_list\
    \ = [];\n    let min_index = 0;\n    let max_index = 0;\n    let min_value = lst[0];\n\
    \    let max_value = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n   \
    \     if (lst[i] < min_value) {\n            min_value = lst[i];\n           \
    \ min_index = i;\n        }\n        if (lst[i] > max_value) {\n            max_value\
    \ = lst[i];\n            max_index = i;\n        }\n    }\n    sorted_list.push(min_value);\n\
    \    sorted_list.push(max_value);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return sorted_list.concat(strange_sort_list(lst));\n}\n", "  \
    \  if (lst.length === 0) {\n        return [];\n    }\n    let result: any = [];\n\
    \    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let index: number = lst.indexOf(min);\n    lst.splice(index, 1);\n    result.push(min);\n\
    \    index = lst.indexOf(max);\n    lst.splice(index, 1);\n    result.push(max);\n\
    \    return result.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let minIndex = lst.indexOf(min);\n\
    \    let max = Math.max(...lst.slice(minIndex + 1));\n    let maxIndex = lst.indexOf(max);\n\
    \    let result = [min];\n    if (maxIndex !== -1) {\n        result.push(max);\n\
    \    }\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return\
    \ result.concat(strange_sort_list(lst));\n}\n", "    if (lst.length == 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_5_intersperse
results:
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\nexport default intersperse;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (i !== numbers.length - 1) {\n            result.push(numbers[i]);\n\
    \            result.push(delimeter);\n        } else {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331209
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i < numbers.length - 1)\
    \ {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331209
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? []\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp6e3k57pg.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmp6e3k57pg.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmp6e3k57pg.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmp6e3k57pg.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmp6e3k57pg.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmp6e3k57pg.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmp6e3k57pg.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmp6e3k57pg.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331209
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  const [first,\
    \ ...rest] = numbers;\n  return [first, delimeter, ...intersperse(rest, delimeter)];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpq_udhxtp.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq_udhxtp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331210
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        acc.push(delimeter,\
    \ curr);\n        return acc;\n    }, [numbers[0]]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => acc.concat([delimeter, curr]), [numbers[0]]);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return numbers.reduce((acc: any, curr: any, i: any) => {\n  \
    \  if (i === 0) {\n      return [curr];\n    } else {\n      return [...acc, delimeter,\
    \ curr];\n    }\n  }, []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => acc.concat([delimeter,\
    \ curr]), [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [];\n    for (let i = 0; i < numbers.length - 1; i++) {\n    \
    \    result.push(numbers[i]);\n        result.push(delimeter);\n    }\n    result.push(numbers[numbers.length\
    \ - 1]);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, cur, index) => {\n        return acc.concat([delimeter,\
    \ cur]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => acc.concat([delimeter, curr]), [numbers[0]]);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr, i) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331213
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i < numbers.length - 1)\
    \ {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331209
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length - 1; i++) {\n    result.push(numbers[i]);\n\
    \    result.push(delimeter);\n  }\n  result.push(numbers[numbers.length - 1]);\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331213
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => acc.concat([delimeter, curr]),\
    \ [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331214
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length - 1; i++) {\n    result.push(numbers[i]);\n\
    \    result.push(delimeter);\n  }\n  result.push(numbers[numbers.length - 1]);\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331213
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length == 0) {\n        return [];\n    }\n   \
    \ if (numbers.length == 1) {\n        return numbers;\n    }\n    return [numbers[0],\
    \ delimeter, ...intersperse(numbers.slice(1), delimeter)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331214
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return numbers.reduce((acc: any, curr: any, i: any) => {\n  \
    \  if (i === 0) {\n      return [curr];\n    } else {\n      return [...acc, delimeter,\
    \ curr];\n    }\n  }, []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        let result = [];\n        for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n            result.push(numbers[i]);\n            result.push(delimeter);\n\
    \        }\n        result.push(numbers[numbers.length - 1]);\n        return\
    \ result;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331214
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length == 0) {\n        return [];\n    }\n   \
    \ else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmplznqw98c.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmplznqw98c.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331215
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length == 0) {\n        return [];\n    }\n   \
    \ else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmplznqw98c.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmplznqw98c.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331215
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    let result:\
    \ any = [];\n    for (let i = 0; i < numbers.length - 1; i++) {\n        result.push(numbers[i]);\n\
    \        result.push(delimeter);\n    }\n    result.push(numbers[numbers.length\
    \ - 1]);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    let result:\
    \ any = [];\n    for (let i = 0; i < numbers.length - 1; i++) {\n        result.push(numbers[i]);\n\
    \        result.push(delimeter);\n    }\n    result.push(numbers[numbers.length\
    \ - 1]);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    return [numbers[0],\
    \ delimeter, ...intersperse(numbers.slice(1), delimeter)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr, i) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331213
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    return [numbers[0],\
    \ delimeter, ...intersperse(numbers.slice(1), delimeter)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    let result:\
    \ any = [];\n    for (let i = 0; i < numbers.length - 1; i++) {\n        result.push(numbers[i]);\n\
    \        result.push(delimeter);\n    }\n    result.push(numbers[numbers.length\
    \ - 1]);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length == 0) {\n        return [];\n    }\n   \
    \ else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]).concat(numbers.slice(1));\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  2,\n  8,\n  3,\n  2,\n  8,\n  6,\n  3,\n  2\n]\n\n\
    should loosely deep-equal\n\n[\n  5,\n  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n \
    \   at test (/tmp/tmpfhc6sska.js:18:12)\n    at Object.<anonymous> (/tmp/tmpfhc6sska.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2, 8, 8,\n    2, 8, 3, 2, 8, 6,\n    3, 2\n  ],\n  expected: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331216
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => acc.concat([delimeter, curr]),\
    \ [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331214
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  } else {\n   \
    \ return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp_ak1rvik.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_ak1rvik.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331216
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i != numbers.length -\
    \ 1) {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331217
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    return [numbers[0],\
    \ delimeter, ...intersperse(numbers.slice(1), delimeter)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  if (numbers.length\
    \ === 1) {\n    return numbers;\n  }\n  return [numbers[0], delimeter, ...intersperse(numbers.slice(1),\
    \ delimeter)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331217
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        acc.push(delimeter,\
    \ curr);\n        return acc;\n    }, [numbers[0]]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331211
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    // YOUR CODE HERE\n    if (numbers.length === 0) {\n      \
    \  return [];\n    }\n    else {\n        return [numbers[0]].concat(delimeter,\
    \ intersperse(numbers.slice(1), delimeter));\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp3unwtaa0.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3unwtaa0.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331217
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return numbers.reduce((acc: any, curr: any, idx: any) => {\n\
    \        if (idx === 0) {\n            return [curr];\n        }\n        return\
    \ [...acc, delimeter, curr];\n    }, []);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331218
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => acc.concat([delimeter, curr]),\
    \ [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331214
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return numbers.reduce((acc: any, curr: any, index: any) =>\
    \ {\n        if (index === 0) {\n            return [curr];\n        }\n     \
    \   return [...acc, delimeter, curr];\n    }, []);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331219
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i < numbers.length - 1)\
    \ {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331209
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  if (numbers.length === 1) {\n        return numbers;\n    }\n    return [numbers[0],\
    \ delimeter, ...intersperse(numbers.slice(1), delimeter)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331215
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  } else {\n   \
    \ return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp_ak1rvik.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_ak1rvik.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331216
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc, curr) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => acc.concat([delimeter,\
    \ curr]), [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return numbers.reduce((acc: any, curr: any, index: any) => {\n\
    \    if (index === 0) {\n      return [curr];\n    }\n    return [...acc, delimeter,\
    \ curr];\n  }, []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331219
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp8r12anwl.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8r12anwl.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331219
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => acc.concat([delimeter,\
    \ curr]), [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  } else {\n   \
    \ return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp_ak1rvik.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_ak1rvik.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331216
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    acc.push(delimeter, curr);\n    return acc;\n  },\
    \ [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331220
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  let result\
    \ = [numbers[0]];\n  for (let i = 1; i < numbers.length; i++) {\n    result.push(delimeter);\n\
    \    result.push(numbers[i]);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331220
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)].slice(0,\
    \ -1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  8,\n  6,\n  8,\n  3,\n\
    \  8,\n  2\n]\n    at test (/tmp/tmp24wk6ddz.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp24wk6ddz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 8, 6,\
    \ 8 ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n  ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331220
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => acc.concat([delimeter,\
    \ curr]), [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  }\n  return numbers.slice(1).reduce((acc:\
    \ any, curr: any) => {\n    return acc.concat([delimeter, curr]);\n  }, [numbers[0]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331210
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => {\n        return acc.concat([delimeter,\
    \ curr]);\n    }, [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    let result: any = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i < numbers.length - 1)\
    \ {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n\
    \  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2,\
    \ 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331209
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  let result = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        result.push(delimeter);\n        result.push(numbers[i]);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331208
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  else {\n        return [numbers[0]].concat(intersperse(numbers.slice(1), delimeter)).concat([delimeter]);\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  6,\n\
    \  3,\n  2,\n  8,\n  8,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmpmzj742bt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmzj742bt.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 6, 3, 2,\n    8, 8, 8, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return numbers.reduce((acc: any, curr: any, index: any) =>\
    \ {\n        if (index === 0) {\n            return [curr];\n        }\n     \
    \   return [...acc, delimeter, curr];\n    }, []);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
    \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
    \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331219
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    return is_null(numbers)\n        ? null\n        : is_null(tail(numbers))\n\
    \            ? head(numbers)\n            : pair(head(numbers), pair(delimeter,\
    \ intersperse(tail(numbers), delimeter)));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersperse;\n\
    \  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5, 6,\
    \ 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2], 2),[2,\
    \ 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbqbmu3z7.ts(7,12): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,11): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmpbqbmu3z7.ts(9,19): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmpbqbmu3z7.ts(10,15): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,15): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,20): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,35): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmpbqbmu3z7.ts(11,63): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 2
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  return is_null(numbers)\n    ? null\n    : is_null(tail(numbers))\n\
    \    ? head(numbers)\n    : pair(head(numbers), pair(delimeter, intersperse(tail(numbers),\
    \ delimeter)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmph2wai91n.ts(7,10): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,7): error TS2304: Cannot find name ''is_null''.

    ../../../../tmp/tmph2wai91n.ts(9,15): error TS2304: Cannot find name ''tail''.

    ../../../../tmp/tmph2wai91n.ts(10,7): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,7): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,12): error TS2304: Cannot find name ''head''.

    ../../../../tmp/tmph2wai91n.ts(11,27): error TS2304: Cannot find name ''pair''.

    ../../../../tmp/tmph2wai91n.ts(11,55): error TS2304: Cannot find name ''tail''.

    '
  timestamp: 1660331206
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    } else\
    \ {\n        return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp67prhggj.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp67prhggj.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331206
- exit_code: 0
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n    if (numbers.length === 0) {\n        return [];\n    }\n  \
    \  return numbers.slice(1).reduce((acc: any, curr: any) => acc.concat([delimeter,\
    \ curr]), [numbers[0]]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660331212
- exit_code: 1
  program: "//Insert a number 'delimeter' between every two consecutive elements of\
    \ input array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers: any, delimeter:\
    \ any): any {\n  if (numbers.length === 0) {\n    return [];\n  } else {\n   \
    \ return [numbers[0], delimeter, ...intersperse(numbers.slice(1), delimeter)];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = intersperse;\n  assert.deepEqual(candidate([],\
    \ 7),[]);\n  assert.deepEqual(candidate([5, 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n\
    \  assert.deepEqual(candidate([2, 2, 2], 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  8,\n\
    \  6,\n  8,\n  3,\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  5,\n\
    \  8,\n  6,\n  8,\n  3,\n  8,\n  2\n]\n    at test (/tmp/tmp_ak1rvik.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_ak1rvik.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 8, 6, 8,\n    3, 8, 2, 8\n  ],\n  expected: [\n    5, 8, 6, 8,\n    3, 8, 2\n\
    \  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660331216

name: HumanEval_83_starts_one_ends
language: ts
prompt: "//Given a positive integer n, return the count of the numbers of n-digit\n\
  // positive integers that start or end with 1.\nfunction starts_one_ends(n: any):\
  \ any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = starts_one_ends;\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(2),18);\n  assert.deepEqual(candidate(3),180);\n \
  \ assert.deepEqual(candidate(4),1800);\n  assert.deepEqual(candidate(5),18000);\n\
  }\n\ntest();"
completions: ["    if (n === 1) {\n        return 2;\n    } else if (n === 2) {\n\
    \        return 3;\n    } else {\n        return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n    }\n}\n", "    let count = 0;\n    if (n === 1) {\n        return\
    \ 1;\n    }\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    let num = Math.pow(10, i) - 1;\n        let num_str = num.toString();\n \
    \       if (num_str.charAt(0) === '1' || num_str.charAt(num_str.length - 1) ===\
    \ '1') {\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return\
    \ 10;\n    }\n    return 9 + starts_one_ends(n - 1);\n}\n", "    if (n == 1) {\n\
    \        return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "  if (n == 1) {\n \
    \   return 2;\n  } else if (n == 2) {\n    return 3;\n  } else {\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n  }\n}\n", "    if (n === 1) {\n        return\
    \ 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 10;\n    } else if (n ===\
    \ 2) {\n        return 91;\n    } else {\n        return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n    }\n}\n", "    if (n === 1) {\n        return\
    \ 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    if (n === 3) {\n   \
    \     return 5;\n    }\n    if (n === 4) {\n        return 8;\n    }\n    if (n\
    \ === 5) {\n        return 13;\n    }\n    if (n === 6) {\n        return 21;\n\
    \    }\n    if (n === 7) {\n        return 34;\n    }\n    if (n === 8) {\n  \
    \      return 55;\n    }\n    if (n === 9) {\n        return 89;\n    }\n    if\
    \ (n === 10) {\n        return 144;\n    }\n    if (n === 11) {\n        return\
    \ 233;\n    }\n    if (n === 12) {\n        return 377;\n    }\n    if (n ===\
    \ 13) {\n        return 610;\n    }\n    if (n === 14) {\n        return 987;\n\
    \    }\n    if (n === 15) {\n        return 1597;\n    }\n    if (n === 16) {\n\
    \        return 2584;\n    }\n    if (n === 17) {\n        return 4181;\n    }\n\
    \    if (n === 18) {\n        return 6765;\n    }\n    if (n === 19) {\n     \
    \   return 10946;\n    }\n    if (n === 20) {\n        return 17711;\n    }\n\
    \    if (n === 21) {\n        return 28657;\n    }\n    if (n === 22) {\n    \
    \    return 46368;\n    }\n    if (n === 23) {\n        return 75025;\n    }\n\
    \    if (n === 24) {\n        return 121393;\n    }\n    if (n === 25) {\n   \
    \     return 196418;\n    }\n    if (n === 26) {\n        return 317811;\n   \
    \ }\n    if (n === 27) {\n        return 514229;\n    }\n    if (n === 28) {\n\
    \        return 832040;\n    }\n    if (n === 29) {\n        return 1346269;\n",
  "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n === 1) {\n        return\
    \ 1;\n    }\n    if (n === 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10,\
    \ n - 1);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n   \
    \     count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "  if (n\
    \ === 1) {\n    return 2;\n  }\n  if (n === 2) {\n    return 3;\n  }\n  return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n \
    \   }\n    return count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n\
    \    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n\
    }\n", "    if (n === 1) {\n        return 1;\n    }\n    return Math.pow(10, n\
    \ - 1) + 9 * Math.pow(10, n - 2);\n}\n", "    if (n == 1) {\n        return 1;\n\
    \    }\n    if (n == 2) {\n        return 10;\n    }\n    if (n == 3) {\n    \
    \    return 100;\n    }\n    if (n == 4) {\n        return 1000;\n    }\n    if\
    \ (n == 5) {\n        return 10000;\n    }\n    if (n == 6) {\n        return\
    \ 100000;\n    }\n    if (n == 7) {\n        return 1000000;\n    }\n    if (n\
    \ == 8) {\n        return 10000000;\n    }\n    if (n == 9) {\n        return\
    \ 100000000;\n    }\n    if (n == 10) {\n        return 1000000000;\n    }\n \
    \   if (n == 11) {\n        return 10000000000;\n    }\n    if (n == 12) {\n \
    \       return 100000000000;\n    }\n    if (n == 13) {\n        return 1000000000000;\n\
    \    }\n    if (n == 14) {\n        return 10000000000000;\n    }\n    if (n ==\
    \ 15) {\n        return 100000000000000;\n    }\n    if (n == 16) {\n        return\
    \ 1000000000000000;\n    }\n    if (n == 17) {\n        return 10000000000000000;\n\
    \    }\n    if (n == 18) {\n        return 100000000000000000;\n    }\n    if\
    \ (n == 19) {\n        return 1000000000000000000;\n    }\n    if (n == 20) {\n\
    \        return 10000000000000000000;\n    }\n    if (n == 21) {\n        return\
    \ 100000000000000000000;\n    }\n    if (n == 22) {\n        return 1000000000000000000000;\n\
    \    }\n    if (n == 23) {\n        return 10000000000000000000000;\n    }\n \
    \   if (n == 24) {\n        return 100000000000000000000000;\n    }\n    if (n\
    \ == 25) {\n        return 1000000000000000000000000;\n    }\n    if (n == 26)\
    \ {\n        return 10000000000000000000000000;\n    }\n    if (n == 27) {\n \
    \       return 100000000000000000000000000;\n    }\n    if (n == 28) {\n     \
    \   return 1000000000000000000000000", "    if (n == 1) {\n        return 2;\n\
    \    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 1;\n    }\n    if (n == 2)\
    \ {\n        return 10;\n    }\n    if (n == 3) {\n        return 100;\n    }\n\
    \    if (n == 4) {\n        return 1000;\n    }\n    if (n == 5) {\n        return\
    \ 10000;\n    }\n    if (n == 6) {\n        return 100000;\n    }\n    if (n ==\
    \ 7) {\n        return 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n\
    \    }\n    if (n == 9) {\n        return 100000000;\n    }\n    if (n == 10)\
    \ {\n        return 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n\
    \    }\n    if (n == 12) {\n        return 100000000000;\n    }\n    if (n ==\
    \ 13) {\n        return 1000000000000;\n    }\n    if (n == 14) {\n        return\
    \ 10000000000000;\n    }\n    if (n == 15) {\n        return 100000000000000;\n\
    \    }\n    if (n == 16) {\n        return 1000000000000000;\n    }\n    if (n\
    \ == 17) {\n        return 10000000000000000;\n    }\n    if (n == 18) {\n   \
    \     return 100000000000000000;\n    }\n    if (n == 19) {\n        return 1000000000000000000;\n\
    \    }\n    if (n == 20) {\n        return 10000000000000000000;\n    }\n    if\
    \ (n == 21) {\n        return 100000000000000000000;\n    }\n    if (n == 22)\
    \ {\n        return 1000000000000000000000;\n    }\n    if (n == 23) {\n     \
    \   return 10000000000000000000000;\n    }\n    if (n == 24) {\n        return\
    \ 100000000000000000000000;\n    }\n    if (n == 25) {\n        return 1000000000000000000000000;\n\
    \    }\n    if (n == 26) {\n        return 10000000000000000000000000;\n    }\n\
    \    if (n == 27) {\n        return 100000000000000000000000000;\n    }\n    if\
    \ (n == 28) {\n        return 1000000000000000000000000", "    let count = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n \
    \   }\n    return count;\n}\n", "    if (n === 1) {\n        return 1;\n    }\n\
    \    if (n === 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10, n\
    \ - 1);\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n\
    \        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 10;\n \
    \   }\n    if (n == 3) {\n        return 100;\n    }\n    if (n == 4) {\n    \
    \    return 1000;\n    }\n    if (n == 5) {\n        return 10000;\n    }\n  \
    \  if (n == 6) {\n        return 100000;\n    }\n    if (n == 7) {\n        return\
    \ 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n    }\n    if\
    \ (n == 9) {\n        return 100000000;\n    }\n    if (n == 10) {\n        return\
    \ 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n    }\n\
    \    if (n == 12) {\n        return 100000000000;\n    }\n    if (n == 13) {\n\
    \        return 1000000000000;\n    }\n    if (n == 14) {\n        return 10000000000000;\n\
    \    }\n    if (n == 15) {\n        return 100000000000000;\n    }\n    if (n\
    \ == 16) {\n        return 1000000000000000;\n    }\n    if (n == 17) {\n    \
    \    return 10000000000000000;\n    }\n    if (n == 18) {\n        return 100000000000000000;\n\
    \    }\n    if (n == 19) {\n        return 1000000000000000000;\n    }\n    if\
    \ (n == 20) {\n        return 10000000000000000000;\n    }\n    if (n == 21) {\n\
    \        return 100000000000000000000;\n    }\n    if (n == 22) {\n        return\
    \ 1000000000000000000000;\n    }\n    if (n == 23) {\n        return 10000000000000000000000;\n\
    \    }\n    if (n == 24) {\n        return 100000000000000000000000;\n    }\n\
    \    if (n == 25) {\n        return 1000000000000000000000000;\n    }\n    if\
    \ (n == 26) {\n        return 10000000000000000000000000;\n    }\n    if (n ==\
    \ 27) {\n        return 100000000000000000000000000;\n    }\n    if (n == 28)\
    \ {\n        return 1000000000000000000000000", "    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i -\
    \ 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n\
    }\n", "    if (n === 1) {\n        return 2;\n    }\n    if (n === 2) {\n    \
    \    return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n -\
    \ 2);\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2) {\n\
    \        return 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n}\n", "    let\
    \ count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2)\
    \ {\n        return 10;\n    }\n    if (n === 3) {\n        return 100;\n    }\n\
    \    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n\
    \ === 1) {\n        return 1;\n    }\n    if (n === 2) {\n        return 10;\n\
    \    }\n    if (n === 3) {\n        return 100;\n    }\n    if (n === 4) {\n \
    \       return 1000;\n    }\n    if (n === 5) {\n        return 10000;\n    }\n\
    \    if (n === 6) {\n        return 100000;\n    }\n    if (n === 7) {\n     \
    \   return 1000000;\n    }\n    if (n === 8) {\n        return 10000000;\n   \
    \ }\n    if (n === 9) {\n        return 100000000;\n    }\n    if (n === 10) {\n\
    \        return 1000000000;\n    }\n    if (n === 11) {\n        return 10000000000;\n\
    \    }\n    if (n === 12) {\n        return 100000000000;\n    }\n    if (n ===\
    \ 13) {\n        return 1000000000000;\n    }\n    if (n === 14) {\n        return\
    \ 10000000000000;\n    }\n    if (n === 15) {\n        return 100000000000000;\n\
    \    }\n    if (n === 16) {\n        return 1000000000000000;\n    }\n    if (n\
    \ === 17) {\n        return 10000000000000000;\n    }\n    if (n === 18) {\n \
    \       return 100000000000000000;\n    }\n    if (n === 19) {\n        return\
    \ 1000000000000000000;\n    }\n    if (n === 20) {\n        return 10000000000000000000;\n\
    \    }\n    if (n === 21) {\n        return 100000000000000000000;\n    }\n  \
    \  if (n === 22) {\n        return 1000000000000000000000;\n    }\n    if (n ===\
    \ 23) {\n        return 10000000000000000000000;\n    }\n    if (n === 24) {\n\
    \        return 100000000000000000000000;\n    }\n    if (n === 25) {\n      \
    \  return 1000000000000000000000000;\n    }\n    if (n === 26) {\n        return\
    \ 10000000000000000000000000;\n    }\n    if (n === 27) {\n        return 100000000000000000000000000;\n\
    \    }\n    if (n === 28) {\n        return 1000000000000000000000000", "    if\
    \ (n === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n\
    \    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", " \
    \   if (n === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n",
  "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ === 1) {\n        return 1;\n    }\n    if (n === 2) {\n        return 10;\n\
    \    }\n    let count = 10;\n    let start = 10;\n    let end = 10;\n    for (let\
    \ i = 2; i < n; i++) {\n        start *= 10;\n        end *= 10;\n        count\
    \ += start + end;\n    }\n    return count;\n}\n", "  let count = 0;\n  let start\
    \ = Math.pow(10, n - 1);\n  let end = Math.pow(10, n) - 1;\n  for (let i = start;\
    \ i <= end; i++) {\n    if (i.toString().startsWith(\"1\") || i.toString().endsWith(\"\
    1\")) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let count = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        if (i.toString().startsWith('1')\
    \ || i.toString().endsWith('1')) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 0) {\n        return 0;\n    }\n    if (n === 1)\
    \ {\n        return 1;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n  \
    \  }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "   \
    \ if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n\
    \    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", " \
    \   let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n === 1) {\n        return\
    \ 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n == 1) {\n        return 2;\n\
    \    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n  \
    \  }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "   \
    \ let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2)\
    \ {\n        return 10;\n    }\n    return starts_one_ends(n - 1) + 9 * Math.pow(10,\
    \ n - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n   \
    \     count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ === 1) {\n        return 10;\n    }\n    let count = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count\
    \ * 2;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n      \
    \  let num = Math.pow(10, i) - 1;\n        let str = num.toString();\n       \
    \ if (str.startsWith('1') || str.endsWith('1')) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "    if (n == 1) {\n        return 1;\n\
    \    }\n    if (n == 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10,\
    \ n - 1);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n   \
    \     count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    let\
    \ count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "  if (n === 1) {\n    return 2;\n\
    \  }\n  if (n === 2) {\n    return 3;\n  }\n  if (n === 3) {\n    return 5;\n\
    \  }\n  let count = 0;\n  let start = 1;\n  let end = 1;\n  for (let i = 1; i\
    \ < n; i++) {\n    start *= 10;\n    end = end * 10 + 1;\n  }\n  count = start\
    \ + end;\n  return count;\n}\n", "    let count = 0;\n    for (let i = 1; i <=\
    \ n; i++) {\n        let num = Math.pow(10, i - 1);\n        count += num;\n \
    \   }\n    return count;\n}\n", "    let count = 0;\n    let start = Math.pow(10,\
    \ n - 1);\n    let end = Math.pow(10, n) - 1;\n    for (let i = start; i <= end;\
    \ i++) {\n        if (i.toString().startsWith('1') || i.toString().endsWith('1'))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(starts_one_ends(2));\n\
    console.log(starts_one_ends(3));\n", "    if (n === 1) {\n        return 10;\n\
    \    }\n    if (n === 2) {\n        return 91;\n    }\n    let count = 9;\n  \
    \  for (let i = 1; i < n - 1; i++) {\n        count *= 10;\n    }\n    return\
    \ count + starts_one_ends(n - 1);\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    if (n === 1) {\n        return 2;\n    }\n    if (n === 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n  \
    \  }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "   \
    \ if (n === 1) {\n        return 1;\n    }\n    if (n === 2) {\n        return\
    \ 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n}\n", "    if (n === 1) {\n\
    \        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n == 1) {\n\
    \        return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n\
    \        return 2;\n    }\n    let count = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        count += Math.pow(10, i - 1);\n    }\n    return count * 2;\n}\n",
  "    if (n == 1) {\n        return 2;\n    }\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n}\n", "    if (n == 1) {\n        return 2;\n   \
    \ }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 1;\n    }\n    if (n == 2)\
    \ {\n        return 10;\n    }\n    let count = 0;\n    for (let i = 1; i <= n;\
    \ i++) {\n        count += starts_one_ends(i - 1) * starts_one_ends(n - i);\n\
    \    }\n    return count;\n}\n", "    if (n === 1) {\n        return 2;\n    }\n\
    \    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n -\
    \ 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    let start = Math.pow(10, n - 1);\n    let end =\
    \ Math.pow(10, n) - 1;\n    for (let i = start; i <= end; i++) {\n        if (i.toString().startsWith('1')\
    \ || i.toString().endsWith('1')) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", " \
    \   if (n === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n",
  "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2) {\n        return\
    \ 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n}\n", "    if (n === 1) {\n\
    \        return 1;\n    }\n    if (n === 2) {\n        return 10;\n    }\n   \
    \ let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    if (n === 1) {\n        return 2;\n \
    \   }\n    if (n === 2) {\n        return 3;\n    }\n    if (n > 2) {\n      \
    \  count = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "  let count = 0;\n  for (let i = 1; i <= n; i++) {\n    count\
    \ += Math.pow(10, i - 1);\n  }\n  return count;\n}\n", "    let count = 0;\n \
    \   for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n  \
    \  }\n    return count;\n}\n", "    let count = 0;\n    if (n === 1) {\n     \
    \   return 1;\n    } else {\n        count = starts_one_ends(n - 1) + 9 * Math.pow(10,\
    \ n - 2);\n    }\n    return count;\n}\n", "    if (n < 1) {\n        return 0;\n\
    \    }\n    if (n === 1) {\n        return 1;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 10;\n    }\n    if (n ===\
    \ 2) {\n        return 55;\n    }\n    if (n === 3) {\n        return 220;\n \
    \   }\n    if (n === 4) {\n        return 715;\n    }\n    if (n === 5) {\n  \
    \      return 2002;\n    }\n    if (n === 6) {\n        return 5005;\n    }\n\
    \    if (n === 7) {\n        return 11440;\n    }\n    if (n === 8) {\n      \
    \  return 24310;\n    }\n    if (n === 9) {\n        return 48620;\n    }\n  \
    \  if (n === 10) {\n        return 92378;\n    }\n    if (n === 11) {\n      \
    \  return 167960;\n    }\n    if (n === 12) {\n        return 293930;\n    }\n\
    \    if (n === 13) {\n        return 497420;\n    }\n    if (n === 14) {\n   \
    \     return 817190;\n    }\n    if (n === 15) {\n        return 1307504;\n  \
    \  }\n    if (n === 16) {\n        return 2042975;\n    }\n    if (n === 17) {\n\
    \        return 3124550;\n    }\n    if (n === 18) {\n        return 4686825;\n\
    \    }\n    if (n === 19) {\n        return 6782270;\n    }\n    if (n === 20)\
    \ {\n        return 9657700;\n    }\n    if (n === 21) {\n        return 13306110;\n\
    \    }\n    if (n === 22) {\n        return 18053360;\n    }\n    if (n === 23)\
    \ {\n        return 23667560;\n    }\n    if (n === 24) {\n        return 30263680;\n\
    \    }\n    if (n === 25) {\n        return 37826600;\n    }\n    if (n === 26)\
    \ {\n        return 46410250;\n    }\n    if (n === 27) {\n        return 55945340;\n\
    \    }\n   ", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n      \
    \  count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n ===\
    \ 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n\
    \    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    let count\
    \ = 0;\n    let start = Math.pow(10, n - 1);\n    let end = Math.pow(10, n) -\
    \ 1;\n    for (let i = start; i <= end; i++) {\n        if (i.toString().startsWith('1')\
    \ || i.toString().endsWith('1')) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "    let count = 0;\n    let i = 1;\n    while (i <=\
    \ n) {\n        count += 9 * Math.pow(10, i - 1);\n        i++;\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    let count = 0;\n    for (let i = 1; i <= n;\
    \ i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count * 2;\n\
    }\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count +=\
    \ Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n == 1) {\n \
    \       return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n\
    \        return 10;\n    }\n    if (n === 2) {\n        return 55;\n    }\n  \
    \  if (n === 3) {\n        return 220;\n    }\n    if (n === 4) {\n        return\
    \ 715;\n    }\n    if (n === 5) {\n        return 2002;\n    }\n    if (n ===\
    \ 6) {\n        return 5005;\n    }\n    if (n === 7) {\n        return 11440;\n\
    \    }\n    if (n === 8) {\n        return 24310;\n    }\n    if (n === 9) {\n\
    \        return 48620;\n    }\n    if (n === 10) {\n        return 92378;\n  \
    \  }\n    if (n === 11) {\n        return 167960;\n    }\n    if (n === 12) {\n\
    \        return 293930;\n    }\n    if (n === 13) {\n        return 497420;\n\
    \    }\n    if (n === 14) {\n        return 817190;\n    }\n    if (n === 15)\
    \ {\n        return 1307504;\n    }\n    if (n === 16) {\n        return 2042975;\n\
    \    }\n    if (n === 17) {\n        return 3124550;\n    }\n    if (n === 18)\
    \ {\n        return 4686825;\n    }\n    if (n === 19) {\n        return 6782270;\n\
    \    }\n    if (n === 20) {\n        return 9694845;\n    }\n    if (n === 21)\
    \ {\n        return 13306110;\n    }\n    if (n === 22) {\n        return 18597755;\n\
    \    }\n    if (n === 23) {\n        return 25375260;\n    }\n    if (n === 24)\
    \ {\n        return 34254725;\n    }\n    if (n === 25) {\n        return 45694845;\n\
    \    }\n    if (n === 26) {\n        return 60225100;\n    }\n    if (n === 27)\
    \ {\n        return 77558760;\n    }\n   ", "    let count = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        let num = Math.pow(10, i) - 1;\n        let str\
    \ = num.toString();\n        if (str.startsWith('1') || str.endsWith('1')) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    if (n ===\
    \ 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n\
    \    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n\
    \ === 1) {\n        return 10;\n    }\n    if (n === 2) {\n        return 91;\n\
    \    }\n    let count = 10;\n    let start = 10;\n    let end = 10;\n    for (let\
    \ i = 3; i <= n; i++) {\n        start = start * (9 - i + 2);\n        end = end\
    \ * (10 - i + 1);\n        count = count + start + end;\n    }\n    return count;\n\
    }\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2) {\n    \
    \    return 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n}\n", "    let count\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i -\
    \ 1);\n    }\n    return count;\n}\n", "  if (n === 1) {\n    return 2;\n  } else\
    \ if (n === 2) {\n    return 3;\n  } else {\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n  }\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ === 1) {\n        return 10;\n    }\n    if (n === 2) {\n        return 91;\n\
    \    }\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count\
    \ += Math.pow(10, i - 1);\n    }\n    return count * 2 - 9;\n}\n", "    if (n\
    \ === 1) {\n        return 10;\n    }\n    if (n === 2) {\n        return 55;\n\
    \    }\n    if (n === 3) {\n        return 220;\n    }\n    if (n === 4) {\n \
    \       return 715;\n    }\n    if (n === 5) {\n        return 2002;\n    }\n\
    \    if (n === 6) {\n        return 5005;\n    }\n    if (n === 7) {\n       \
    \ return 11440;\n    }\n    if (n === 8) {\n        return 24310;\n    }\n   \
    \ if (n === 9) {\n        return 48620;\n    }\n    if (n === 10) {\n        return\
    \ 92378;\n    }\n    if (n === 11) {\n        return 167960;\n    }\n    if (n\
    \ === 12) {\n        return 293930;\n    }\n    if (n === 13) {\n        return\
    \ 497420;\n    }\n    if (n === 14) {\n        return 817190;\n    }\n    if (n\
    \ === 15) {\n        return 1307504;\n    }\n    if (n === 16) {\n        return\
    \ 2042975;\n    }\n    if (n === 17) {\n        return 3124550;\n    }\n    if\
    \ (n === 18) {\n        return 4686825;\n    }\n    if (n === 19) {\n        return\
    \ 6782270;\n    }\n    if (n === 20) {\n        return 9657700;\n    }\n    if\
    \ (n === 21) {\n        return 13306110;\n    }\n    if (n === 22) {\n       \
    \ return 18053355;\n    }\n    if (n === 23) {\n        return 23665860;\n   \
    \ }\n    if (n === 24) {\n        return 30262440;\n    }\n    if (n === 25) {\n\
    \        return 37677215;\n    }\n    if (n === 26) {\n        return 45993760;\n\
    \    }\n    if (n === 27) {\n        return 55195080;\n    }\n   ", "    if (n\
    \ === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n\
    \    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", " \
    \   if (n == 1) {\n        return 2;\n    } else if (n == 2) {\n        return\
    \ 3;\n    } else {\n        return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n    }\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n\
    \        let num = Math.pow(10, i - 1);\n        count += 9 * num;\n    }\n  \
    \  return count;\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n\
    \ == 2) {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    let count = 0;\n    let start = Math.pow(10, n - 1);\n   \
    \ let end = Math.pow(10, n) - 1;\n    for (let i = start; i <= end; i++) {\n \
    \       if (i.toString().startsWith('1') || i.toString().endsWith('1')) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n", "    if (n ===\
    \ 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n\
    \    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n\
    \ === 1) {\n        return 1;\n    }\n    if (n === 2) {\n        return 10;\n\
    \    }\n    return 9 * Math.pow(10, n - 1);\n}\n", "    let count = 0;\n    let\
    \ start = 1;\n    let end = 1;\n    for (let i = 0; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    for (let i = start; i < end; i++) {\n\
    \        if (i.toString().startsWith('1') || i.toString().endsWith('1')) {\n \
    \           count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let start = Math.pow(10, n - 1);\n    let end = Math.pow(10, n) -\
    \ 1;\n    for (let i = start; i <= end; i++) {\n        if (i.toString().startsWith('1')\
    \ || i.toString().endsWith('1')) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "    if (n == 1) {\n        return 1;\n    }\n    if\
    \ (n == 2) {\n        return 10;\n    }\n    if (n == 3) {\n        return 100;\n\
    \    }\n    if (n == 4) {\n        return 1000;\n    }\n    if (n == 5) {\n  \
    \      return 10000;\n    }\n    if (n == 6) {\n        return 100000;\n    }\n\
    \    if (n == 7) {\n        return 1000000;\n    }\n    if (n == 8) {\n      \
    \  return 10000000;\n    }\n    if (n == 9) {\n        return 100000000;\n   \
    \ }\n    if (n == 10) {\n        return 1000000000;\n    }\n    if (n == 11) {\n\
    \        return 10000000000;\n    }\n    if (n == 12) {\n        return 100000000000;\n\
    \    }\n    if (n == 13) {\n        return 1000000000000;\n    }\n    if (n ==\
    \ 14) {\n        return 10000000000000;\n    }\n    if (n == 15) {\n        return\
    \ 100000000000000;\n    }\n    if (n == 16) {\n        return 1000000000000000;\n\
    \    }\n    if (n == 17) {\n        return 10000000000000000;\n    }\n    if (n\
    \ == 18) {\n        return 100000000000000000;\n    }\n    if (n == 19) {\n  \
    \      return 1000000000000000000;\n    }\n    if (n == 20) {\n        return\
    \ 10000000000000000000;\n    }\n    if (n == 21) {\n        return 100000000000000000000;\n\
    \    }\n    if (n == 22) {\n        return 1000000000000000000000;\n    }\n  \
    \  if (n == 23) {\n        return 10000000000000000000000;\n    }\n    if (n ==\
    \ 24) {\n        return 100000000000000000000000;\n    }\n    if (n == 25) {\n\
    \        return 1000000000000000000000000;\n    }\n    if (n == 26) {\n      \
    \  return 10000000000000000000000000;\n    }\n    if (n == 27) {\n        return\
    \ 100000000000000000000000000;\n    }\n    if (n == 28) {\n        return 1000000000000000000000000",
  "    if (n === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n",
  "    if (n === 1) {\n        return 1;\n    }\n    return (9 * Math.pow(10, n -\
    \ 1)) + starts_one_ends(n - 1);\n}\n", "    let count = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count +=\
    \ Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n === 0) {\n\
    \        return 0;\n    }\n    if (n === 1) {\n        return 1;\n    }\n    if\
    \ (n === 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n\
    }\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2) {\n    \
    \    return 10;\n    }\n    if (n === 3) {\n        return 100;\n    }\n    if\
    \ (n === 4) {\n        return 1000;\n    }\n    if (n === 5) {\n        return\
    \ 10000;\n    }\n    if (n === 6) {\n        return 100000;\n    }\n    if (n\
    \ === 7) {\n        return 1000000;\n    }\n    if (n === 8) {\n        return\
    \ 10000000;\n    }\n    if (n === 9) {\n        return 100000000;\n    }\n   \
    \ if (n === 10) {\n        return 1000000000;\n    }\n    if (n === 11) {\n  \
    \      return 10000000000;\n    }\n    if (n === 12) {\n        return 100000000000;\n\
    \    }\n    if (n === 13) {\n        return 1000000000000;\n    }\n    if (n ===\
    \ 14) {\n        return 10000000000000;\n    }\n    if (n === 15) {\n        return\
    \ 100000000000000;\n    }\n    if (n === 16) {\n        return 1000000000000000;\n\
    \    }\n    if (n === 17) {\n        return 10000000000000000;\n    }\n    if\
    \ (n === 18) {\n        return 100000000000000000;\n    }\n    if (n === 19) {\n\
    \        return 1000000000000000000;\n    }\n    if (n === 20) {\n        return\
    \ 10000000000000000000;\n    }\n    if (n === 21) {\n        return 100000000000000000000;\n\
    \    }\n    if (n === 22) {\n        return 1000000000000000000000;\n    }\n \
    \   if (n === 23) {\n        return 10000000000000000000000;\n    }\n    if (n\
    \ === 24) {\n        return 100000000000000000000000;\n    }\n    if (n === 25)\
    \ {\n        return 1000000000000000000000000;\n    }\n    if (n === 26) {\n \
    \       return 10000000000000000000000000;\n    }\n    if (n === 27) {\n     \
    \   return 100000000000000000000000000;\n    }\n    if (n === 28) {\n        return\
    \ 1000000000000000000000000", "    if (n < 1) {\n        return 0;\n    }\n  \
    \  let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n        return 1;\n\
    \    }\n    if (n === 2) {\n        return 10;\n    }\n    if (n === 3) {\n  \
    \      return 100;\n    }\n    if (n === 4) {\n        return 1000;\n    }\n \
    \   if (n === 5) {\n        return 10000;\n    }\n    if (n === 6) {\n       \
    \ return 100000;\n    }\n    if (n === 7) {\n        return 1000000;\n    }\n\
    \    if (n === 8) {\n        return 10000000;\n    }\n    if (n === 9) {\n   \
    \     return 100000000;\n    }\n    if (n === 10) {\n        return 1000000000;\n\
    \    }\n    if (n === 11) {\n        return 10000000000;\n    }\n    if (n ===\
    \ 12) {\n        return 100000000000;\n    }\n    if (n === 13) {\n        return\
    \ 1000000000000;\n    }\n    if (n === 14) {\n        return 10000000000000;\n\
    \    }\n    if (n === 15) {\n        return 100000000000000;\n    }\n    if (n\
    \ === 16) {\n        return 1000000000000000;\n    }\n    if (n === 17) {\n  \
    \      return 10000000000000000;\n    }\n    if (n === 18) {\n        return 100000000000000000;\n\
    \    }\n    if (n === 19) {\n        return 1000000000000000000;\n    }\n    if\
    \ (n === 20) {\n        return 10000000000000000000;\n    }\n    if (n === 21)\
    \ {\n        return 100000000000000000000;\n    }\n    if (n === 22) {\n     \
    \   return 1000000000000000000000;\n    }\n    if (n === 23) {\n        return\
    \ 10000000000000000000000;\n    }\n    if (n === 24) {\n        return 100000000000000000000000;\n\
    \    }\n    if (n === 25) {\n        return 1000000000000000000000000;\n    }\n\
    \    if (n === 26) {\n        return 10000000000000000000000000;\n    }\n    if\
    \ (n === 27) {\n        return 100000000000000000000000000;\n    }\n    if (n\
    \ === 28) {\n        return 1000000000000000000000000", "    if (n == 1) {\n \
    \       return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n\
    \        return 1;\n    }\n    if (n === 2) {\n        return 10;\n    }\n   \
    \ return 9 * Math.pow(10, n - 1);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 10;\n \
    \   }\n    if (n == 3) {\n        return 100;\n    }\n    if (n == 4) {\n    \
    \    return 1000;\n    }\n    if (n == 5) {\n        return 10000;\n    }\n  \
    \  if (n == 6) {\n        return 100000;\n    }\n    if (n == 7) {\n        return\
    \ 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n    }\n    if\
    \ (n == 9) {\n        return 100000000;\n    }\n    if (n == 10) {\n        return\
    \ 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n    }\n\
    \    if (n == 12) {\n        return 100000000000;\n    }\n    if (n == 13) {\n\
    \        return 1000000000000;\n    }\n    if (n == 14) {\n        return 10000000000000;\n\
    \    }\n    if (n == 15) {\n        return 100000000000000;\n    }\n    if (n\
    \ == 16) {\n        return 1000000000000000;\n    }\n    if (n == 17) {\n    \
    \    return 10000000000000000;\n    }\n    if (n == 18) {\n        return 100000000000000000;\n\
    \    }\n    if (n == 19) {\n        return 1000000000000000000;\n    }\n    if\
    \ (n == 20) {\n        return 10000000000000000000;\n    }\n    if (n == 21) {\n\
    \        return 100000000000000000000;\n    }\n    if (n == 22) {\n        return\
    \ 1000000000000000000000;\n    }\n    if (n == 23) {\n        return 10000000000000000000000;\n\
    \    }\n    if (n == 24) {\n        return 100000000000000000000000;\n    }\n\
    \    if (n == 25) {\n        return 1000000000000000000000000;\n    }\n    if\
    \ (n == 26) {\n        return 10000000000000000000000000;\n    }\n    if (n ==\
    \ 27) {\n        return 100000000000000000000000000;\n    }\n    if (n == 28)\
    \ {\n        return 1000000000000000000000000", "    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n === 1) {\n        return 1;\n\
    \    }\n    if (n === 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10,\
    \ n - 1);\n}\n", "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2)\
    \ {\n        return 3;\n    }\n    if (n == 3) {\n        return 5;\n    }\n \
    \   return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    let count\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i.toString().startsWith('1')\
    \ || i.toString().endsWith('1')) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if\
    \ (n === 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n\
    }\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count +=\
    \ Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n === 1) {\n\
    \        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n \
    \   }\n    return count;\n}\n", "    let count = 0;\n    for (let i = 1; i <=\
    \ n; i++) {\n        let str = i.toString();\n        if (str.startsWith('1')\
    \ || str.endsWith('1')) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 2;\n    }\n    if (n === 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n === 2)\
    \ {\n        return 10;\n    }\n    return 9 * Math.pow(10, n - 1);\n}\n", " \
    \   let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    if (n == 3) {\n\
    \        return 100;\n    }\n    if (n == 4) {\n        return 1000;\n    }\n\
    \    if (n == 5) {\n        return 10000;\n    }\n    if (n == 6) {\n        return\
    \ 100000;\n    }\n    if (n == 7) {\n        return 1000000;\n    }\n    if (n\
    \ == 8) {\n        return 10000000;\n    }\n    if (n == 9) {\n        return\
    \ 100000000;\n    }\n    if (n == 10) {\n        return 1000000000;\n    }\n \
    \   if (n == 11) {\n        return 10000000000;\n    }\n    if (n == 12) {\n \
    \       return 100000000000;\n    }\n    if (n == 13) {\n        return 1000000000000;\n\
    \    }\n    if (n == 14) {\n        return 10000000000000;\n    }\n    if (n ==\
    \ 15) {\n        return 100000000000000;\n    }\n    if (n == 16) {\n        return\
    \ 1000000000000000;\n    }\n    if (n == 17) {\n        return 10000000000000000;\n\
    \    }\n    if (n == 18) {\n        return 100000000000000000;\n    }\n    if\
    \ (n == 19) {\n        return 1000000000000000000;\n    }\n    if (n == 20) {\n\
    \        return 10000000000000000000;\n    }\n    if (n == 21) {\n        return\
    \ 100000000000000000000;\n    }\n    if (n == 22) {\n        return 1000000000000000000000;\n\
    \    }\n    if (n == 23) {\n        return 10000000000000000000000;\n    }\n \
    \   if (n == 24) {\n        return 100000000000000000000000;\n    }\n    if (n\
    \ == 25) {\n        return 1000000000000000000000000;\n    }\n    if (n == 26)\
    \ {\n        return 10000000000000000000000000;\n    }\n    if (n == 27) {\n \
    \       return 100000000000000000000000000;\n    }\n    if (n == 28) {\n     \
    \   return 1000000000000000000000000", "    let count = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        let num = Math.pow(10, i) - 1;\n        let str = num.toString();\n\
    \        if (str.charAt(0) === '1' || str.charAt(str.length - 1) === '1') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  if (n ===\
    \ 1) {\n    return 2;\n  }\n  if (n === 2) {\n    return 3;\n  }\n  return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ === 1) {\n        return 2;\n    }\n    if (n === 2) {\n        return 3;\n\
    \    }\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", " \
    \   let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n === 1) {\n        return\
    \ 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        if (i.toString().startsWith('1') || i.toString().endsWith('1'))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    let count = 10;\n\
    \    let i = 2;\n    while (i <= n) {\n        count += 9 * Math.pow(10, i - 1);\n\
    \        i++;\n    }\n    return count;\n}\n", "    if (n === 1) {\n        return\
    \ 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n === 1) {\n        return 2;\n    }\n    if (n === 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}\n", "  if (n == 1) {\n    return 10;\n  }\n  if (n == 2) {\n    return\
    \ 91;\n  }\n  let count = 9;\n  let base = 10;\n  for (let i = 1; i < n - 1; i++)\
    \ {\n    count = count * base;\n    base++;\n  }\n  return count + starts_one_ends(n\
    \ - 1);\n}\n", "  if (n == 1) {\n    return 2;\n  } else if (n == 2) {\n    return\
    \ 3;\n  } else {\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n\
    \  }\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if\
    \ (i.toString().startsWith(\"1\") || i.toString().endsWith(\"1\")) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n \
    \   }\n    return count;\n}\n", "    let count = 0;\n    let start = 1;\n    let\
    \ end = 1;\n    for (let i = 1; i <= n; i++) {\n        count += start + end;\n\
    \        start = start * 10;\n        end = end * 10 + 1;\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count +=\
    \ Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n === 1) {\n\
    \        return 2;\n    }\n    if (n === 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\n", "    if (n == 1) {\n\
    \        return 2;\n    }\n    else {\n        return starts_one_ends(n - 1) +\
    \ 9 * Math.pow(10, n - 2);\n    }\n}\n", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    if (n == 1) {\n        return 2;\n\
    \    }\n    return starts_one_ends(n - 1) + 9 * Math.pow(10, n - 2);\n}\n", " \
    \   let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i\
    \ = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    if (n == 1) {\n        return 1;\n    }\n    if (n == 2)\
    \ {\n        return 10;\n    }\n    if (n == 3) {\n        return 100;\n    }\n\
    \    if (n == 4) {\n        return 1000;\n    }\n    if (n == 5) {\n        return\
    \ 10000;\n    }\n    if (n == 6) {\n        return 100000;\n    }\n    if (n ==\
    \ 7) {\n        return 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n\
    \    }\n    if (n == 9) {\n        return 100000000;\n    }\n    if (n == 10)\
    \ {\n        return 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n\
    \    }\n    if (n == 12) {\n        return 100000000000;\n    }\n    if (n ==\
    \ 13) {\n        return 1000000000000;\n    }\n    if (n == 14) {\n        return\
    \ 10000000000000;\n    }\n    if (n == 15) {\n        return 100000000000000;\n\
    \    }\n    if (n == 16) {\n        return 1000000000000000;\n    }\n    if (n\
    \ == 17) {\n        return 10000000000000000;\n    }\n    if (n == 18) {\n   \
    \     return 100000000000000000;\n    }\n    if (n == 19) {\n        return 1000000000000000000;\n\
    \    }\n    if (n == 20) {\n        return 10000000000000000000;\n    }\n    if\
    \ (n == 21) {\n        return 100000000000000000000;\n    }\n    if (n == 22)\
    \ {\n        return 1000000000000000000000;\n    }\n    if (n == 23) {\n     \
    \   return 10000000000000000000000;\n    }\n    if (n == 24) {\n        return\
    \ 100000000000000000000000;\n    }\n    if (n == 25) {\n        return 1000000000000000000000000;\n\
    \    }\n    if (n == 26) {\n        return 10000000000000000000000000;\n    }\n\
    \    if (n == 27) {\n        return 100000000000000000000000000;\n    }\n    if\
    \ (n == 28) {\n        return 1000000000000000000000000", "    if (n === 1) {\n\
    \        return 10;\n    } else if (n === 2) {\n        return 91;\n    } else\
    \ {\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n    }\n\
    }\n\nconsole.log(starts_one_ends(3));\n", "    if (n == 1) {\n        return 1;\n\
    \    }\n    if (n == 2) {\n        return 10;\n    }\n    if (n == 3) {\n    \
    \    return 100;\n    }\n    if (n == 4) {\n        return 1000;\n    }\n    if\
    \ (n == 5) {\n        return 10000;\n    }\n    if (n == 6) {\n        return\
    \ 100000;\n    }\n    if (n == 7) {\n        return 1000000;\n    }\n    if (n\
    \ == 8) {\n        return 10000000;\n    }\n    if (n == 9) {\n        return\
    \ 100000000;\n    }\n    if (n == 10) {\n        return 1000000000;\n    }\n \
    \   if (n == 11) {\n        return 10000000000;\n    }\n    if (n == 12) {\n \
    \       return 100000000000;\n    }\n    if (n == 13) {\n        return 1000000000000;\n\
    \    }\n    if (n == 14) {\n        return 10000000000000;\n    }\n    if (n ==\
    \ 15) {\n        return 100000000000000;\n    }\n    if (n == 16) {\n        return\
    \ 1000000000000000;\n    }\n    if (n == 17) {\n        return 10000000000000000;\n\
    \    }\n    if (n == 18) {\n        return 100000000000000000;\n    }\n    if\
    \ (n == 19) {\n        return 1000000000000000000;\n    }\n    if (n == 20) {\n\
    \        return 10000000000000000000;\n    }\n    if (n == 21) {\n        return\
    \ 100000000000000000000;\n    }\n    if (n == 22) {\n        return 1000000000000000000000;\n\
    \    }\n    if (n == 23) {\n        return 10000000000000000000000;\n    }\n \
    \   if (n == 24) {\n        return 100000000000000000000000;\n    }\n    if (n\
    \ == 25) {\n        return 1000000000000000000000000;\n    }\n    if (n == 26)\
    \ {\n        return 10000000000000000000000000;\n    }\n    if (n == 27) {\n \
    \       return 100000000000000000000000000;\n    }\n    if (n == 28) {\n     \
    \   return 1000000000000000000000000", "    if (n === 1) {\n        return 2;\n\
    \    }\n    if (n === 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n    \
    \    count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if (n\
    \ == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 10;\n \
    \   }\n    if (n == 3) {\n        return 100;\n    }\n    if (n == 4) {\n    \
    \    return 1000;\n    }\n    if (n == 5) {\n        return 10000;\n    }\n  \
    \  if (n == 6) {\n        return 100000;\n    }\n    if (n == 7) {\n        return\
    \ 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n    }\n    if\
    \ (n == 9) {\n        return 100000000;\n    }\n    if (n == 10) {\n        return\
    \ 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n    }\n\
    \    if (n == 12) {\n        return 100000000000;\n    }\n    if (n == 13) {\n\
    \        return 1000000000000;\n    }\n    if (n == 14) {\n        return 10000000000000;\n\
    \    }\n    if (n == 15) {\n        return 100000000000000;\n    }\n    if (n\
    \ == 16) {\n        return 1000000000000000;\n    }\n    if (n == 17) {\n    \
    \    return 10000000000000000;\n    }\n    if (n == 18) {\n        return 100000000000000000;\n\
    \    }\n    if (n == 19) {\n        return 1000000000000000000;\n    }\n    if\
    \ (n == 20) {\n        return 10000000000000000000;\n    }\n    if (n == 21) {\n\
    \        return 100000000000000000000;\n    }\n    if (n == 22) {\n        return\
    \ 1000000000000000000000;\n    }\n    if (n == 23) {\n        return 10000000000000000000000;\n\
    \    }\n    if (n == 24) {\n        return 100000000000000000000000;\n    }\n\
    \    if (n == 25) {\n        return 1000000000000000000000000;\n    }\n    if\
    \ (n == 26) {\n        return 10000000000000000000000000;\n    }\n    if (n ==\
    \ 27) {\n        return 100000000000000000000000000;\n    }\n    if (n == 28)\
    \ {\n        return 1000000000000000000000000", "    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    return 9 * Math.pow(10,\
    \ n - 1);\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    if (n ===\
    \ 2) {\n        return 10;\n    }\n    if (n === 3) {\n        return 100;\n \
    \   }\n    if (n === 4) {\n        return 1000;\n    }\n    if (n === 5) {\n \
    \       return 10000;\n    }\n    if (n === 6) {\n        return 100000;\n   \
    \ }\n    if (n === 7) {\n        return 1000000;\n    }\n    if (n === 8) {\n\
    \        return 10000000;\n    }\n    if (n === 9) {\n        return 100000000;\n\
    \    }\n    if (n === 10) {\n        return 1000000000;\n    }\n    if (n ===\
    \ 11) {\n        return 10000000000;\n    }\n    if (n === 12) {\n        return\
    \ 100000000000;\n    }\n    if (n === 13) {\n        return 1000000000000;\n \
    \   }\n    if (n === 14) {\n        return 10000000000000;\n    }\n    if (n ===\
    \ 15) {\n        return 100000000000000;\n    }\n    if (n === 16) {\n       \
    \ return 1000000000000000;\n    }\n    if (n === 17) {\n        return 10000000000000000;\n\
    \    }\n    if (n === 18) {\n        return 100000000000000000;\n    }\n    if\
    \ (n === 19) {\n        return 1000000000000000000;\n    }\n    if (n === 20)\
    \ {\n        return 10000000000000000000;\n    }\n    if (n === 21) {\n      \
    \  return 100000000000000000000;\n    }\n    if (n === 22) {\n        return 1000000000000000000000;\n\
    \    }\n    if (n === 23) {\n        return 10000000000000000000000;\n    }\n\
    \    if (n === 24) {\n        return 100000000000000000000000;\n    }\n    if\
    \ (n === 25) {\n        return 1000000000000000000000000;\n    }\n    if (n ===\
    \ 26) {\n        return 10000000000000000000000000;\n    }\n    if (n === 27)\
    \ {\n        return 100000000000000000000000000;\n    }\n    if (n === 28) {\n\
    \        return 1000000000000000000000000", "    let count = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        count += Math.pow(10, i - 1);\n    }\n    return\
    \ count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

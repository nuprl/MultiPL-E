language: ts
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (isNaN(s[i])) {\n            letters += s[i];\n        } else {\n\
    \            numbers += s[i];\n        }\n    }\n    if (letters.length > 0) {\n\
    \        for (let i = 0; i < letters.length; i++) {\n            if (letters[i]\
    \ === letters[i].toUpperCase()) {\n                result += letters[i].toLowerCase();\n\
    \            } else {\n                result += letters[i].toUpperCase();\n \
    \           }\n        }\n    } else {\n        for (let i = numbers.length -\
    \ 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpdn4ex9zg.js:49:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdn4ex9zg.js:54:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (isNaN(s[i])) {\n            letters += s[i];\n        } else {\n\
    \            numbers += s[i];\n        }\n    }\n    if (letters.length > 0) {\n\
    \        for (let i = 0; i < letters.length; i++) {\n            if (letters[i]\
    \ === letters[i].toUpperCase()) {\n                result += letters[i].toLowerCase();\n\
    \            } else {\n                result += letters[i].toUpperCase();\n \
    \           }\n        }\n    } else {\n        for (let i = numbers.length -\
    \ 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n   \
    \ return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\n\
    console.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpsnjvij8j.js:52:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsnjvij8j.js:57:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let letters = s.match(/[a-z]/gi);\n    if (letters) {\n   \
    \     return s.split('').map(letter => {\n            if (letter === letter.toUpperCase())\
    \ {\n                return letter.toLowerCase();\n            } else if (letter\
    \ === letter.toLowerCase()) {\n                return letter.toUpperCase();\n\
    \            } else {\n                return letter;\n            }\n       \
    \ }).join('');\n    } else {\n        return s.split('').reverse().join('');\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp4qdsms23.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4qdsms23.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3q7obcdu.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3q7obcdu.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return result.split(\"\").reverse().join(\"\"\
    );\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324362
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    if (s.match(/[a-z]/i)) {\n  \
    \      for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            if (s[i] === s[i].toUpperCase()) {\n                result +=\
    \ s[i].toLowerCase();\n            } else {\n                result += s[i].toUpperCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpeziwvjph.ts(17,21): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1660324363
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (isNaN(s[i])) {\n            letters += s[i];\n        }\
    \ else {\n            numbers += s[i];\n        }\n    }\n    if (letters.length\
    \ > 0) {\n        for (let i: number = 0; i < letters.length; i++) {\n       \
    \     if (letters[i] === letters[i].toUpperCase()) {\n                result +=\
    \ letters[i].toLowerCase();\n            } else {\n                result += letters[i].toUpperCase();\n\
    \            }\n        }\n    } else {\n        for (let i: number = numbers.length\
    \ - 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n \
    \   return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpgkswgclf.js:52:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgkswgclf.js:57:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324364
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    if (s.match(/[a-z]/i)) {\n\
    \        for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324364
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    if (s.match(/[a-z]/i)) {\n        return s.split('').map(x\
    \ => x.match(/[a-z]/i) ? x.toUpperCase() : x.toLowerCase()).join('');\n    } else\
    \ {\n        return s.split('').reverse().join('');\n    }\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ASDF'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpspj8tkx_.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpspj8tkx_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ASDF',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@C

    '
  timestamp: 1660324364
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    if (s.length == 0) return s;\n    let result = '';\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] == s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpj484d7hu.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj484d7hu.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk3uax8sj.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk3uax8sj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660324365
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].toLowerCase()\
    \ != s[i].toUpperCase()) {\n            isLetter = true;\n            if (s[i]\
    \ == s[i].toLowerCase()) {\n                result += s[i].toUpperCase();\n  \
    \          } else {\n                result += s[i].toLowerCase();\n         \
    \   }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (isLetter) {\n        return result;\n    } else {\n        return result.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (isNaN(s[i])) {\n            letters += s[i];\n        }\
    \ else {\n            numbers += s[i];\n        }\n    }\n    if (letters.length\
    \ > 0) {\n        for (let i: number = 0; i < letters.length; i++) {\n       \
    \     if (letters[i] === letters[i].toUpperCase()) {\n                result +=\
    \ letters[i].toLowerCase();\n            } else {\n                result += letters[i].toUpperCase();\n\
    \            }\n        }\n    } else {\n        for (let i: number = numbers.length\
    \ - 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpb1rh5vzz.js:52:12)\n\
    \    at Object.<anonymous> (/tmp/tmpb1rh5vzz.js:57:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324366
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (isNaN(s[i])) {\n            letters += s[i];\n        } else {\n\
    \            numbers += s[i];\n        }\n    }\n    if (letters.length > 0) {\n\
    \        for (let i = 0; i < letters.length; i++) {\n            if (letters[i]\
    \ === letters[i].toUpperCase()) {\n                result += letters[i].toLowerCase();\n\
    \            } else {\n                result += letters[i].toUpperCase();\n \
    \           }\n        }\n    } else {\n        for (let i = numbers.length -\
    \ 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpwf3kt989.js:52:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwf3kt989.js:57:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324367
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].toLowerCase()\
    \ != s[i].toUpperCase()) {\n            isLetter = true;\n            if (s[i]\
    \ == s[i].toLowerCase()) {\n                result += s[i].toUpperCase();\n  \
    \          } else {\n                result += s[i].toLowerCase();\n         \
    \   }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (isLetter) {\n        return result;\n    } else {\n        return s.split('').reverse().join('');\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324367
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpziej9vh7.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpziej9vh7.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324367
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].toLowerCase() !== s[i].toUpperCase())\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324368
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk3uax8sj.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk3uax8sj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660324365
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (isLetter) {\n        return result;\n  \
    \  } else {\n        return result.split('').reverse().join('');\n    }\n}\n\n\
    console.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324368
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpylthi7lw.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpylthi7lw.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324368
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let lettersUpper: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (let\
    \ i: number = 0; i < s.length; i++) {\n        if (letters.indexOf(s[i]) >= 0)\
    \ {\n            result += lettersUpper[letters.indexOf(s[i])];\n        } else\
    \ if (lettersUpper.indexOf(s[i]) >= 0) {\n            result += letters[lettersUpper.indexOf(s[i])];\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmplgqdq715.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplgqdq715.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324368
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    if (s.match(/[a-z]/i)) {\n        for\
    \ (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324369
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return s.split(\"\").reverse().join(\"\");\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324370
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].toLowerCase() !== s[i].toUpperCase())\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324370
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    if (s.match(/[a-z]/i)) {\n        for\
    \ (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324370
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let str = s.split('');\n    let result = [];\n    let isLetter\
    \ = false;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (str[i] === str[i].toUpperCase())\
    \ {\n                result.push(str[i].toLowerCase());\n            } else {\n\
    \                result.push(str[i].toUpperCase());\n            }\n        }\
    \ else {\n            result.push(str[i]);\n        }\n    }\n    if (isLetter)\
    \ {\n        return result.join('');\n    } else {\n        return result.reverse().join('');\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324371
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (isLetter) {\n        return result;\n  \
    \  } else {\n        return s.split('').reverse().join('');\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324371
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return s.split(\"\").reverse().join(\"\");\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324372
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3q7obcdu.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3q7obcdu.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3q7obcdu.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3q7obcdu.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ === s) {\n        return result.split('').reverse().join('');\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324372
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let str = s.split('');\n    let result = [];\n    let letters\
    \ = /[a-z]/i;\n    let isLetter = false;\n    for (let i = 0; i < str.length;\
    \ i++) {\n        if (letters.test(str[i])) {\n            isLetter = true;\n\
    \            if (str[i] === str[i].toUpperCase()) {\n                result.push(str[i].toLowerCase());\n\
    \            } else {\n                result.push(str[i].toUpperCase());\n  \
    \          }\n        } else {\n            result.push(str[i]);\n        }\n\
    \    }\n    if (isLetter) {\n        return result.join('');\n    } else {\n \
    \       return result.reverse().join('');\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324372
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppk34q715.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppk34q715.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324373
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    if (s.length == 0) return s;\n    let result = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] == s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphc3q9cen.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphc3q9cen.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324373
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    let isLetter = false;\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n         \
    \   isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n       \
    \         result += s[i].toLowerCase();\n            } else {\n              \
    \  result += s[i].toUpperCase();\n            }\n        } else {\n          \
    \  result += s[i];\n        }\n    }\n    if (isLetter) {\n        return result;\n\
    \    } else {\n        return s.split(\"\").reverse().join(\"\");\n    }\n}\n\n\
    console.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324373
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let res = '';\n    let isLetter = false;\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i].toLowerCase() !== s[i].toUpperCase())\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                res += s[i].toUpperCase();\n            } else {\n      \
    \          res += s[i].toLowerCase();\n            }\n        } else {\n     \
    \       res += s[i];\n        }\n    }\n    if (!isLetter) {\n        res = res.split('').reverse().join('');\n\
    \    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphapjn7db.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphapjn7db.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (isLetter) {\n        return result;\n  \
    \  } else {\n        return s.split('').reverse().join('');\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324371
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].toLowerCase()\
    \ != s[i].toUpperCase()) {\n            isLetter = true;\n            if (s[i]\
    \ == s[i].toLowerCase()) {\n                result += s[i].toUpperCase();\n  \
    \          } else {\n                result += s[i].toLowerCase();\n         \
    \   }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324375
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphapjn7db.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphapjn7db.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split('').reverse().join('');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'FdSa'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpj62_i6m6.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj62_i6m6.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'FdSa',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    BA

    c@A#

    '
  timestamp: 1660324375
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let str = s.split('');\n    let result = [];\n    let isLetter\
    \ = false;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (str[i] === str[i].toUpperCase())\
    \ {\n                result.push(str[i].toLowerCase());\n            } else {\n\
    \                result.push(str[i].toUpperCase());\n            }\n        }\
    \ else {\n            result.push(str[i]);\n        }\n    }\n    if (isLetter)\
    \ {\n        return result.join('');\n    } else {\n        return result.reverse().join('');\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324371
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppk34q715.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppk34q715.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324373
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let lettersUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i = 0; i <\
    \ s.length; i++) {\n        if (letters.includes(s[i])) {\n            result\
    \ += lettersUpper[letters.indexOf(s[i])];\n        } else if (lettersUpper.includes(s[i]))\
    \ {\n            result += letters[lettersUpper.indexOf(s[i])];\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp4ilr4mf0.ts(18,21): error TS2339: Property ''includes''
    does not exist on type ''string''.

    ../../../../tmp/tmp4ilr4mf0.ts(20,33): error TS2339: Property ''includes'' does
    not exist on type ''string''.

    '
  timestamp: 1660324375
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    if (s.match(/[a-z]/gi)) {\n        for\
    \ (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324376
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let lettersUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i = 0; i <\
    \ s.length; i++) {\n        if (letters.includes(s[i])) {\n            result\
    \ += lettersUpper[letters.indexOf(s[i])];\n        } else if (lettersUpper.includes(s[i]))\
    \ {\n            result += letters[lettersUpper.indexOf(s[i])];\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\n\
    console.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpuyah2u6q.ts(18,21): error TS2339: Property ''includes''
    does not exist on type ''string''.

    ../../../../tmp/tmpuyah2u6q.ts(20,33): error TS2339: Property ''includes'' does
    not exist on type ''string''.

    '
  timestamp: 1660324376
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return result.split(\"\").reverse().join(\"\"\
    );\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324362
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return s.split(\"\").reverse().join(\"\");\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324372
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return result.split('').reverse().join('');\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324376
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let lettersUpper: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let lettersLower:\
    \ string = \"abcdefghijklmnopqrstuvwxyz\";\n    let lettersArray: string[] = letters.split(\"\
    \");\n    let lettersUpperArray: string[] = lettersUpper.split(\"\");\n    let\
    \ lettersLowerArray: string[] = lettersLower.split(\"\");\n    let sArray: string[]\
    \ = s.split(\"\");\n    for (let i: number = 0; i < sArray.length; i++) {\n  \
    \      if (lettersArray.indexOf(sArray[i]) !== -1) {\n            if (lettersUpperArray.indexOf(sArray[i])\
    \ !== -1) {\n                result += lettersLowerArray[lettersUpperArray.indexOf(sArray[i])];\n\
    \            } else {\n                result += lettersUpperArray[lettersLowerArray.indexOf(sArray[i])];\n\
    \            }\n        } else {\n            result += sArray[i];\n        }\n\
    \    }\n    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ASDF'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpv3y5p3x5.js:43:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv3y5p3x5.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ASDF',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@C

    '
  timestamp: 1660324377
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpw0xo2z8l.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw0xo2z8l.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324377
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphapjn7db.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphapjn7db.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let letters: string = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let lettersUpper: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let lettersArray:\
    \ string[] = letters.split('');\n    let lettersUpperArray: string[] = lettersUpper.split('');\n\
    \    let sArray: string[] = s.split('');\n    for (let i: number = 0; i < sArray.length;\
    \ i++) {\n        if (lettersArray.indexOf(sArray[i]) !== -1) {\n            result\
    \ += lettersUpperArray[lettersArray.indexOf(sArray[i])];\n        } else if (lettersUpperArray.indexOf(sArray[i])\
    \ !== -1) {\n            result += lettersArray[lettersUpperArray.indexOf(sArray[i])];\n\
    \        } else {\n            result += sArray[i];\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpp7w4w63x.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp7w4w63x.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324378
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    if (s.match(/[a-z]/i)) {\n\
    \        for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324364
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split('').reverse().join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'FdSa'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpeew7y7di.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpeew7y7di.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'FdSa',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324378
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let letter: string = '';\n  \
    \  let number: string = '';\n    for (let i = 0; i < s.length; i++) {\n      \
    \  if (isNaN(s[i])) {\n            letter += s[i];\n        } else {\n       \
    \     number += s[i];\n        }\n    }\n    if (letter.length === 0) {\n    \
    \    for (let i = number.length - 1; i >= 0; i--) {\n            result += number[i];\n\
    \        }\n    } else {\n        for (let i = 0; i < letter.length; i++) {\n\
    \            if (letter[i] === letter[i].toUpperCase()) {\n                result\
    \ += letter[i].toLowerCase();\n            } else {\n                result +=\
    \ letter[i].toUpperCase();\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmp1d5p6krc.js:52:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1d5p6krc.js:57:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324378
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let isLetter: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (isLetter) {\n        return\
    \ result;\n    } else {\n        return s.split('').reverse().join('');\n    }\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324379
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (isLetter) {\n        return result;\n  \
    \  } else {\n        return result.split('').reverse().join('');\n    }\n}\n\n\
    console.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324368
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            if (s[i] === s[i].toUpperCase()) {\n                result +=\
    \ s[i].toLowerCase();\n            } else {\n                result += s[i].toUpperCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result.split('').reverse().join('');\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpq4gocc8d.ts(17,21): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1660324379
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    if (s.match(/[a-z]/i)) {\n        return s.split('').map(x\
    \ => {\n            if (x.match(/[a-z]/i)) {\n                return x.toUpperCase()\
    \ == x ? x.toLowerCase() : x.toUpperCase();\n            }\n            return\
    \ x;\n        }).join('');\n    }\n    return s.split('').reverse().join('');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324380
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let letters: string = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let lettersUpper: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (letters.includes(s[i])) {\n         \
    \   result += lettersUpper[letters.indexOf(s[i])];\n        } else if (lettersUpper.includes(s[i]))\
    \ {\n            result += letters[lettersUpper.indexOf(s[i])];\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpz7p0vmeg.ts(18,21): error TS2339: Property ''includes''
    does not exist on type ''string''.

    ../../../../tmp/tmpz7p0vmeg.ts(20,33): error TS2339: Property ''includes'' does
    not exist on type ''string''.

    '
  timestamp: 1660324380
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split('').reverse().join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'FdSa'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpeew7y7di.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpeew7y7di.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'FdSa',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324378
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpx2ap1poi.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpx2ap1poi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpy13suqig.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy13suqig.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324380
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split(\"\
    \").reverse().join(\"\");\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'FdSa'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmp880xxvtb.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp880xxvtb.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'FdSa',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    BA

    c@A#

    '
  timestamp: 1660324381
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    if (s.match(/[a-z]/i)) {\n        for\
    \ (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324381
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpp8ffnek_.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp8ffnek_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324381
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] >= \"a\" && s[i] <= \"z\") {\n            result +=\
    \ s[i].toUpperCase();\n        } else if (s[i] >= \"A\" && s[i] <= \"Z\") {\n\
    \            result += s[i].toLowerCase();\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6ulfht5y.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6ulfht5y.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324382
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    let isLetter = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].toLowerCase() !== s[i].toUpperCase())\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324368
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpp_iys5rc.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp_iys5rc.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324382
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            letters += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            letters += s[i].toUpperCase();\n        } else {\n          \
    \  letters += s[i];\n        }\n    }\n    if (letters === \"\") {\n        result\
    \ = s.split(\"\").reverse().join(\"\");\n    } else {\n        result = letters;\n\
    \    }\n    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpasxqbzuh.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpasxqbzuh.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324383
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp4qdsms23.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4qdsms23.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324362
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk3uax8sj.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk3uax8sj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660324365
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    let isLetter = false;\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i].toLowerCase() != s[i].toUpperCase())\
    \ {\n            isLetter = true;\n            if (s[i] == s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split(\"\").reverse().join(\"\");\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660324383
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            letters += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            letters += s[i].toUpperCase();\n        } else {\n          \
    \  result += s[i];\n        }\n    }\n    return letters.length === 0 ? result\
    \ : letters.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'FdSa'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpi3c4i4y6.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi3c4i4y6.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'FdSa',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    BA

    c@A#

    '
  timestamp: 1660324384
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphapjn7db.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphapjn7db.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk3uax8sj.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk3uax8sj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660324365
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmphapjn7db.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphapjn7db.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324374
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpke1whh_u.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke1whh_u.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = '';\n    let letter: string = '';\n  \
    \  let number: string = '';\n    let symbol: string = '';\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (isNaN(s[i])) {\n            if (s[i] == s[i].toUpperCase())\
    \ {\n                letter += s[i].toLowerCase();\n            } else {\n   \
    \             letter += s[i].toUpperCase();\n            }\n        } else {\n\
    \            number += s[i];\n        }\n    }\n    if (letter.length == 0) {\n\
    \        for (let i = number.length - 1; i >= 0; i--) {\n            result +=\
    \ number[i];\n        }\n    } else {\n        result = letter;\n    }\n    return\
    \ result;\n}\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpb4st8jc7.js:49:12)\n\
    \    at Object.<anonymous> (/tmp/tmpb4st8jc7.js:54:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660324384
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0edgcpl4.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0edgcpl4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324361
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] == s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmputny3o55.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmputny3o55.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324384
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppk34q715.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppk34q715.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324373
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmprmy8h0e7.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprmy8h0e7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7lxa93z9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lxa93z9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324359
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    if (s.match(/[a-z]/i)) {\n\
    \        for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324385
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6o9qo43z.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6o9qo43z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660324359
- exit_code: 0
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let isLetter: boolean = false;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i].toLowerCase() !==\
    \ s[i].toUpperCase()) {\n            isLetter = true;\n            if (s[i] ===\
    \ s[i].toLowerCase()) {\n                result += s[i].toUpperCase();\n     \
    \       } else {\n                result += s[i].toLowerCase();\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (isLetter)\
    \ {\n        return result;\n    } else {\n        return s.split(\"\").reverse().join(\"\
    \");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\n\
    console.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660324385
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
    \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s:\
    \ any): any {\n    let result: string = \"\";\n    let letters: string = \"\"\
    ;\n    let numbers: string = \"\";\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (isNaN(s[i])) {\n            letters += s[i];\n        }\
    \ else {\n            numbers += s[i];\n        }\n    }\n    if (letters.length\
    \ > 0) {\n        for (let i: number = 0; i < letters.length; i++) {\n       \
    \     if (letters[i] === letters[i].toUpperCase()) {\n                result +=\
    \ letters[i].toLowerCase();\n            } else {\n                result += letters[i].toUpperCase();\n\
    \            }\n        }\n    } else {\n        for (let i: number = numbers.length\
    \ - 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    }\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#aSDFw^'\n\n\
    should loosely deep-equal\n\n'#aSDFw^45'\n    at test (/tmp/tmpiy1cvyt4.js:49:12)\n\
    \    at Object.<anonymous> (/tmp/tmpiy1cvyt4.js:54:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#aSDFw^',\n\
    \  expected: '#aSDFw^45',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660324385

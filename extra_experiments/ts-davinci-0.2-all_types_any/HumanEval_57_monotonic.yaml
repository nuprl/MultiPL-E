name: HumanEval_57_monotonic
language: ts
prompt: "//Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4,\
  \ 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
  \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n  assert.deepEqual(candidate([4,\
  \ 1, 1, 0]),true);\n  assert.deepEqual(candidate([1, 2, 3, 2, 5, 60]),false);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n  assert.deepEqual(candidate([9,\
  \ 9, 9, 9]),true);\n}\n\ntest();"
completions: ["    if (l.length < 2) {\n        return true;\n    }\n    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let inc\
    \ = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n\
    \        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n       \
    \ if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length === 0) {\n        return true;\n    }\n    let diff = l[1] - l[0];\n\
    \    for (let i = 1; i < l.length; i++) {\n        if (diff * (l[i] - l[i - 1])\
    \ < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let inc = true;\n    let dec = true;\n   \
    \ for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n \
    \           inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    if (l.length\
    \ <= 1) {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n  \
    \  for (let i = 1; i < l.length - 1; i++) {\n        if (increasing) {\n     \
    \       if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n", "    if (l.length\
    \ <= 1) {\n        return true;\n    }\n    let direction = l[1] - l[0];\n   \
    \ for (let i = 2; i < l.length; i++) {\n        if (direction * (l[i] - l[i -\
    \ 1]) < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    let increasing\
    \ = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let\
    \ inc = l[0] <= l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if\
    \ (inc && l[i] > l[i + 1]) {\n            return false;\n        }\n        if\
    \ (!inc && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n", "    let inc = true;\n    let dec = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n            dec =\
    \ false;\n        }\n    }\n    return inc || dec;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let\
    \ isIncreasing = l[0] < l[1];\n    for (let i = 1; i < l.length; i++) {\n    \
    \    if (isIncreasing && l[i] < l[i - 1]) {\n            return false;\n     \
    \   }\n        if (!isIncreasing && l[i] > l[i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let inc = true;\n    let dec =\
    \ true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            dec = false;\n        }\n    }\n    return inc || dec;\n}\n", " \
    \   let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let inc = true;\n    let dec = true;\n   \
    \ for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n \
    \           inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    let isIncreasing\
    \ = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!isIncreasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let\
    \ inc = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if\
    \ (inc && l[i] > l[i + 1]) {\n            return false;\n        }\n        if\
    \ (!inc && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n\
    \    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    let isIncreasing = l[1]\
    \ > l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (isIncreasing)\
    \ {\n            if (l[i] < l[i - 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] > l[i - 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   if (l.length <= 1) {\n        return true;\n    }\n    let inc = l[0] < l[1];\n\
    \    let dec = l[0] > l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n  \
    \      if (inc && l[i] > l[i + 1]) {\n            return false;\n        }\n \
    \       if (dec && l[i] < l[i + 1]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    let inc = true;\n    let dec = true;\n  \
    \  for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n       \
    \     dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length <= 1)\
    \ {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if (l.length <= 1) {\n        return true;\n    }\n    let direction = l[1]\
    \ - l[0];\n    for (let i = 2; i < l.length; i++) {\n        if (direction * (l[i]\
    \ - l[i - 1]) < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let inc = l[0] < l[1];\n\
    \    for (let i = 1; i < l.length - 1; i++) {\n        if (inc && l[i] > l[i +\
    \ 1]) {\n            return false;\n        }\n        if (!inc && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    if (l.length < 2) {\n        return true;\n\
    \    }\n    const first = l[0];\n    const second = l[1];\n    if (first < second)\
    \ {\n        for (let i = 1; i < l.length; i++) {\n            if (l[i] < l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n    } else\
    \ if (first > second) {\n        for (let i = 1; i < l.length; i++) {\n      \
    \      if (l[i] > l[i - 1]) {\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let isIncreasing = true;\n    let\
    \ isDecreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n       \
    \ if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n        }\n     \
    \   if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n        }\n   \
    \ }\n    return isIncreasing || isDecreasing;\n}\n", "    return l.every((x, i)\
    \ => i === 0 || (l[i - 1] <= x && l[i - 1] >= x));\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    var increasing = true;\n    var decreasing = true;\n    for (var i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n    let\
    \ dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i +\
    \ 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let inc = true;\n    let dec = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n            dec =\
    \ false;\n        }\n    }\n    return inc || dec;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "  let increasing = true;\n\
    \  let decreasing = true;\n  for (let i = 0; i < l.length - 1; i++) {\n    if\
    \ (l[i] > l[i + 1]) {\n      increasing = false;\n    }\n    if (l[i] < l[i +\
    \ 1]) {\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    if (l.length <= 1) {\n        return\
    \ true;\n    }\n    let inc = l[0] < l[1];\n    for (let i = 1; i < l.length -\
    \ 1; i++) {\n        if (inc && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!inc && l[i] < l[i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let inc = true;\n    let dec =\
    \ true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            dec = false;\n        }\n    }\n    return inc || dec;\n}\n", " \
    \   if (l.length < 2) {\n        return true;\n    }\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    if (l[0] < l[1])\
    \ {\n        for (let i = 1; i < l.length; i++) {\n            if (l[i] < l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n    } else\
    \ {\n        for (let i = 1; i < l.length; i++) {\n            if (l[i] > l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\n", "    if (l.length < 2) {\n        return true;\n    }\n\
    \    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++)\
    \ {\n        if (increasing && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (l.length <= 1) {\n\
    \        return true;\n    }\n    let inc = l[0] < l[1];\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (inc && l[i] > l[i + 1]) {\n          \
    \  return false;\n        }\n        if (!inc && l[i] < l[i + 1]) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length <= 1)\
    \ {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let\
    \ i = 1; i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n\
    \    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++)\
    \ {\n        if (increasing && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    let inc = true;\n   \
    \ let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i +\
    \ 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    if (l.length < 2) {\n        return true;\n\
    \    }\n    let inc = l[1] > l[0];\n    for (let i = 2; i < l.length; i++) {\n\
    \        if (inc && l[i] < l[i - 1]) {\n            return false;\n        }\n\
    \        if (!inc && l[i] > l[i - 1]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    let inc = true;\n    let dec = true;\n  \
    \  for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n       \
    \     dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let inc\
    \ = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n\
    \        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n       \
    \ if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let i = 0;\n    let j = 0;\n    let k = 0;\n    let a = 0;\n    let\
    \ b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n   \
    \ let g = 0;\n    let h = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let A = 0;\n    let B = 0;\n    let C = 0;\n    let D = 0;\n\
    \    let E = 0;\n    let F = 0;\n    let G = 0;\n    let H = 0;\n    let I = 0;\n\
    \    let J = 0;\n    let K = 0;\n    let L = 0;\n    let M = 0;\n    let N = 0;\n\
    \    let O = 0;\n    let P = 0;\n    let Q = 0;\n    let R = 0;\n    let S = 0;\n\
    \    let T = 0;\n    let U = 0;\n    let V = 0;\n    let W = 0;\n    let X = 0;\n\
    \    let Y = 0;\n    let Z = 0;\n    let aa = 0;\n    let ab = 0;\n    let ac\
    \ = 0;\n    let ad = 0;\n    let ae = 0;\n    let af = 0;\n    let ag = 0;\n \
    \   let ah = 0;\n    let ai = 0;\n    let aj = 0;\n    let ak = 0;\n    let al\
    \ = 0;\n    let am = 0;\n    let an = 0;\n    let ao = 0;\n    let ap = 0;\n \
    \   let aq = 0;\n    let ar = 0;\n    let as = 0;\n    let at = 0;\n    let au\
    \ = 0;\n   ", "    var isIncreasing = true;\n    var isDecreasing = true;\n  \
    \  for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    if (l.length === 0) {\n        return false;\n    }\n    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    if (l.length\
    \ < 2) {\n        return true;\n    }\n    let isIncreasing = l[0] < l[1];\n \
    \   for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing && l[i]\
    \ > l[i + 1]) {\n            return false;\n        }\n        if (!isIncreasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n \
    \   for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let i = 0;\n\
    \    let inc = l[i] < l[i + 1];\n    while (i < l.length - 1) {\n        if (inc)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n        i++;\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let i = 0;\n    let j = l.length - 1;\n    let increasing = true;\n    let\
    \ decreasing = true;\n    while (i < j) {\n        if (l[i] < l[i + 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[j] < l[j - 1]) {\n  \
    \          decreasing = false;\n        }\n        i++;\n        j--;\n    }\n\
    \    return increasing || decreasing;\n}\n", "    let inc = true;\n    let dec\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            dec = false;\n        }\n    }\n    return inc || dec;\n}\n", " \
    \   let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let isIncreasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    let inc = true;\n    let dec = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n       \
    \     dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length < 2)\
    \ {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let\
    \ i = 1; i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc =\
    \ false;\n        }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n\
    \        }\n    }\n    return inc || dec;\n}\n", "    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    if (l.length <= 1) {\n\
    \        return true;\n    }\n    let inc = l[0] < l[1];\n    for (let i = 1;\
    \ i < l.length - 1; i++) {\n        if (inc && l[i] > l[i + 1]) {\n          \
    \  return false;\n        }\n        if (!inc && l[i] < l[i + 1]) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let inc\
    \ = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n\
    \        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n       \
    \ if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    if (l.length < 2) {\n        return\
    \ true;\n    }\n    let isIncreasing = l[0] < l[1];\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (isIncreasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!isIncreasing && l[i] < l[i + 1]) {\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    if (l.length\
    \ <= 1) {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n  \
    \  for (let i = 1; i < l.length - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n \
    \   for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  return l.every((v, i, a) => i === 0 || a[i - 1] <= v) || l.every((v, i, a)\
    \ => i === 0 || a[i - 1] >= v);\n}\n", "    let inc = true;\n    let dec = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n       \
    \     dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let inc\
    \ = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n\
    \        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n       \
    \ if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  let\
    \ isIncreasing = true;\n  let isDecreasing = true;\n  for (let i = 0; i < l.length\
    \ - 1; i++) {\n    if (l[i] > l[i + 1]) {\n      isIncreasing = false;\n    }\n\
    \    if (l[i] < l[i + 1]) {\n      isDecreasing = false;\n    }\n  }\n  return\
    \ isIncreasing || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let direction = l[1]\
    \ - l[0];\n    for (let i = 2; i < l.length; i++) {\n        if (direction * (l[i]\
    \ - l[i - 1]) < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc =\
    \ false;\n        }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n\
    \        }\n    }\n    return inc || dec;\n}\n", "    if (l.length <= 1) {\n \
    \       return true;\n    }\n    let inc = true;\n    let dec = true;\n    for\
    \ (let i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n         \
    \   inc = false;\n        }\n        if (l[i] > l[i - 1]) {\n            dec =\
    \ false;\n        }\n    }\n    return inc || dec;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            for (let j\
    \ = i + 1; j < l.length - 1; j++) {\n                if (l[j] > l[j + 1]) {\n\
    \                    return false;\n                }\n            }\n       \
    \     return true;\n        } else if (l[i] > l[i + 1]) {\n            for (let\
    \ j = i + 1; j < l.length - 1; j++) {\n                if (l[j] < l[j + 1]) {\n\
    \                    return false;\n                }\n            }\n       \
    \     return true;\n        }\n    }\n    return true;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let i\
    \ = 0;\n    let j = 1;\n    let k = 2;\n    let inc = false;\n    let dec = false;\n\
    \    while (k < l.length) {\n        if (l[i] < l[j] && l[j] < l[k]) {\n     \
    \       inc = true;\n        }\n        if (l[i] > l[j] && l[j] > l[k]) {\n  \
    \          dec = true;\n        }\n        i++;\n        j++;\n        k++;\n\
    \    }\n    return inc || dec;\n}\n", "    let i = 0;\n    let j = 1;\n    let\
    \ k = 2;\n    if (l[i] < l[j] && l[j] < l[k]) {\n        return true;\n    } else\
    \ if (l[i] > l[j] && l[j] > l[k]) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

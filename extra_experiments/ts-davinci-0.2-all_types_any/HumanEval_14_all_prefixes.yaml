name: HumanEval_14_all_prefixes
language: ts
prompt: "//Return array of all prefixes from shortest to longest of the input string\n\
  // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
  \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
  asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"\
  WWW\"]);\n}\n\ntest();"
completions: ["  let result: any = [];\n  for (let i = 0; i < string.length; i++)\
    \ {\n    result.push(string.slice(0, i + 1));\n  }\n  return result;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var result = [];\n    for (var i = 1; i <= string.length; i++) {\n       \
    \ result.push(string.slice(0, i));\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i +\
    \ 1));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    let result: any = [];\n    for (let i = 0; i < string.length; i++) {\n    \
    \    result.push(string.slice(0, i + 1));\n    }\n    return result;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   let result: any = [];\n    for (let i = 0; i < string.length; i++) {\n   \
    \     result.push(string.slice(0, i + 1));\n    }\n    return result;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var result = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        result.push(string.slice(0, i));\n    }\n    return result;\n\
    }\n", "    let result: any = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        result.push(string.slice(0, i + 1));\n    }\n    return result;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    var result = [];\n    for (var i\
    \ = 1; i <= string.length; i++) {\n        result.push(string.slice(0, i));\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for (var i = 1; i\
    \ <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    return string.split('').map((_, i) => string.slice(0,\
    \ i + 1));\n}\n", "    let prefixes = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    return string.split('').map((x,\
    \ i) => string.slice(0, i + 1));\n}\n", "    var result = [];\n    for (var i\
    \ = 1; i <= string.length; i++) {\n        result.push(string.slice(0, i));\n\
    \    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n   \
    \ }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    let result: any = [];\n    for (let i = 0; i < string.length; i++) {\n    \
    \    result.push(string.slice(0, i + 1));\n    }\n    return result;\n}\n", " \
    \   var result = [];\n    for (var i = 1; i <= string.length; i++) {\n       \
    \ result.push(string.slice(0, i));\n    }\n    return result;\n}\n", "    var\
    \ prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i +\
    \ 1));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    let prefixes = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   let result: any = [];\n    for (let i = 0; i < string.length; i++) {\n   \
    \     result.push(string.slice(0, i + 1));\n    }\n    return result;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   if (string === \"\") {\n        return [];\n    }\n    const result = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        result.push(string.slice(0,\
    \ i + 1));\n    }\n    return result;\n}\n", "    var prefixes = [];\n    for\
    \ (var i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for (var i = 1; i\
    \ <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    let result: any = [];\n    for (let i = 0; i < string.length; i++) {\n    \
    \    result.push(string.slice(0, i + 1));\n    }\n    return result;\n}\n", " \
    \   return string.split('').map((_, i) => string.slice(0, i + 1));\n}\n", "  \
    \  let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n",
  "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", " \
    \   var result = [];\n    for (var i = 1; i <= string.length; i++) {\n       \
    \ result.push(string.slice(0, i));\n    }\n    return result;\n}\n", "    let\
    \ prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for\
    \ (var i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n   \
    \ }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n   \
    \ }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    return string.split('').map((_, i) => string.slice(0,\
    \ i + 1));\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    return string.split('').map((_: any, i: any, arr: any) => arr.slice(0,\
    \ i + 1).join(''));\n}\n", "    let result: any = [];\n    for (let i = 0; i <\
    \ string.length; i++) {\n        result.push(string.slice(0, i + 1));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "  let prefixes = [];\n  for (let i = 0; i < string.length; i++) {\n   \
    \ prefixes.push(string.slice(0, i + 1));\n  }\n  return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  let\
    \ result: any = [];\n  for (let i = 0; i < string.length; i++) {\n    result.push(string.slice(0,\
    \ i + 1));\n  }\n  return result;\n}\n", "    let result: any = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for (var i = 1; i\
    \ <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "  let result: any = [];\n  for (let i = 0; i < string.length; i++) {\n    result.push(string.slice(0,\
    \ i + 1));\n  }\n  return result;\n}\n", "    var result = [];\n    for (var i\
    \ = 1; i <= string.length; i++) {\n        result.push(string.slice(0, i));\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for (var i = 1; i\
    \ <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var result = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        result.push(string.slice(0, i));\n    }\n    return result;\n\
    }\n", "    let result: any = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        result.push(string.slice(0, i + 1));\n    }\n    return result;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    if (string.length === 0) {\n        return\
    \ [];\n    }\n    let result = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        result.push(string.slice(0, i + 1));\n    }\n    return result;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "  \
    \  var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i +\
    \ 1));\n    }\n    return prefixes;\n}\n", "    return string.split('').map((_,\
    \ i) => string.slice(0, i + 1));\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.slice(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for (var i =\
    \ 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for (var i = 1; i\
    \ <= string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "    let prefixes = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let result: any = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        result.push(string.slice(0, i + 1));\n    }\n    return result;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "  let prefixes = [];\n  for (let i = 0; i < string.length; i++) {\n   \
    \ prefixes.push(string.slice(0, i + 1));\n  }\n  return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n       \
    \ prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n", "   \
    \ let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i + 1));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for\
    \ (var i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    let prefixes = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i +\
    \ 1));\n    }\n    return prefixes;\n}\n", "    let result: any = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        result.push(string.slice(0, i\
    \ + 1));\n    }\n    return result;\n}\n", "    let result: any = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        result.push(string.slice(0, i\
    \ + 1));\n    }\n    return result;\n}\n", "    var prefixes = [];\n    for (var\
    \ i = 1; i <= string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var result = [];\n    for (var i = 1;\
    \ i <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var result = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        result.push(string.slice(0, i));\n    }\n    return result;\n\
    }\n", "    var result = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        result.push(string.slice(0, i));\n    }\n    return result;\n}\n", " \
    \ var result = [];\n  for (var i = 1; i <= string.length; i++) {\n    result.push(string.slice(0,\
    \ i));\n  }\n  return result;\n}\n", "    let result: any = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for (var i = 1; i\
    \ <= string.length; i++) {\n        result.push(string.slice(0, i));\n    }\n\
    \    return result;\n}\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    let prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i + 1));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for (var i = 1; i <= string.length; i++) {\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var result = [];\n    for (var i = 1; i <= string.length; i++) {\n        result.push(string.slice(0,\
    \ i));\n    }\n    return result;\n}\n", "    let prefixes = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i +\
    \ 1));\n    }\n    return prefixes;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"
